# compiler: R8
# compiler_version: 3.0.62
# min_api: 21
# pg_map_id: 73c29bb
# common_typos_disable
android.arch.core.executor.ArchTaskExecutor -> a.a:
    android.arch.core.executor.ArchTaskExecutor sInstance -> b
    java.util.concurrent.Executor sIOThreadExecutor -> c
    android.arch.core.executor.TaskExecutor mDelegate -> a
    void executeOnDiskIO(java.lang.Runnable) -> a
    boolean isMainThread() -> c
    void postToMainThread(java.lang.Runnable) -> d
    android.arch.core.executor.ArchTaskExecutor getInstance() -> e
android.arch.core.executor.ArchTaskExecutor$2 -> a.a$a:
    1:1:void android.arch.core.executor.ArchTaskExecutor.executeOnDiskIO(java.lang.Runnable):0:0 -> execute
    1:1:void execute(java.lang.Runnable):0 -> execute
android.arch.core.executor.DefaultTaskExecutor -> a.b:
    android.os.Handler mMainHandler -> c
    java.lang.Object mLock -> a
    java.util.concurrent.ExecutorService mDiskIO -> b
    void executeOnDiskIO(java.lang.Runnable) -> a
    boolean isMainThread() -> c
    void postToMainThread(java.lang.Runnable) -> d
android.arch.core.executor.TaskExecutor -> a.c:
    1:1:void android.arch.core.executor.TaskExecutor.<init>():0:0 -> <init>
    1:1:void $r8$init$bridge():0 -> <init>
    void executeOnDiskIO(java.lang.Runnable) -> a
    android.graphics.Path android.support.transition.PathMotion.getPath(float,float,float,float) -> b
    boolean isMainThread() -> c
    void postToMainThread(java.lang.Runnable) -> d
android.arch.core.internal.FastSafeIterableMap -> b.a:
    java.util.HashMap mHashMap -> e
    android.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> a
    1:1:android.arch.core.internal.SafeIterableMap$Entry android.arch.core.internal.FastSafeIterableMap.get(java.lang.Object):0:0 -> c
    1:1:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0 -> c
    2:2:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> c
    java.lang.Object remove(java.lang.Object) -> d
android.arch.core.internal.SafeIterableMap -> b.c:
    int mSize -> d
    java.util.WeakHashMap mIterators -> c
    android.arch.core.internal.SafeIterableMap$Entry mStart -> a
    android.arch.core.internal.SafeIterableMap$Entry mEnd -> b
    android.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> a
    android.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> b
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> c
    java.lang.Object remove(java.lang.Object) -> d
    1:1:int android.arch.core.internal.SafeIterableMap.size():0:0 -> equals
    1:1:boolean equals(java.lang.Object):0 -> equals
    2:2:boolean equals(java.lang.Object):0:0 -> equals
android.arch.core.internal.SafeIterableMap$1 -> b.c$a:
android.arch.core.internal.SafeIterableMap$AscendingIterator -> b.c$b:
    android.arch.core.internal.SafeIterableMap$Entry backward(android.arch.core.internal.SafeIterableMap$Entry) -> b
    android.arch.core.internal.SafeIterableMap$Entry forward(android.arch.core.internal.SafeIterableMap$Entry) -> c
android.arch.core.internal.SafeIterableMap$DescendingIterator -> b.c$c:
    android.arch.core.internal.SafeIterableMap$Entry backward(android.arch.core.internal.SafeIterableMap$Entry) -> b
    android.arch.core.internal.SafeIterableMap$Entry forward(android.arch.core.internal.SafeIterableMap$Entry) -> c
android.arch.core.internal.SafeIterableMap$Entry -> b.c$d:
    java.lang.Object mValue -> b
    java.lang.Object mKey -> a
    android.arch.core.internal.SafeIterableMap$Entry mNext -> c
    android.arch.core.internal.SafeIterableMap$Entry mPrevious -> d
android.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> b.c$e:
    android.arch.core.internal.SafeIterableMap this$0 -> c
    boolean mBeforeStart -> b
    android.arch.core.internal.SafeIterableMap$Entry mCurrent -> a
    1:1:void android.arch.core.internal.SafeIterableMap$IteratorWithAdditions.<init>(android.arch.core.internal.SafeIterableMap):0:0 -> <init>
    1:1:void <init>(android.arch.core.internal.SafeIterableMap,android.arch.core.internal.SafeIterableMap$1):0 -> <init>
    void supportRemove(android.arch.core.internal.SafeIterableMap$Entry) -> a
    1:1:android.arch.core.internal.SafeIterableMap$Entry android.arch.core.internal.SafeIterableMap.access$100(android.arch.core.internal.SafeIterableMap):0:0 -> hasNext
    1:1:boolean hasNext():0 -> hasNext
    2:2:boolean hasNext():0:0 -> hasNext
    1:1:java.util.Map$Entry android.arch.core.internal.SafeIterableMap$IteratorWithAdditions.next():0:0 -> next
    1:1:java.lang.Object next():0 -> next
    2:2:android.arch.core.internal.SafeIterableMap$Entry android.arch.core.internal.SafeIterableMap.access$100(android.arch.core.internal.SafeIterableMap):0:0 -> next
    2:2:java.util.Map$Entry android.arch.core.internal.SafeIterableMap$IteratorWithAdditions.next():0 -> next
    2:2:java.lang.Object next():0 -> next
    3:3:java.util.Map$Entry android.arch.core.internal.SafeIterableMap$IteratorWithAdditions.next():0:0 -> next
    3:3:java.lang.Object next():0 -> next
android.arch.core.internal.SafeIterableMap$ListIterator -> b.c$f:
    android.arch.core.internal.SafeIterableMap$Entry mExpectedEnd -> a
    android.arch.core.internal.SafeIterableMap$Entry mNext -> b
    1:1:android.arch.core.internal.SafeIterableMap$Entry android.arch.core.internal.SafeIterableMap$ListIterator.nextNode():0:0 -> a
    1:1:void supportRemove(android.arch.core.internal.SafeIterableMap$Entry):0 -> a
    2:2:void supportRemove(android.arch.core.internal.SafeIterableMap$Entry):0:0 -> a
    android.arch.core.internal.SafeIterableMap$Entry backward(android.arch.core.internal.SafeIterableMap$Entry) -> b
    android.arch.core.internal.SafeIterableMap$Entry forward(android.arch.core.internal.SafeIterableMap$Entry) -> c
    1:1:java.util.Map$Entry android.arch.core.internal.SafeIterableMap$ListIterator.next():0:0 -> next
    1:1:java.lang.Object next():0 -> next
    2:2:android.arch.core.internal.SafeIterableMap$Entry android.arch.core.internal.SafeIterableMap$ListIterator.nextNode():0:0 -> next
    2:2:java.util.Map$Entry android.arch.core.internal.SafeIterableMap$ListIterator.next():0 -> next
    2:2:java.lang.Object next():0 -> next
    3:3:java.util.Map$Entry android.arch.core.internal.SafeIterableMap$ListIterator.next():0:0 -> next
    3:3:java.lang.Object next():0 -> next
android.arch.core.internal.SafeIterableMap$SupportRemove -> b.c$g:
    void supportRemove(android.arch.core.internal.SafeIterableMap$Entry) -> a
android.arch.lifecycle.ClassesInfoCache -> android.arch.lifecycle.a:
    java.util.Map mCallbackMap -> a
    java.util.Map mHasLifecycleMethods -> b
    android.arch.lifecycle.ClassesInfoCache sInstance -> c
    1:1:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class):0:0 -> a
    1:1:android.arch.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]):0 -> a
    2:2:android.arch.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]):0:0 -> a
    3:3:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class):0:0 -> a
    3:3:android.arch.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]):0 -> a
    android.arch.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> b
    void verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ClassesInfoCache$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class) -> c
android.arch.lifecycle.ClassesInfoCache$CallbackInfo -> android.arch.lifecycle.a$a:
    java.util.Map mEventToHandlers -> a
    java.util.Map mHandlerToEvent -> b
    1:1:void android.arch.lifecycle.ClassesInfoCache$MethodReference.invokeCallback(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event,java.lang.Object):0:0 -> a
    1:1:void invokeMethodsForEvent(java.util.List,android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event,java.lang.Object):0 -> a
android.arch.lifecycle.ClassesInfoCache$MethodReference -> android.arch.lifecycle.a$b:
    int mCallType -> a
    java.lang.reflect.Method mMethod -> b
android.arch.lifecycle.CompositeGeneratedAdaptersObserver -> android.arch.lifecycle.CompositeGeneratedAdaptersObserver:
    android.arch.lifecycle.GeneratedAdapter[] mGeneratedAdapters -> a
    void onStateChanged(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event) -> c
android.arch.lifecycle.ComputableLiveData -> c.b:
    java.lang.Runnable mRefreshRunnable -> e
    java.util.concurrent.atomic.AtomicBoolean mComputing -> d
    java.util.concurrent.Executor mExecutor -> a
    java.util.concurrent.atomic.AtomicBoolean mInvalid -> c
    java.lang.Runnable mInvalidationRunnable -> f
    android.arch.lifecycle.LiveData mLiveData -> b
    1:1:void android.arch.lifecycle.ComputableLiveData.<init>(java.util.concurrent.Executor):0:0 -> <init>
    1:1:void <init>():0 -> <init>
    java.lang.Object compute() -> a
android.arch.lifecycle.ComputableLiveData$1 -> c.a:
    android.arch.lifecycle.ComputableLiveData this$0 -> k
    1:1:java.util.concurrent.Executor android.arch.lifecycle.ComputableLiveData.access$000(android.arch.lifecycle.ComputableLiveData):0:0 -> e
    1:1:void onActive():0 -> e
    2:2:void onActive():0:0 -> e
android.arch.lifecycle.ComputableLiveData$2 -> c.b$a:
    android.arch.lifecycle.ComputableLiveData this$0 -> b
    1:1:java.util.concurrent.atomic.AtomicBoolean android.arch.lifecycle.ComputableLiveData.access$100(android.arch.lifecycle.ComputableLiveData):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:java.util.concurrent.atomic.AtomicBoolean android.arch.lifecycle.ComputableLiveData.access$200(android.arch.lifecycle.ComputableLiveData):0:0 -> run
    3:3:void run():0 -> run
    4:4:void run():0:0 -> run
    5:5:android.arch.lifecycle.LiveData android.arch.lifecycle.ComputableLiveData.access$300(android.arch.lifecycle.ComputableLiveData):0:0 -> run
    5:5:void run():0 -> run
    6:6:void run():0:0 -> run
    7:7:java.util.concurrent.atomic.AtomicBoolean android.arch.lifecycle.ComputableLiveData.access$100(android.arch.lifecycle.ComputableLiveData):0:0 -> run
    7:7:void run():0 -> run
    8:8:void run():0:0 -> run
    9:9:java.util.concurrent.atomic.AtomicBoolean android.arch.lifecycle.ComputableLiveData.access$100(android.arch.lifecycle.ComputableLiveData):0:0 -> run
    9:9:void run():0 -> run
    10:10:void run():0:0 -> run
    11:11:java.util.concurrent.atomic.AtomicBoolean android.arch.lifecycle.ComputableLiveData.access$200(android.arch.lifecycle.ComputableLiveData):0:0 -> run
    11:11:void run():0 -> run
    12:12:void run():0:0 -> run
android.arch.lifecycle.ComputableLiveData$3 -> c.b$b:
    android.arch.lifecycle.ComputableLiveData this$0 -> b
    1:1:android.arch.lifecycle.LiveData android.arch.lifecycle.ComputableLiveData.access$300(android.arch.lifecycle.ComputableLiveData):0:0 -> run
    1:1:void run():0 -> run
    2:2:boolean android.arch.lifecycle.LiveData.hasActiveObservers():0:0 -> run
    2:2:void run():0 -> run
    3:3:java.util.concurrent.atomic.AtomicBoolean android.arch.lifecycle.ComputableLiveData.access$200(android.arch.lifecycle.ComputableLiveData):0:0 -> run
    3:3:void run():0 -> run
    4:4:void run():0:0 -> run
    5:5:java.util.concurrent.Executor android.arch.lifecycle.ComputableLiveData.access$000(android.arch.lifecycle.ComputableLiveData):0:0 -> run
    5:5:void run():0 -> run
    6:6:void run():0:0 -> run
android.arch.lifecycle.EmptyActivityLifecycleCallbacks -> c.c:
android.arch.lifecycle.FullLifecycleObserver -> android.arch.lifecycle.FullLifecycleObserver:
    void onStop(android.arch.lifecycle.LifecycleOwner) -> a
    void onCreate(android.arch.lifecycle.LifecycleOwner) -> b
    void onStart(android.arch.lifecycle.LifecycleOwner) -> d
    void onResume(android.arch.lifecycle.LifecycleOwner) -> e
    void onDestroy(android.arch.lifecycle.LifecycleOwner) -> f
    void onPause(android.arch.lifecycle.LifecycleOwner) -> g
android.arch.lifecycle.FullLifecycleObserverAdapter -> android.arch.lifecycle.FullLifecycleObserverAdapter:
    android.arch.lifecycle.FullLifecycleObserver mObserver -> a
    void onStateChanged(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event) -> c
android.arch.lifecycle.FullLifecycleObserverAdapter$1 -> android.arch.lifecycle.FullLifecycleObserverAdapter$a:
    int[] $SwitchMap$android$arch$lifecycle$Lifecycle$Event -> a
android.arch.lifecycle.GeneratedAdapter -> android.arch.lifecycle.b:
    void callMethods(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event,boolean,android.arch.lifecycle.MethodCallsLogger) -> a
android.arch.lifecycle.GenericLifecycleObserver -> android.arch.lifecycle.GenericLifecycleObserver:
    void onStateChanged(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event) -> c
android.arch.lifecycle.Lifecycle -> android.arch.lifecycle.c:
android.arch.lifecycle.Lifecycle$Event -> android.arch.lifecycle.c$a:
android.arch.lifecycle.Lifecycle$State -> android.arch.lifecycle.c$b:
    android.arch.lifecycle.Lifecycle$State DESTROYED -> a
    android.arch.lifecycle.Lifecycle$State INITIALIZED -> b
    android.arch.lifecycle.Lifecycle$State CREATED -> c
    android.arch.lifecycle.Lifecycle$State STARTED -> d
    android.arch.lifecycle.Lifecycle$State[] $VALUES -> f
    android.arch.lifecycle.Lifecycle$State RESUMED -> e
android.arch.lifecycle.LifecycleDispatcher -> android.arch.lifecycle.d:
    java.util.concurrent.atomic.AtomicBoolean sInitialized -> a
    1:1:void markStateIn(java.lang.Object,android.arch.lifecycle.Lifecycle$State):0:0 -> a
    1:1:void markState(android.support.v4.app.FragmentActivity,android.arch.lifecycle.Lifecycle$State):0 -> a
    1:1:void access$000(android.support.v4.app.FragmentActivity,android.arch.lifecycle.Lifecycle$State):0 -> a
    2:2:void android.arch.lifecycle.LifecycleRegistry.markState(android.arch.lifecycle.Lifecycle$State):0:0 -> a
    2:2:void markStateIn(java.lang.Object,android.arch.lifecycle.Lifecycle$State):0 -> a
    2:2:void markState(android.support.v4.app.FragmentActivity,android.arch.lifecycle.Lifecycle$State):0 -> a
    2:2:void access$000(android.support.v4.app.FragmentActivity,android.arch.lifecycle.Lifecycle$State):0 -> a
    3:3:void markState(android.support.v4.app.FragmentActivity,android.arch.lifecycle.Lifecycle$State):0:0 -> a
    3:3:void access$000(android.support.v4.app.FragmentActivity,android.arch.lifecycle.Lifecycle$State):0 -> a
    1:1:void dispatchIfLifecycleOwner(android.support.v4.app.Fragment,android.arch.lifecycle.Lifecycle$Event):0:0 -> b
    1:1:void access$100(android.support.v4.app.Fragment,android.arch.lifecycle.Lifecycle$Event):0 -> b
    1:1:void markStateIn(java.lang.Object,android.arch.lifecycle.Lifecycle$State):0:0 -> c
    1:1:void markState(android.support.v4.app.FragmentManager,android.arch.lifecycle.Lifecycle$State):0 -> c
    2:2:void android.arch.lifecycle.LifecycleRegistry.markState(android.arch.lifecycle.Lifecycle$State):0:0 -> c
    2:2:void markStateIn(java.lang.Object,android.arch.lifecycle.Lifecycle$State):0 -> c
    2:2:void markState(android.support.v4.app.FragmentManager,android.arch.lifecycle.Lifecycle$State):0 -> c
    3:3:boolean android.support.v4.app.Fragment.isAdded():0:0 -> c
    3:3:void markState(android.support.v4.app.FragmentManager,android.arch.lifecycle.Lifecycle$State):0 -> c
    4:4:void markState(android.support.v4.app.FragmentManager,android.arch.lifecycle.Lifecycle$State):0:0 -> c
android.arch.lifecycle.LifecycleDispatcher$DestructionReportFragment -> android.arch.lifecycle.d$a:
    1:1:void android.support.v4.app.Fragment.onStop():0:0 -> B
    1:1:void onStop():0 -> B
    2:2:void onStop():0:0 -> B
    3:3:android.support.v4.app.Fragment android.support.v4.app.Fragment.getParentFragment():0:0 -> B
    3:3:void dispatch(android.arch.lifecycle.Lifecycle$Event):0 -> B
    3:3:void onStop():0 -> B
    4:4:void dispatch(android.arch.lifecycle.Lifecycle$Event):0:0 -> B
    4:4:void onStop():0 -> B
    1:1:android.support.v4.app.Fragment android.support.v4.app.Fragment.getParentFragment():0:0 -> x
    1:1:void dispatch(android.arch.lifecycle.Lifecycle$Event):0 -> x
    1:1:void onDestroy():0 -> x
    2:2:void dispatch(android.arch.lifecycle.Lifecycle$Event):0:0 -> x
    2:2:void onDestroy():0 -> x
    1:1:void android.support.v4.app.Fragment.onPause():0:0 -> z
    1:1:void onPause():0 -> z
    2:2:void onPause():0:0 -> z
    3:3:android.support.v4.app.Fragment android.support.v4.app.Fragment.getParentFragment():0:0 -> z
    3:3:void dispatch(android.arch.lifecycle.Lifecycle$Event):0 -> z
    3:3:void onPause():0 -> z
    4:4:void dispatch(android.arch.lifecycle.Lifecycle$Event):0:0 -> z
    4:4:void onPause():0 -> z
android.arch.lifecycle.LifecycleDispatcher$DispatcherActivityCallback -> android.arch.lifecycle.d$b:
    android.arch.lifecycle.LifecycleDispatcher$FragmentCallback mFragmentCallback -> a
    1:1:void android.support.v4.app.FragmentManagerImpl.registerFragmentLifecycleCallbacks(android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks,boolean):0:0 -> onActivityCreated
    1:1:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    2:2:void onActivityCreated(android.app.Activity,android.os.Bundle):0:0 -> onActivityCreated
android.arch.lifecycle.LifecycleDispatcher$FragmentCallback -> android.arch.lifecycle.d$c:
    1:1:android.support.v4.app.FragmentTransaction android.support.v4.app.FragmentManagerImpl.beginTransaction():0:0 -> a
    1:1:void onFragmentCreated(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.os.Bundle):0 -> a
    2:2:void onFragmentCreated(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.os.Bundle):0:0 -> a
    void onFragmentResumed(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment) -> c
    void onFragmentStarted(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment) -> d
android.arch.lifecycle.LifecycleObserver -> c.d:
android.arch.lifecycle.LifecycleOwner -> c.e:
    android.arch.lifecycle.Lifecycle getLifecycle() -> a
android.arch.lifecycle.LifecycleRegistry -> android.arch.lifecycle.e:
    android.arch.core.internal.FastSafeIterableMap mObserverMap -> a
    android.arch.lifecycle.Lifecycle$State mState -> b
    boolean mHandlingEvent -> e
    java.util.ArrayList mParentStates -> g
    java.lang.ref.WeakReference mLifecycleOwner -> c
    boolean mNewEventOccurred -> f
    int mAddingObserverCounter -> d
    1:1:boolean android.arch.core.internal.FastSafeIterableMap.contains(java.lang.Object):0:0 -> a
    1:1:java.util.Map$Entry android.arch.core.internal.FastSafeIterableMap.ceil(java.lang.Object):0 -> a
    1:1:android.arch.lifecycle.Lifecycle$State calculateTargetState(android.arch.lifecycle.LifecycleObserver):0 -> a
    2:2:java.util.Map$Entry android.arch.core.internal.FastSafeIterableMap.ceil(java.lang.Object):0:0 -> a
    2:2:android.arch.lifecycle.Lifecycle$State calculateTargetState(android.arch.lifecycle.LifecycleObserver):0 -> a
    3:3:java.lang.Object android.arch.core.internal.SafeIterableMap$Entry.getValue():0:0 -> a
    3:3:android.arch.lifecycle.Lifecycle$State calculateTargetState(android.arch.lifecycle.LifecycleObserver):0 -> a
    4:4:android.arch.lifecycle.Lifecycle$State calculateTargetState(android.arch.lifecycle.LifecycleObserver):0:0 -> a
    android.arch.lifecycle.Lifecycle$State getStateAfter(android.arch.lifecycle.Lifecycle$Event) -> b
    void handleLifecycleEvent(android.arch.lifecycle.Lifecycle$Event) -> c
    android.arch.lifecycle.Lifecycle$State min(android.arch.lifecycle.Lifecycle$State,android.arch.lifecycle.Lifecycle$State) -> d
    void moveToState(android.arch.lifecycle.Lifecycle$State) -> e
    void popParentState() -> f
    1:1:boolean isSynced():0:0 -> g
    1:1:void sync():0 -> g
    2:2:int android.arch.core.internal.SafeIterableMap.size():0:0 -> g
    2:2:boolean isSynced():0 -> g
    2:2:void sync():0 -> g
    3:3:java.util.Map$Entry android.arch.core.internal.SafeIterableMap.eldest():0:0 -> g
    3:3:boolean isSynced():0 -> g
    3:3:void sync():0 -> g
    4:4:java.lang.Object android.arch.core.internal.SafeIterableMap$Entry.getValue():0:0 -> g
    4:4:boolean isSynced():0 -> g
    4:4:void sync():0 -> g
    5:5:boolean isSynced():0:0 -> g
    5:5:void sync():0 -> g
    6:6:java.util.Map$Entry android.arch.core.internal.SafeIterableMap.newest():0:0 -> g
    6:6:boolean isSynced():0 -> g
    6:6:void sync():0 -> g
    7:7:java.lang.Object android.arch.core.internal.SafeIterableMap$Entry.getValue():0:0 -> g
    7:7:boolean isSynced():0 -> g
    7:7:void sync():0 -> g
    8:8:boolean isSynced():0:0 -> g
    8:8:void sync():0 -> g
    9:9:void sync():0:0 -> g
    10:10:java.util.Map$Entry android.arch.core.internal.SafeIterableMap.eldest():0:0 -> g
    10:10:void sync():0 -> g
    11:11:java.lang.Object android.arch.core.internal.SafeIterableMap$Entry.getValue():0:0 -> g
    11:11:void sync():0 -> g
    12:12:void sync():0:0 -> g
    13:13:void backwardPass(android.arch.lifecycle.LifecycleOwner):0:0 -> g
    13:13:void sync():0 -> g
    14:14:java.util.Iterator android.arch.core.internal.SafeIterableMap.descendingIterator():0:0 -> g
    14:14:void backwardPass(android.arch.lifecycle.LifecycleOwner):0 -> g
    14:14:void sync():0 -> g
    15:15:void backwardPass(android.arch.lifecycle.LifecycleOwner):0:0 -> g
    15:15:void sync():0 -> g
    16:16:android.arch.lifecycle.Lifecycle$Event downEvent(android.arch.lifecycle.Lifecycle$State):0:0 -> g
    16:16:void backwardPass(android.arch.lifecycle.LifecycleOwner):0 -> g
    16:16:void sync():0 -> g
    17:17:void backwardPass(android.arch.lifecycle.LifecycleOwner):0:0 -> g
    17:17:void sync():0 -> g
    18:18:void pushParentState(android.arch.lifecycle.Lifecycle$State):0:0 -> g
    18:18:void backwardPass(android.arch.lifecycle.LifecycleOwner):0 -> g
    18:18:void sync():0 -> g
    19:19:void backwardPass(android.arch.lifecycle.LifecycleOwner):0:0 -> g
    19:19:void sync():0 -> g
    20:20:android.arch.lifecycle.Lifecycle$Event downEvent(android.arch.lifecycle.Lifecycle$State):0:0 -> g
    20:20:void backwardPass(android.arch.lifecycle.LifecycleOwner):0 -> g
    20:20:void sync():0 -> g
    21:21:void sync():0:0 -> g
    22:22:java.util.Map$Entry android.arch.core.internal.SafeIterableMap.newest():0:0 -> g
    22:22:void sync():0 -> g
    23:23:void sync():0:0 -> g
    24:24:java.lang.Object android.arch.core.internal.SafeIterableMap$Entry.getValue():0:0 -> g
    24:24:void sync():0 -> g
    25:25:void sync():0:0 -> g
    26:26:void forwardPass(android.arch.lifecycle.LifecycleOwner):0:0 -> g
    26:26:void sync():0 -> g
    27:27:android.arch.core.internal.SafeIterableMap$IteratorWithAdditions android.arch.core.internal.SafeIterableMap.iteratorWithAdditions():0:0 -> g
    27:27:void forwardPass(android.arch.lifecycle.LifecycleOwner):0 -> g
    27:27:void sync():0 -> g
    28:28:void forwardPass(android.arch.lifecycle.LifecycleOwner):0:0 -> g
    28:28:void sync():0 -> g
    29:29:void pushParentState(android.arch.lifecycle.Lifecycle$State):0:0 -> g
    29:29:void forwardPass(android.arch.lifecycle.LifecycleOwner):0 -> g
    29:29:void sync():0 -> g
    30:30:void forwardPass(android.arch.lifecycle.LifecycleOwner):0:0 -> g
    30:30:void sync():0 -> g
    android.arch.lifecycle.Lifecycle$Event upEvent(android.arch.lifecycle.Lifecycle$State) -> h
android.arch.lifecycle.LifecycleRegistry$1 -> android.arch.lifecycle.e$a:
    int[] $SwitchMap$android$arch$lifecycle$Lifecycle$State -> b
    int[] $SwitchMap$android$arch$lifecycle$Lifecycle$Event -> a
android.arch.lifecycle.LifecycleRegistry$ObserverWithState -> android.arch.lifecycle.e$b:
    android.arch.lifecycle.Lifecycle$State mState -> a
    android.arch.lifecycle.GenericLifecycleObserver mLifecycleObserver -> b
    1:1:android.arch.lifecycle.GenericLifecycleObserver android.arch.lifecycle.Lifecycling.getCallback(java.lang.Object):0:0 -> <init>
    1:1:void <init>(android.arch.lifecycle.LifecycleObserver,android.arch.lifecycle.Lifecycle$State):0 -> <init>
    2:2:void <init>(android.arch.lifecycle.LifecycleObserver,android.arch.lifecycle.Lifecycle$State):0:0 -> <init>
    void dispatchEvent(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event) -> a
android.arch.lifecycle.LifecycleRegistryOwner -> c.f:
    android.arch.lifecycle.LifecycleRegistry getLifecycle() -> a
android.arch.lifecycle.Lifecycling -> c.g:
    java.util.Map sCallbackCache -> a
    java.util.Map sClassToAdapters -> b
    android.arch.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> a
    java.lang.String getAdapterName(java.lang.String) -> b
    1:1:int android.arch.lifecycle.Lifecycling.resolveObserverCallbackType(java.lang.Class):0:0 -> c
    1:1:int getObserverConstructorType(java.lang.Class):0 -> c
    2:2:java.lang.reflect.Constructor android.arch.lifecycle.Lifecycling.generatedConstructor(java.lang.Class):0:0 -> c
    2:2:int android.arch.lifecycle.Lifecycling.resolveObserverCallbackType(java.lang.Class):0 -> c
    2:2:int getObserverConstructorType(java.lang.Class):0 -> c
    3:3:int android.arch.lifecycle.Lifecycling.resolveObserverCallbackType(java.lang.Class):0:0 -> c
    3:3:int getObserverConstructorType(java.lang.Class):0 -> c
    4:4:boolean android.arch.lifecycle.ClassesInfoCache.hasLifecycleMethods(java.lang.Class):0:0 -> c
    4:4:int android.arch.lifecycle.Lifecycling.resolveObserverCallbackType(java.lang.Class):0 -> c
    4:4:int getObserverConstructorType(java.lang.Class):0 -> c
    5:5:java.lang.reflect.Method[] android.arch.lifecycle.ClassesInfoCache.getDeclaredMethods(java.lang.Class):0:0 -> c
    5:5:boolean android.arch.lifecycle.ClassesInfoCache.hasLifecycleMethods(java.lang.Class):0 -> c
    5:5:int android.arch.lifecycle.Lifecycling.resolveObserverCallbackType(java.lang.Class):0 -> c
    5:5:int getObserverConstructorType(java.lang.Class):0 -> c
    6:6:boolean android.arch.lifecycle.ClassesInfoCache.hasLifecycleMethods(java.lang.Class):0:0 -> c
    6:6:int android.arch.lifecycle.Lifecycling.resolveObserverCallbackType(java.lang.Class):0 -> c
    6:6:int getObserverConstructorType(java.lang.Class):0 -> c
    7:7:int android.arch.lifecycle.Lifecycling.resolveObserverCallbackType(java.lang.Class):0:0 -> c
    7:7:int getObserverConstructorType(java.lang.Class):0 -> c
    8:8:boolean android.arch.lifecycle.Lifecycling.isLifecycleParent(java.lang.Class):0:0 -> c
    8:8:int android.arch.lifecycle.Lifecycling.resolveObserverCallbackType(java.lang.Class):0 -> c
    8:8:int getObserverConstructorType(java.lang.Class):0 -> c
    9:9:int android.arch.lifecycle.Lifecycling.resolveObserverCallbackType(java.lang.Class):0:0 -> c
    9:9:int getObserverConstructorType(java.lang.Class):0 -> c
    10:10:boolean android.arch.lifecycle.Lifecycling.isLifecycleParent(java.lang.Class):0:0 -> c
    10:10:int android.arch.lifecycle.Lifecycling.resolveObserverCallbackType(java.lang.Class):0 -> c
    10:10:int getObserverConstructorType(java.lang.Class):0 -> c
    11:11:int android.arch.lifecycle.Lifecycling.resolveObserverCallbackType(java.lang.Class):0:0 -> c
    11:11:int getObserverConstructorType(java.lang.Class):0 -> c
    12:12:int getObserverConstructorType(java.lang.Class):0:0 -> c
    13:13:java.lang.reflect.Method[] android.arch.lifecycle.ClassesInfoCache.getDeclaredMethods(java.lang.Class):0:0 -> c
    13:13:boolean android.arch.lifecycle.ClassesInfoCache.hasLifecycleMethods(java.lang.Class):0 -> c
    13:13:int android.arch.lifecycle.Lifecycling.resolveObserverCallbackType(java.lang.Class):0 -> c
    13:13:int getObserverConstructorType(java.lang.Class):0 -> c
android.arch.lifecycle.LiveData -> android.arch.lifecycle.LiveData:
    java.lang.Object NOT_SET -> j
    java.lang.Runnable mPostValueRunnable -> i
    java.lang.Object mData -> d
    android.arch.core.internal.SafeIterableMap mObservers -> b
    java.lang.Object mPendingData -> e
    int mVersion -> f
    boolean mDispatchingValue -> g
    java.lang.Object mDataLock -> a
    boolean mDispatchInvalidated -> h
    int mActiveCount -> c
    void assertMainThread(java.lang.String) -> a
    1:1:void com.cleanup.todoc.ui.MainActivity.updateTasks(java.util.List):0:0 -> b
    1:1:void considerNotify(android.arch.lifecycle.LiveData$ObserverWrapper):0 -> b
    2:2:void com.cleanup.todoc.ui.TasksAdapter.updateTasks(java.util.List):0:0 -> b
    2:2:void com.cleanup.todoc.ui.MainActivity.updateTasks(java.util.List):0 -> b
    2:2:void considerNotify(android.arch.lifecycle.LiveData$ObserverWrapper):0 -> b
    3:3:void android.support.v7.widget.RecyclerView$Adapter.notifyDataSetChanged():0:0 -> b
    3:3:void com.cleanup.todoc.ui.TasksAdapter.updateTasks(java.util.List):0 -> b
    3:3:void com.cleanup.todoc.ui.MainActivity.updateTasks(java.util.List):0 -> b
    3:3:void considerNotify(android.arch.lifecycle.LiveData$ObserverWrapper):0 -> b
    4:4:void com.cleanup.todoc.ui.MainActivity$$InternalSyntheticLambda$0$4b1de1a21ca06e5f8d2e8de00501b9b024190b7cb5dcd00b0096121832bb7051$0.onChanged$bridge(java.lang.Object):0:0 -> b
    4:4:void considerNotify(android.arch.lifecycle.LiveData$ObserverWrapper):0 -> b
    5:5:void com.cleanup.todoc.ui.MainActivity.updateProjects(java.util.List):0:0 -> b
    5:5:void considerNotify(android.arch.lifecycle.LiveData$ObserverWrapper):0 -> b
    1:1:android.arch.core.internal.SafeIterableMap$IteratorWithAdditions android.arch.core.internal.SafeIterableMap.iteratorWithAdditions():0:0 -> c
    1:1:void dispatchingValue(android.arch.lifecycle.LiveData$ObserverWrapper):0 -> c
    2:2:void dispatchingValue(android.arch.lifecycle.LiveData$ObserverWrapper):0:0 -> c
    1:1:android.arch.lifecycle.Lifecycle android.support.v4.app.SupportActivity.getLifecycle():0:0 -> d
    1:1:android.arch.lifecycle.Lifecycle android.support.v4.app.FragmentActivity.getLifecycle():0 -> d
    1:1:void observe(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Observer):0 -> d
    2:2:android.arch.lifecycle.Lifecycle$State android.arch.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> d
    2:2:void observe(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Observer):0 -> d
    3:3:void observe(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Observer):0:0 -> d
    4:4:android.arch.lifecycle.Lifecycle android.support.v4.app.SupportActivity.getLifecycle():0:0 -> d
    4:4:android.arch.lifecycle.Lifecycle android.support.v4.app.FragmentActivity.getLifecycle():0 -> d
    4:4:void observe(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Observer):0 -> d
    5:5:void android.arch.lifecycle.LifecycleRegistry.addObserver(android.arch.lifecycle.LifecycleObserver):0:0 -> d
    5:5:void observe(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Observer):0 -> d
    6:6:boolean android.arch.core.internal.FastSafeIterableMap.contains(java.lang.Object):0:0 -> d
    6:6:void android.arch.lifecycle.LifecycleRegistry.addObserver(android.arch.lifecycle.LifecycleObserver):0 -> d
    6:6:void observe(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Observer):0 -> d
    7:7:void android.arch.lifecycle.LifecycleRegistry.addObserver(android.arch.lifecycle.LifecycleObserver):0:0 -> d
    7:7:void observe(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Observer):0 -> d
    8:8:void android.arch.lifecycle.LifecycleRegistry.pushParentState(android.arch.lifecycle.Lifecycle$State):0:0 -> d
    8:8:void android.arch.lifecycle.LifecycleRegistry.addObserver(android.arch.lifecycle.LifecycleObserver):0 -> d
    8:8:void observe(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Observer):0 -> d
    9:9:void android.arch.lifecycle.LifecycleRegistry.addObserver(android.arch.lifecycle.LifecycleObserver):0:0 -> d
    9:9:void observe(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Observer):0 -> d
    void onActive() -> e
    void onInactive() -> f
    1:1:void android.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable):0:0 -> g
    1:1:void postValue(java.lang.Object):0 -> g
    2:2:void postValue(java.lang.Object):0:0 -> g
    void removeObserver(android.arch.lifecycle.Observer) -> h
    void setValue(java.lang.Object) -> i
android.arch.lifecycle.LiveData$1 -> android.arch.lifecycle.LiveData$a:
    android.arch.lifecycle.LiveData this$0 -> b
    1:1:java.lang.Object android.arch.lifecycle.LiveData.access$000(android.arch.lifecycle.LiveData):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:java.lang.Object android.arch.lifecycle.LiveData.access$100(android.arch.lifecycle.LiveData):0:0 -> run
    3:3:void run():0 -> run
    4:4:void run():0:0 -> run
    5:5:java.lang.Object android.arch.lifecycle.LiveData.access$102(android.arch.lifecycle.LiveData,java.lang.Object):0:0 -> run
    5:5:void run():0 -> run
    6:6:void run():0:0 -> run
android.arch.lifecycle.LiveData$LifecycleBoundObserver -> android.arch.lifecycle.LiveData$LifecycleBoundObserver:
    android.arch.lifecycle.LiveData this$0 -> f
    android.arch.lifecycle.LifecycleOwner mOwner -> e
    1:1:android.arch.lifecycle.Lifecycle$State android.arch.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> c
    1:1:void onStateChanged(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event):0 -> c
    2:2:void onStateChanged(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event):0:0 -> c
    1:1:void android.arch.lifecycle.LifecycleRegistry.removeObserver(android.arch.lifecycle.LifecycleObserver):0:0 -> i
    1:1:void detachObserver():0 -> i
    boolean isAttachedTo(android.arch.lifecycle.LifecycleOwner) -> j
    1:1:android.arch.lifecycle.Lifecycle$State android.arch.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> k
    1:1:boolean shouldBeActive():0 -> k
    2:2:boolean shouldBeActive():0:0 -> k
    3:3:boolean android.arch.lifecycle.Lifecycle$State.isAtLeast(android.arch.lifecycle.Lifecycle$State):0:0 -> k
    3:3:boolean shouldBeActive():0 -> k
android.arch.lifecycle.LiveData$ObserverWrapper -> android.arch.lifecycle.LiveData$b:
    android.arch.lifecycle.LiveData this$0 -> d
    android.arch.lifecycle.Observer mObserver -> a
    boolean mActive -> b
    int mLastVersion -> c
    1:1:int android.arch.lifecycle.LiveData.access$300(android.arch.lifecycle.LiveData):0:0 -> h
    1:1:void activeStateChanged(boolean):0 -> h
    2:2:int android.arch.lifecycle.LiveData.access$302(android.arch.lifecycle.LiveData,int):0:0 -> h
    2:2:void activeStateChanged(boolean):0 -> h
    3:3:void activeStateChanged(boolean):0:0 -> h
    4:4:int android.arch.lifecycle.LiveData.access$300(android.arch.lifecycle.LiveData):0:0 -> h
    4:4:void activeStateChanged(boolean):0 -> h
    5:5:void activeStateChanged(boolean):0:0 -> h
    6:6:void android.arch.lifecycle.LiveData.access$400(android.arch.lifecycle.LiveData,android.arch.lifecycle.LiveData$ObserverWrapper):0:0 -> h
    6:6:void activeStateChanged(boolean):0 -> h
    void detachObserver() -> i
    boolean isAttachedTo(android.arch.lifecycle.LifecycleOwner) -> j
    boolean shouldBeActive() -> k
android.arch.lifecycle.MethodCallsLogger -> c.h:
    java.util.Map mCalledMethods -> b
    int $r8$classId -> a
    1:1:void android.arch.lifecycle.MethodCallsLogger.<init>():0:0 -> <init>
    1:1:void $r8$init$bridge():0 -> <init>
    2:2:void android.support.transition.ViewGroupOverlayApi18.<init>(android.view.ViewGroup):0:0 -> <init>
    2:2:void android.support.transition.ViewGroupOverlayApi18.$r8$init$bridge(android.view.ViewGroup):0 -> <init>
    3:3:void android.support.v7.view.menu.BaseWrapper.<init>(java.lang.Object):0:0 -> <init>
    3:3:void android.support.v7.view.menu.BaseWrapper.$r8$init$bridge(java.lang.Object):0 -> <init>
    4:4:void com.cleanup.todoc.repositories.ProjectDataRepository.<init>(com.cleanup.todoc.database.dao.ProjectDao):0:0 -> <init>
    4:4:void com.cleanup.todoc.repositories.ProjectDataRepository.$r8$init$bridge(com.cleanup.todoc.database.dao.ProjectDao):0 -> <init>
    5:5:void com.cleanup.todoc.repositories.TaskDataRepository.<init>(com.cleanup.todoc.database.dao.TaskDao):0:0 -> <init>
    5:5:void com.cleanup.todoc.repositories.TaskDataRepository.$r8$init$bridge(com.cleanup.todoc.database.dao.TaskDao):0 -> <init>
    6:6:void android.support.v4.app.FragmentController.<init>(android.support.v4.app.FragmentHostCallback):0:0 -> <init>
    6:6:void android.support.v4.app.FragmentController.$r8$init$bridge(android.support.v4.app.FragmentHostCallback):0 -> <init>
    void android.support.transition.ViewGroupOverlayApi18.remove(android.view.View) -> a
    boolean android.support.v4.app.FragmentController.execPendingActions() -> d
    1:1:android.arch.lifecycle.LiveData com.cleanup.todoc.database.dao.ProjectDao_Impl.getAllProjects():0:0 -> e
    1:1:android.arch.lifecycle.LiveData com.cleanup.todoc.repositories.ProjectDataRepository.getAllProjects():0 -> e
    2:2:android.arch.lifecycle.LiveData android.arch.lifecycle.ComputableLiveData.getLiveData():0:0 -> e
    2:2:android.arch.lifecycle.LiveData com.cleanup.todoc.database.dao.ProjectDao_Impl.getAllProjects():0 -> e
    2:2:android.arch.lifecycle.LiveData com.cleanup.todoc.repositories.ProjectDataRepository.getAllProjects():0 -> e
    1:1:android.support.v4.app.FragmentManagerImpl android.support.v4.app.FragmentHostCallback.getFragmentManagerImpl():0:0 -> f
    1:1:android.support.v4.app.FragmentManager android.support.v4.app.FragmentController.getSupportFragmentManager():0 -> f
    void android.support.v4.app.FragmentController.noteStateNotSaved() -> g
android.arch.lifecycle.MutableLiveData -> c.i:
    void postValue(java.lang.Object) -> g
    1:1:void android.arch.lifecycle.LiveData.setValue(java.lang.Object):0:0 -> i
    1:1:void setValue(java.lang.Object):0 -> i
android.arch.lifecycle.Observer -> c.j:
android.arch.lifecycle.OnLifecycleEvent -> android.arch.lifecycle.f:
android.arch.lifecycle.ProcessLifecycleOwner -> android.arch.lifecycle.g:
    android.arch.lifecycle.LifecycleRegistry mRegistry -> g
    android.os.Handler mHandler -> f
    android.arch.lifecycle.ReportFragment$ActivityInitializationListener mInitializationListener -> i
    java.lang.Runnable mDelayedPauseRunnable -> h
    boolean mStopSent -> e
    int mStartedCounter -> b
    int mResumedCounter -> c
    boolean mPauseSent -> d
    android.arch.lifecycle.ProcessLifecycleOwner sInstance -> j
    android.arch.lifecycle.Lifecycle getLifecycle() -> a
android.arch.lifecycle.ProcessLifecycleOwner$1 -> android.arch.lifecycle.g$a:
    android.arch.lifecycle.ProcessLifecycleOwner this$0 -> b
    1:1:void android.arch.lifecycle.ProcessLifecycleOwner.dispatchPauseIfNeeded():0:0 -> run
    1:1:void android.arch.lifecycle.ProcessLifecycleOwner.access$000(android.arch.lifecycle.ProcessLifecycleOwner):0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:void android.arch.lifecycle.ProcessLifecycleOwner.dispatchStopIfNeeded():0:0 -> run
    3:3:void android.arch.lifecycle.ProcessLifecycleOwner.access$100(android.arch.lifecycle.ProcessLifecycleOwner):0 -> run
    3:3:void run():0 -> run
android.arch.lifecycle.ProcessLifecycleOwner$2 -> android.arch.lifecycle.g$b:
    android.arch.lifecycle.ProcessLifecycleOwner this$0 -> a
android.arch.lifecycle.ProcessLifecycleOwner$3 -> android.arch.lifecycle.h:
    android.arch.lifecycle.ProcessLifecycleOwner this$0 -> a
    1:1:android.arch.lifecycle.ReportFragment android.arch.lifecycle.ReportFragment.get(android.app.Activity):0:0 -> onActivityCreated
    1:1:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    2:2:void onActivityCreated(android.app.Activity,android.os.Bundle):0:0 -> onActivityCreated
    3:3:android.arch.lifecycle.ReportFragment$ActivityInitializationListener android.arch.lifecycle.ProcessLifecycleOwner.access$200(android.arch.lifecycle.ProcessLifecycleOwner):0:0 -> onActivityCreated
    3:3:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    4:4:void android.arch.lifecycle.ReportFragment.setProcessListener(android.arch.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> onActivityCreated
    4:4:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    1:1:void android.arch.lifecycle.ProcessLifecycleOwner.activityPaused():0:0 -> onActivityPaused
    1:1:void onActivityPaused(android.app.Activity):0 -> onActivityPaused
    1:1:void android.arch.lifecycle.ProcessLifecycleOwner.activityStopped():0:0 -> onActivityStopped
    1:1:void onActivityStopped(android.app.Activity):0 -> onActivityStopped
    2:2:void android.arch.lifecycle.ProcessLifecycleOwner.dispatchStopIfNeeded():0:0 -> onActivityStopped
    2:2:void android.arch.lifecycle.ProcessLifecycleOwner.activityStopped():0 -> onActivityStopped
    2:2:void onActivityStopped(android.app.Activity):0 -> onActivityStopped
android.arch.lifecycle.ProcessLifecycleOwnerInitializer -> android.arch.lifecycle.ProcessLifecycleOwnerInitializer:
    1:1:void android.arch.lifecycle.LifecycleDispatcher.init(android.content.Context):0:0 -> onCreate
    1:1:boolean onCreate():0 -> onCreate
    2:2:boolean onCreate():0:0 -> onCreate
    3:3:void android.arch.lifecycle.ProcessLifecycleOwner.init(android.content.Context):0:0 -> onCreate
    3:3:boolean onCreate():0 -> onCreate
    4:4:void android.arch.lifecycle.ProcessLifecycleOwner.attach(android.content.Context):0:0 -> onCreate
    4:4:void android.arch.lifecycle.ProcessLifecycleOwner.init(android.content.Context):0 -> onCreate
    4:4:boolean onCreate():0 -> onCreate
android.arch.lifecycle.ReflectiveGenericLifecycleObserver -> android.arch.lifecycle.ReflectiveGenericLifecycleObserver:
    android.arch.lifecycle.ClassesInfoCache$CallbackInfo mInfo -> b
    java.lang.Object mWrapped -> a
    1:1:void android.arch.lifecycle.ClassesInfoCache$CallbackInfo.invokeCallbacks(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event,java.lang.Object):0:0 -> c
    1:1:void onStateChanged(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event):0 -> c
android.arch.lifecycle.ReportFragment -> android.arch.lifecycle.i:
    android.arch.lifecycle.ReportFragment$ActivityInitializationListener mProcessListener -> b
    int $r8$clinit -> c
    void dispatch(android.arch.lifecycle.Lifecycle$Event) -> a
    void injectIfNeededIn(android.app.Activity) -> b
    1:1:void dispatchResume(android.arch.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> onResume
    1:1:void onResume():0 -> onResume
    2:2:void android.arch.lifecycle.ProcessLifecycleOwner$2.onResume():0:0 -> onResume
    2:2:void dispatchResume(android.arch.lifecycle.ReportFragment$ActivityInitializationListener):0 -> onResume
    2:2:void onResume():0 -> onResume
    3:3:void android.arch.lifecycle.ProcessLifecycleOwner.activityResumed():0:0 -> onResume
    3:3:void android.arch.lifecycle.ProcessLifecycleOwner$2.onResume():0 -> onResume
    3:3:void dispatchResume(android.arch.lifecycle.ReportFragment$ActivityInitializationListener):0 -> onResume
    3:3:void onResume():0 -> onResume
    4:4:void onResume():0:0 -> onResume
    1:1:void dispatchStart(android.arch.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> onStart
    1:1:void onStart():0 -> onStart
    2:2:void android.arch.lifecycle.ProcessLifecycleOwner$2.onStart():0:0 -> onStart
    2:2:void dispatchStart(android.arch.lifecycle.ReportFragment$ActivityInitializationListener):0 -> onStart
    2:2:void onStart():0 -> onStart
    3:3:void android.arch.lifecycle.ProcessLifecycleOwner.activityStarted():0:0 -> onStart
    3:3:void android.arch.lifecycle.ProcessLifecycleOwner$2.onStart():0 -> onStart
    3:3:void dispatchStart(android.arch.lifecycle.ReportFragment$ActivityInitializationListener):0 -> onStart
    3:3:void onStart():0 -> onStart
    4:4:void onStart():0:0 -> onStart
android.arch.lifecycle.ReportFragment$ActivityInitializationListener -> android.arch.lifecycle.i$a:
android.arch.lifecycle.SingleGeneratedAdapterObserver -> android.arch.lifecycle.SingleGeneratedAdapterObserver:
    android.arch.lifecycle.GeneratedAdapter mGeneratedAdapter -> a
    void onStateChanged(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event) -> c
android.arch.lifecycle.ViewModel -> c.k:
    void onCleared() -> a
android.arch.lifecycle.ViewModelProvider$Factory -> c.m:
android.arch.lifecycle.ViewModelStore -> c.n:
    java.util.HashMap mMap -> a
    void clear() -> a
android.arch.lifecycle.ViewModelStoreOwner -> c.o:
    android.arch.lifecycle.ViewModelStore getViewModelStore() -> b
android.arch.lifecycle.ViewModelStores -> c.p:
    boolean android.support.transition.ViewGroupUtilsApi18.sSuppressLayoutMethodFetched -> b
    java.lang.reflect.Method android.support.transition.ViewGroupUtilsApi18.sSuppressLayoutMethod -> a
    void android.support.v4.util.DebugUtils.buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
    int android.support.v4.util.Preconditions.checkArgumentNonnegative(int) -> b
    1:1:int android.support.v4.content.PermissionChecker.checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0:0 -> c
    1:1:int android.support.v4.content.PermissionChecker.checkSelfPermission(android.content.Context,java.lang.String):0 -> c
    2:2:java.lang.String android.support.v4.app.AppOpsManagerCompat.permissionToOp(java.lang.String):0:0 -> c
    2:2:int android.support.v4.content.PermissionChecker.checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0 -> c
    2:2:int android.support.v4.content.PermissionChecker.checkSelfPermission(android.content.Context,java.lang.String):0 -> c
    3:3:int android.support.v4.content.PermissionChecker.checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0:0 -> c
    3:3:int android.support.v4.content.PermissionChecker.checkSelfPermission(android.content.Context,java.lang.String):0 -> c
    4:4:int android.support.v4.app.AppOpsManagerCompat.noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String):0:0 -> c
    4:4:int android.support.v4.content.PermissionChecker.checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0 -> c
    4:4:int android.support.v4.content.PermissionChecker.checkSelfPermission(android.content.Context,java.lang.String):0 -> c
    int android.support.v4.math.MathUtils.clamp(int,int,int) -> d
    float android.support.design.widget.MathUtils.dist(float,float,float,float) -> e
    android.content.res.ColorStateList android.support.design.resources.MaterialResources.getColorStateList(android.content.Context,android.content.res.TypedArray,int) -> f
    float android.support.design.widget.MathUtils.lerp(float,float,float) -> g
    void android.support.design.animation.AnimatorSetCompat.playTogether(android.animation.AnimatorSet,java.util.List) -> h
android.arch.persistence.db.SimpleSQLiteQuery -> d.a:
    java.lang.Object[] mBindArgs -> b
    java.lang.String mQuery -> a
    1:1:void android.arch.persistence.db.SimpleSQLiteQuery.<init>(java.lang.String,java.lang.Object[]):0:0 -> <init>
    1:1:void <init>(java.lang.String):0 -> <init>
    java.lang.String getSql() -> a
    1:1:void android.arch.persistence.db.SimpleSQLiteQuery.bind(android.arch.persistence.db.SupportSQLiteProgram,java.lang.Object[]):0:0 -> b
    1:1:void bindTo(android.arch.persistence.db.SupportSQLiteProgram):0 -> b
    2:2:void android.arch.persistence.db.SimpleSQLiteQuery.bind(android.arch.persistence.db.SupportSQLiteProgram,int,java.lang.Object):0:0 -> b
    2:2:void android.arch.persistence.db.SimpleSQLiteQuery.bind(android.arch.persistence.db.SupportSQLiteProgram,java.lang.Object[]):0 -> b
    2:2:void bindTo(android.arch.persistence.db.SupportSQLiteProgram):0 -> b
android.arch.persistence.db.SupportSQLiteDatabase -> d.b:
android.arch.persistence.db.SupportSQLiteOpenHelper -> d.c:
android.arch.persistence.db.SupportSQLiteOpenHelper$Callback -> d.c$a:
    int version -> a
    void deleteDatabaseFile(java.lang.String) -> a
    void onUpgrade(android.arch.persistence.db.SupportSQLiteDatabase,int,int) -> b
android.arch.persistence.db.SupportSQLiteOpenHelper$Factory -> d.c$b:
android.arch.persistence.db.SupportSQLiteProgram -> d.d:
android.arch.persistence.db.SupportSQLiteQuery -> d.e:
    java.lang.String getSql() -> a
    void bindTo(android.arch.persistence.db.SupportSQLiteProgram) -> b
android.arch.persistence.db.framework.FrameworkSQLiteDatabase -> e.a:
    android.database.sqlite.SQLiteDatabase mDelegate -> a
    java.lang.String[] EMPTY_STRING_ARRAY -> b
    java.lang.String getPath() -> a
    android.database.Cursor query(android.arch.persistence.db.SupportSQLiteQuery) -> b
    android.database.Cursor query(java.lang.String) -> c
android.arch.persistence.db.framework.FrameworkSQLiteDatabase$1 -> e.a$a:
    android.arch.persistence.db.SupportSQLiteQuery val$supportQuery -> a
android.arch.persistence.db.framework.FrameworkSQLiteOpenHelper -> e.b:
    android.arch.persistence.db.framework.FrameworkSQLiteOpenHelper$OpenHelper mDelegate -> a
    1:1:android.arch.persistence.db.framework.FrameworkSQLiteOpenHelper$OpenHelper android.arch.persistence.db.framework.FrameworkSQLiteOpenHelper.createDelegate(android.content.Context,java.lang.String,android.arch.persistence.db.SupportSQLiteOpenHelper$Callback):0:0 -> <init>
    1:1:void <init>(android.content.Context,java.lang.String,android.arch.persistence.db.SupportSQLiteOpenHelper$Callback):0 -> <init>
    2:2:void <init>(android.content.Context,java.lang.String,android.arch.persistence.db.SupportSQLiteOpenHelper$Callback):0:0 -> <init>
    1:1:android.arch.persistence.db.SupportSQLiteDatabase android.arch.persistence.db.framework.FrameworkSQLiteOpenHelper$OpenHelper.getWritableSupportDatabase():0:0 -> a
    1:1:android.arch.persistence.db.SupportSQLiteDatabase getWritableDatabase():0 -> a
android.arch.persistence.db.framework.FrameworkSQLiteOpenHelper$OpenHelper -> e.b$a:
    android.arch.persistence.db.framework.FrameworkSQLiteDatabase[] mDbRef -> a
    android.arch.persistence.db.SupportSQLiteOpenHelper$Callback mCallback -> b
    android.arch.persistence.db.framework.FrameworkSQLiteDatabase getWrappedDb(android.database.sqlite.SQLiteDatabase) -> a
    1:1:void android.arch.persistence.room.RoomOpenHelper.onCreate(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> onCreate
    1:1:void onCreate(android.database.sqlite.SQLiteDatabase):0 -> onCreate
    2:2:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onCreate(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> onCreate
    2:2:void android.arch.persistence.room.RoomOpenHelper.onCreate(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onCreate
    2:2:void onCreate(android.database.sqlite.SQLiteDatabase):0 -> onCreate
    3:3:java.util.List com.cleanup.todoc.database.TodocDatabase_Impl.access$000(com.cleanup.todoc.database.TodocDatabase_Impl):0:0 -> onCreate
    3:3:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onCreate(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onCreate
    3:3:void android.arch.persistence.room.RoomOpenHelper.onCreate(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onCreate
    3:3:void onCreate(android.database.sqlite.SQLiteDatabase):0 -> onCreate
    4:4:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onCreate(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> onCreate
    4:4:void android.arch.persistence.room.RoomOpenHelper.onCreate(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onCreate
    4:4:void onCreate(android.database.sqlite.SQLiteDatabase):0 -> onCreate
    5:5:java.util.List com.cleanup.todoc.database.TodocDatabase_Impl.access$200(com.cleanup.todoc.database.TodocDatabase_Impl):0:0 -> onCreate
    5:5:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onCreate(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onCreate
    5:5:void android.arch.persistence.room.RoomOpenHelper.onCreate(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onCreate
    5:5:void onCreate(android.database.sqlite.SQLiteDatabase):0 -> onCreate
    6:6:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onCreate(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> onCreate
    6:6:void android.arch.persistence.room.RoomOpenHelper.onCreate(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onCreate
    6:6:void onCreate(android.database.sqlite.SQLiteDatabase):0 -> onCreate
    1:1:void android.arch.persistence.room.RoomOpenHelper.onDowngrade(android.arch.persistence.db.SupportSQLiteDatabase,int,int):0:0 -> onDowngrade
    1:1:void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int):0 -> onDowngrade
    1:1:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.execSQL(java.lang.String):0:0 -> onOpen
    1:1:void android.arch.persistence.room.RoomOpenHelper.createMasterTableIfNotExists(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    1:1:void android.arch.persistence.room.RoomOpenHelper.checkIdentity(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    1:1:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    1:1:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    2:2:void android.arch.persistence.room.RoomOpenHelper.checkIdentity(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> onOpen
    2:2:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    2:2:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    3:3:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> onOpen
    3:3:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    4:4:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> onOpen
    4:4:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    4:4:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    5:5:android.arch.persistence.db.SupportSQLiteDatabase com.cleanup.todoc.database.TodocDatabase_Impl.access$302(com.cleanup.todoc.database.TodocDatabase_Impl,android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> onOpen
    5:5:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    5:5:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    5:5:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    6:6:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.execSQL(java.lang.String):0:0 -> onOpen
    6:6:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    6:6:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    6:6:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    7:7:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> onOpen
    7:7:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    7:7:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    8:8:void android.arch.persistence.room.RoomDatabase.internalInitInvalidationTracker(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> onOpen
    8:8:void com.cleanup.todoc.database.TodocDatabase_Impl.access$400(com.cleanup.todoc.database.TodocDatabase_Impl,android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    8:8:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    8:8:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    8:8:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    9:9:void android.arch.persistence.room.InvalidationTracker.internalInit(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> onOpen
    9:9:void android.arch.persistence.room.RoomDatabase.internalInitInvalidationTracker(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    9:9:void com.cleanup.todoc.database.TodocDatabase_Impl.access$400(com.cleanup.todoc.database.TodocDatabase_Impl,android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    9:9:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    9:9:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    9:9:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    10:10:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.beginTransaction():0:0 -> onOpen
    10:10:void android.arch.persistence.room.InvalidationTracker.internalInit(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    10:10:void android.arch.persistence.room.RoomDatabase.internalInitInvalidationTracker(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    10:10:void com.cleanup.todoc.database.TodocDatabase_Impl.access$400(com.cleanup.todoc.database.TodocDatabase_Impl,android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    10:10:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    10:10:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    10:10:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    11:11:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.execSQL(java.lang.String):0:0 -> onOpen
    11:11:void android.arch.persistence.room.InvalidationTracker.internalInit(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    11:11:void android.arch.persistence.room.RoomDatabase.internalInitInvalidationTracker(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    11:11:void com.cleanup.todoc.database.TodocDatabase_Impl.access$400(com.cleanup.todoc.database.TodocDatabase_Impl,android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    11:11:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    11:11:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    11:11:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    12:12:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.setTransactionSuccessful():0:0 -> onOpen
    12:12:void android.arch.persistence.room.InvalidationTracker.internalInit(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    12:12:void android.arch.persistence.room.RoomDatabase.internalInitInvalidationTracker(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    12:12:void com.cleanup.todoc.database.TodocDatabase_Impl.access$400(com.cleanup.todoc.database.TodocDatabase_Impl,android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    12:12:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    12:12:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    12:12:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    13:13:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.endTransaction():0:0 -> onOpen
    13:13:void android.arch.persistence.room.InvalidationTracker.internalInit(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    13:13:void android.arch.persistence.room.RoomDatabase.internalInitInvalidationTracker(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    13:13:void com.cleanup.todoc.database.TodocDatabase_Impl.access$400(com.cleanup.todoc.database.TodocDatabase_Impl,android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    13:13:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    13:13:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    13:13:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    14:14:android.arch.persistence.db.SupportSQLiteStatement android.arch.persistence.db.framework.FrameworkSQLiteDatabase.compileStatement(java.lang.String):0:0 -> onOpen
    14:14:void android.arch.persistence.room.InvalidationTracker.internalInit(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    14:14:void android.arch.persistence.room.RoomDatabase.internalInitInvalidationTracker(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    14:14:void com.cleanup.todoc.database.TodocDatabase_Impl.access$400(com.cleanup.todoc.database.TodocDatabase_Impl,android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    14:14:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    14:14:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    14:14:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    15:15:void android.arch.persistence.room.InvalidationTracker.internalInit(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> onOpen
    15:15:void android.arch.persistence.room.RoomDatabase.internalInitInvalidationTracker(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    15:15:void com.cleanup.todoc.database.TodocDatabase_Impl.access$400(com.cleanup.todoc.database.TodocDatabase_Impl,android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    15:15:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    15:15:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    15:15:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    16:16:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> onOpen
    16:16:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    16:16:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    17:17:java.util.List com.cleanup.todoc.database.TodocDatabase_Impl.access$500(com.cleanup.todoc.database.TodocDatabase_Impl):0:0 -> onOpen
    17:17:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    17:17:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    17:17:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    18:18:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> onOpen
    18:18:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    18:18:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    19:19:java.util.List com.cleanup.todoc.database.TodocDatabase_Impl.access$700(com.cleanup.todoc.database.TodocDatabase_Impl):0:0 -> onOpen
    19:19:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    19:19:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    19:19:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    20:20:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> onOpen
    20:20:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    20:20:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    21:21:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> onOpen
    21:21:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    22:22:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.endTransaction():0:0 -> onOpen
    22:22:void android.arch.persistence.room.InvalidationTracker.internalInit(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    22:22:void android.arch.persistence.room.RoomDatabase.internalInitInvalidationTracker(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    22:22:void com.cleanup.todoc.database.TodocDatabase_Impl.access$400(com.cleanup.todoc.database.TodocDatabase_Impl,android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    22:22:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    22:22:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    22:22:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    23:23:void android.arch.persistence.room.InvalidationTracker.internalInit(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> onOpen
    23:23:void android.arch.persistence.room.RoomDatabase.internalInitInvalidationTracker(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    23:23:void com.cleanup.todoc.database.TodocDatabase_Impl.access$400(com.cleanup.todoc.database.TodocDatabase_Impl,android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    23:23:void com.cleanup.todoc.database.TodocDatabase_Impl$1.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    23:23:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    23:23:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
    24:24:void android.arch.persistence.room.RoomOpenHelper.checkIdentity(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> onOpen
    24:24:void android.arch.persistence.room.RoomOpenHelper.onOpen(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onOpen
    24:24:void onOpen(android.database.sqlite.SQLiteDatabase):0 -> onOpen
android.arch.persistence.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$1 -> e.b$a$a:
    android.arch.persistence.db.framework.FrameworkSQLiteDatabase[] val$dbRef -> a
    android.arch.persistence.db.SupportSQLiteOpenHelper$Callback val$callback -> b
    1:1:void android.arch.persistence.db.SupportSQLiteOpenHelper$Callback.onCorruption(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> onCorruption
    1:1:void onCorruption(android.database.sqlite.SQLiteDatabase):0 -> onCorruption
    2:2:boolean android.arch.persistence.db.framework.FrameworkSQLiteDatabase.isOpen():0:0 -> onCorruption
    2:2:void android.arch.persistence.db.SupportSQLiteOpenHelper$Callback.onCorruption(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onCorruption
    2:2:void onCorruption(android.database.sqlite.SQLiteDatabase):0 -> onCorruption
    3:3:java.util.List android.arch.persistence.db.framework.FrameworkSQLiteDatabase.getAttachedDbs():0:0 -> onCorruption
    3:3:void android.arch.persistence.db.SupportSQLiteOpenHelper$Callback.onCorruption(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onCorruption
    3:3:void onCorruption(android.database.sqlite.SQLiteDatabase):0 -> onCorruption
    4:4:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.close():0:0 -> onCorruption
    4:4:void android.arch.persistence.db.SupportSQLiteOpenHelper$Callback.onCorruption(android.arch.persistence.db.SupportSQLiteDatabase):0 -> onCorruption
    4:4:void onCorruption(android.database.sqlite.SQLiteDatabase):0 -> onCorruption
    5:5:void android.arch.persistence.db.SupportSQLiteOpenHelper$Callback.onCorruption(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> onCorruption
    5:5:void onCorruption(android.database.sqlite.SQLiteDatabase):0 -> onCorruption
android.arch.persistence.db.framework.FrameworkSQLiteOpenHelperFactory -> e.c:
android.arch.persistence.db.framework.FrameworkSQLiteProgram -> e.d:
    android.database.sqlite.SQLiteProgram mDelegate -> b
    int $r8$classId -> a
    1:1:void android.arch.persistence.db.framework.FrameworkSQLiteProgram.<init>(android.database.sqlite.SQLiteProgram):0:0 -> <init>
    1:1:void $r8$init$bridge(android.database.sqlite.SQLiteProgram):0 -> <init>
    2:2:void android.arch.persistence.db.framework.FrameworkSQLiteStatement.<init>(android.database.sqlite.SQLiteStatement):0:0 -> <init>
    2:2:void android.arch.persistence.db.framework.FrameworkSQLiteStatement.$r8$init$bridge(android.database.sqlite.SQLiteStatement):0 -> <init>
    1:1:void android.arch.persistence.db.framework.FrameworkSQLiteProgram.bindBlob(int,byte[]):0:0 -> a
    1:1:void bindBlob$bridge(int,byte[]):0 -> a
    2:2:void android.arch.persistence.db.framework.FrameworkSQLiteStatement.bindBlob(int,byte[]):0:0 -> a
    2:2:void bindBlob$bridge(int,byte[]):0 -> a
    1:1:void android.arch.persistence.db.framework.FrameworkSQLiteProgram.bindDouble(int,double):0:0 -> b
    1:1:void bindDouble$bridge(int,double):0 -> b
    2:2:void android.arch.persistence.db.framework.FrameworkSQLiteStatement.bindDouble(int,double):0:0 -> b
    2:2:void bindDouble$bridge(int,double):0 -> b
    1:1:void android.arch.persistence.db.framework.FrameworkSQLiteProgram.bindLong(int,long):0:0 -> c
    1:1:void bindLong$bridge(int,long):0 -> c
    2:2:void android.arch.persistence.db.framework.FrameworkSQLiteStatement.bindLong(int,long):0:0 -> c
    2:2:void bindLong$bridge(int,long):0 -> c
    1:1:void android.arch.persistence.db.framework.FrameworkSQLiteProgram.close():0:0 -> close
    1:1:void close$bridge():0 -> close
    2:2:void android.arch.persistence.db.framework.FrameworkSQLiteStatement.close():0:0 -> close
    2:2:void close$bridge():0 -> close
    1:1:void android.arch.persistence.db.framework.FrameworkSQLiteProgram.bindNull(int):0:0 -> d
    1:1:void bindNull$bridge(int):0 -> d
    2:2:void android.arch.persistence.db.framework.FrameworkSQLiteStatement.bindNull(int):0:0 -> d
    2:2:void bindNull$bridge(int):0 -> d
    1:1:void android.arch.persistence.db.framework.FrameworkSQLiteProgram.bindString(int,java.lang.String):0:0 -> e
    1:1:void bindString$bridge(int,java.lang.String):0 -> e
    2:2:void android.arch.persistence.db.framework.FrameworkSQLiteStatement.bindString(int,java.lang.String):0:0 -> e
    2:2:void bindString$bridge(int,java.lang.String):0 -> e
android.arch.persistence.room.DatabaseConfiguration -> f.a:
    android.arch.persistence.db.SupportSQLiteOpenHelper$Factory sqliteOpenHelperFactory -> a
    android.content.Context context -> b
    java.util.List callbacks -> e
    android.arch.persistence.room.RoomDatabase$MigrationContainer migrationContainer -> d
    java.lang.String name -> c
android.arch.persistence.room.EntityDeletionOrUpdateAdapter -> f.b:
    1:1:void android.arch.persistence.room.EntityDeletionOrUpdateAdapter.<init>(android.arch.persistence.room.RoomDatabase):0:0 -> <init>
    1:1:void $r8$init$bridge(android.arch.persistence.room.RoomDatabase):0 -> <init>
    2:2:void android.arch.persistence.room.EntityInsertionAdapter.<init>(android.arch.persistence.room.RoomDatabase):0:0 -> <init>
    2:2:void $r8$init$bridge(android.arch.persistence.room.RoomDatabase):0 -> <init>
    void bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object) -> e
android.arch.persistence.room.InvalidationTracker -> f.c:
    long[] mTableVersions -> c
    java.lang.Object[] mQueryArgs -> d
    long mMaxVersion -> e
    java.lang.String[] mTableNames -> b
    android.arch.core.internal.SafeIterableMap mObserverMap -> k
    android.arch.persistence.db.SupportSQLiteStatement mCleanupStatement -> i
    java.util.concurrent.atomic.AtomicBoolean mPendingRefresh -> g
    java.lang.String[] TRIGGERS -> n
    android.support.v4.util.ArrayMap mTableIdLookup -> a
    android.arch.persistence.room.InvalidationTracker$ObservedTableTracker mObservedTableTracker -> j
    java.lang.Runnable mRefreshRunnable -> m
    java.lang.Runnable mSyncTriggers -> l
    boolean mInitialized -> h
    android.arch.persistence.room.RoomDatabase mDatabase -> f
    1:1:boolean android.arch.persistence.room.InvalidationTracker.ensureInitialization():0:0 -> a
    1:1:boolean access$100(android.arch.persistence.room.InvalidationTracker):0 -> a
    2:2:boolean android.arch.persistence.room.RoomDatabase.isOpen():0:0 -> a
    2:2:boolean android.arch.persistence.room.InvalidationTracker.ensureInitialization():0 -> a
    2:2:boolean access$100(android.arch.persistence.room.InvalidationTracker):0 -> a
    3:3:boolean android.arch.persistence.db.framework.FrameworkSQLiteDatabase.isOpen():0:0 -> a
    3:3:boolean android.arch.persistence.room.RoomDatabase.isOpen():0 -> a
    3:3:boolean android.arch.persistence.room.InvalidationTracker.ensureInitialization():0 -> a
    3:3:boolean access$100(android.arch.persistence.room.InvalidationTracker):0 -> a
    4:4:boolean android.arch.persistence.room.InvalidationTracker.ensureInitialization():0:0 -> a
    4:4:boolean access$100(android.arch.persistence.room.InvalidationTracker):0 -> a
    5:5:android.arch.persistence.db.SupportSQLiteOpenHelper android.arch.persistence.room.RoomDatabase.getOpenHelper():0:0 -> a
    5:5:boolean android.arch.persistence.room.InvalidationTracker.ensureInitialization():0 -> a
    5:5:boolean access$100(android.arch.persistence.room.InvalidationTracker):0 -> a
    6:6:boolean android.arch.persistence.room.InvalidationTracker.ensureInitialization():0:0 -> a
    6:6:boolean access$100(android.arch.persistence.room.InvalidationTracker):0 -> a
    1:1:void android.arch.persistence.room.InvalidationTracker.startTrackingTable(android.arch.persistence.db.SupportSQLiteDatabase,int):0:0 -> b
    1:1:void access$300(android.arch.persistence.room.InvalidationTracker,android.arch.persistence.db.SupportSQLiteDatabase,int):0 -> b
    2:2:void android.arch.persistence.room.InvalidationTracker.appendTriggerName(java.lang.StringBuilder,java.lang.String,java.lang.String):0:0 -> b
    2:2:void android.arch.persistence.room.InvalidationTracker.startTrackingTable(android.arch.persistence.db.SupportSQLiteDatabase,int):0 -> b
    2:2:void access$300(android.arch.persistence.room.InvalidationTracker,android.arch.persistence.db.SupportSQLiteDatabase,int):0 -> b
    3:3:void android.arch.persistence.room.InvalidationTracker.startTrackingTable(android.arch.persistence.db.SupportSQLiteDatabase,int):0:0 -> b
    3:3:void access$300(android.arch.persistence.room.InvalidationTracker,android.arch.persistence.db.SupportSQLiteDatabase,int):0 -> b
    4:4:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.execSQL(java.lang.String):0:0 -> b
    4:4:void android.arch.persistence.room.InvalidationTracker.startTrackingTable(android.arch.persistence.db.SupportSQLiteDatabase,int):0 -> b
    4:4:void access$300(android.arch.persistence.room.InvalidationTracker,android.arch.persistence.db.SupportSQLiteDatabase,int):0 -> b
    1:1:void android.arch.persistence.room.InvalidationTracker.stopTrackingTable(android.arch.persistence.db.SupportSQLiteDatabase,int):0:0 -> c
    1:1:void access$400(android.arch.persistence.room.InvalidationTracker,android.arch.persistence.db.SupportSQLiteDatabase,int):0 -> c
    2:2:void android.arch.persistence.room.InvalidationTracker.appendTriggerName(java.lang.StringBuilder,java.lang.String,java.lang.String):0:0 -> c
    2:2:void android.arch.persistence.room.InvalidationTracker.stopTrackingTable(android.arch.persistence.db.SupportSQLiteDatabase,int):0 -> c
    2:2:void access$400(android.arch.persistence.room.InvalidationTracker,android.arch.persistence.db.SupportSQLiteDatabase,int):0 -> c
    3:3:void android.arch.persistence.room.InvalidationTracker.stopTrackingTable(android.arch.persistence.db.SupportSQLiteDatabase,int):0:0 -> c
    3:3:void access$400(android.arch.persistence.room.InvalidationTracker,android.arch.persistence.db.SupportSQLiteDatabase,int):0 -> c
    4:4:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.execSQL(java.lang.String):0:0 -> c
    4:4:void android.arch.persistence.room.InvalidationTracker.stopTrackingTable(android.arch.persistence.db.SupportSQLiteDatabase,int):0 -> c
    4:4:void access$400(android.arch.persistence.room.InvalidationTracker,android.arch.persistence.db.SupportSQLiteDatabase,int):0 -> c
    1:1:void android.arch.persistence.room.InvalidationTracker.addObserver(android.arch.persistence.room.InvalidationTracker$Observer):0:0 -> d
    1:1:void addWeakObserver(android.arch.persistence.room.InvalidationTracker$Observer):0 -> d
    2:2:boolean android.arch.persistence.room.InvalidationTracker$ObservedTableTracker.onAdded(int[]):0:0 -> d
    2:2:void android.arch.persistence.room.InvalidationTracker.addObserver(android.arch.persistence.room.InvalidationTracker$Observer):0 -> d
    2:2:void addWeakObserver(android.arch.persistence.room.InvalidationTracker$Observer):0 -> d
    3:3:void android.arch.persistence.room.InvalidationTracker.addObserver(android.arch.persistence.room.InvalidationTracker$Observer):0:0 -> d
    3:3:void addWeakObserver(android.arch.persistence.room.InvalidationTracker$Observer):0 -> d
    4:4:void android.arch.core.executor.ArchTaskExecutor.executeOnDiskIO(java.lang.Runnable):0:0 -> d
    4:4:void android.arch.persistence.room.InvalidationTracker.addObserver(android.arch.persistence.room.InvalidationTracker$Observer):0 -> d
    4:4:void addWeakObserver(android.arch.persistence.room.InvalidationTracker$Observer):0 -> d
    5:5:boolean android.arch.persistence.room.InvalidationTracker$ObservedTableTracker.onAdded(int[]):0:0 -> d
    5:5:void android.arch.persistence.room.InvalidationTracker.addObserver(android.arch.persistence.room.InvalidationTracker$Observer):0 -> d
    5:5:void addWeakObserver(android.arch.persistence.room.InvalidationTracker$Observer):0 -> d
    6:6:void android.arch.persistence.room.InvalidationTracker.addObserver(android.arch.persistence.room.InvalidationTracker$Observer):0:0 -> d
    6:6:void addWeakObserver(android.arch.persistence.room.InvalidationTracker$Observer):0 -> d
android.arch.persistence.room.InvalidationTracker$1 -> f.c$a:
    android.arch.persistence.room.InvalidationTracker this$0 -> b
    1:1:android.arch.persistence.room.RoomDatabase android.arch.persistence.room.InvalidationTracker.access$000(android.arch.persistence.room.InvalidationTracker):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:android.arch.persistence.room.InvalidationTracker$ObservedTableTracker android.arch.persistence.room.InvalidationTracker.access$200(android.arch.persistence.room.InvalidationTracker):0:0 -> run
    3:3:void run():0 -> run
    4:4:void run():0:0 -> run
    5:5:android.arch.persistence.room.RoomDatabase android.arch.persistence.room.InvalidationTracker.access$000(android.arch.persistence.room.InvalidationTracker):0:0 -> run
    5:5:void run():0 -> run
    6:6:android.arch.persistence.db.SupportSQLiteOpenHelper android.arch.persistence.room.RoomDatabase.getOpenHelper():0:0 -> run
    6:6:void run():0 -> run
    7:7:void run():0:0 -> run
    8:8:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.beginTransaction():0:0 -> run
    8:8:void run():0 -> run
    9:9:void run():0:0 -> run
    10:10:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.setTransactionSuccessful():0:0 -> run
    10:10:void run():0 -> run
    11:11:void run():0:0 -> run
    12:12:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.endTransaction():0:0 -> run
    12:12:void run():0 -> run
    13:13:void run():0:0 -> run
    14:14:android.arch.persistence.room.InvalidationTracker$ObservedTableTracker android.arch.persistence.room.InvalidationTracker.access$200(android.arch.persistence.room.InvalidationTracker):0:0 -> run
    14:14:void run():0 -> run
    15:15:void android.arch.persistence.room.InvalidationTracker$ObservedTableTracker.onSyncCompleted():0:0 -> run
    15:15:void run():0 -> run
    16:16:void run():0:0 -> run
    17:17:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.endTransaction():0:0 -> run
    17:17:void run():0 -> run
    18:18:void run():0:0 -> run
android.arch.persistence.room.InvalidationTracker$2 -> f.c$b:
    android.arch.persistence.room.InvalidationTracker this$0 -> b
    1:1:android.arch.persistence.room.RoomDatabase android.arch.persistence.room.InvalidationTracker.access$000(android.arch.persistence.room.InvalidationTracker):0:0 -> run
    1:1:void run():0 -> run
    2:2:java.util.concurrent.locks.Lock android.arch.persistence.room.RoomDatabase.getCloseLock():0:0 -> run
    2:2:void run():0 -> run
    3:3:void run():0:0 -> run
    4:4:android.arch.persistence.room.RoomDatabase android.arch.persistence.room.InvalidationTracker.access$000(android.arch.persistence.room.InvalidationTracker):0:0 -> run
    4:4:void run():0 -> run
    5:5:void run():0:0 -> run
    6:6:android.arch.persistence.db.SupportSQLiteStatement android.arch.persistence.room.InvalidationTracker.access$500(android.arch.persistence.room.InvalidationTracker):0:0 -> run
    6:6:void run():0 -> run
    7:7:int android.arch.persistence.db.framework.FrameworkSQLiteStatement.executeUpdateDelete():0:0 -> run
    7:7:void run():0 -> run
    8:8:void run():0:0 -> run
    9:9:java.lang.Object[] android.arch.persistence.room.InvalidationTracker.access$600(android.arch.persistence.room.InvalidationTracker):0:0 -> run
    9:9:void run():0 -> run
    10:10:long android.arch.persistence.room.InvalidationTracker.access$700(android.arch.persistence.room.InvalidationTracker):0:0 -> run
    10:10:void run():0 -> run
    11:11:void run():0:0 -> run
    12:12:android.arch.persistence.room.RoomDatabase android.arch.persistence.room.InvalidationTracker.access$000(android.arch.persistence.room.InvalidationTracker):0:0 -> run
    12:12:void run():0 -> run
    13:13:java.lang.Object[] android.arch.persistence.room.InvalidationTracker.access$600(android.arch.persistence.room.InvalidationTracker):0:0 -> run
    13:13:void run():0 -> run
    14:14:void run():0:0 -> run
    15:15:long android.arch.persistence.room.InvalidationTracker.access$702(android.arch.persistence.room.InvalidationTracker,long):0:0 -> run
    15:15:void run():0 -> run
    16:16:void run():0:0 -> run
android.arch.persistence.room.InvalidationTracker$ObservedTableTracker -> f.c$c:
    int[] mTriggerStateChanges -> c
    long[] mTableObservers -> a
    boolean mPendingSync -> e
    boolean[] mTriggerStates -> b
    boolean mNeedsSync -> d
    int[] getTablesToSync() -> a
android.arch.persistence.room.InvalidationTracker$Observer -> f.c$d:
    java.lang.String[] mTables -> a
    void onInvalidated(java.util.Set) -> a
android.arch.persistence.room.InvalidationTracker$ObserverWrapper -> f.c$e:
    long[] mVersions -> c
    android.arch.persistence.room.InvalidationTracker$Observer mObserver -> d
    java.util.Set mSingleTableSet -> e
    int[] mTableIds -> a
    java.lang.String[] mTableNames -> b
    1:1:void android.support.v4.util.ArraySet.<init>():0:0 -> <init>
    1:1:void <init>(android.arch.persistence.room.InvalidationTracker$Observer,int[],java.lang.String[],long[]):0 -> <init>
    2:2:void <init>(android.arch.persistence.room.InvalidationTracker$Observer,int[],java.lang.String[],long[]):0:0 -> <init>
    void checkForInvalidation(long[]) -> a
android.arch.persistence.room.InvalidationTracker$WeakObserver -> f.c$f:
    android.arch.persistence.room.InvalidationTracker mTracker -> b
    java.lang.ref.WeakReference mDelegateRef -> c
    1:1:void android.arch.persistence.room.InvalidationTracker.removeObserver(android.arch.persistence.room.InvalidationTracker$Observer):0:0 -> a
    1:1:void onInvalidated(java.util.Set):0 -> a
    2:2:boolean android.arch.persistence.room.InvalidationTracker$ObservedTableTracker.onRemoved(int[]):0:0 -> a
    2:2:void android.arch.persistence.room.InvalidationTracker.removeObserver(android.arch.persistence.room.InvalidationTracker$Observer):0 -> a
    2:2:void onInvalidated(java.util.Set):0 -> a
    3:3:void android.arch.persistence.room.InvalidationTracker.removeObserver(android.arch.persistence.room.InvalidationTracker$Observer):0:0 -> a
    3:3:void onInvalidated(java.util.Set):0 -> a
    4:4:void android.arch.core.executor.ArchTaskExecutor.executeOnDiskIO(java.lang.Runnable):0:0 -> a
    4:4:void android.arch.persistence.room.InvalidationTracker.removeObserver(android.arch.persistence.room.InvalidationTracker$Observer):0 -> a
    4:4:void onInvalidated(java.util.Set):0 -> a
    5:5:boolean android.arch.persistence.room.InvalidationTracker$ObservedTableTracker.onRemoved(int[]):0:0 -> a
    5:5:void android.arch.persistence.room.InvalidationTracker.removeObserver(android.arch.persistence.room.InvalidationTracker$Observer):0 -> a
    5:5:void onInvalidated(java.util.Set):0 -> a
    6:6:void android.arch.persistence.room.InvalidationTracker.removeObserver(android.arch.persistence.room.InvalidationTracker$Observer):0:0 -> a
    6:6:void onInvalidated(java.util.Set):0 -> a
    7:7:void onInvalidated(java.util.Set):0:0 -> a
android.arch.persistence.room.RoomDatabase -> f.d:
    android.arch.persistence.room.InvalidationTracker mInvalidationTracker -> c
    java.util.List mCallbacks -> e
    android.arch.persistence.db.SupportSQLiteOpenHelper mOpenHelper -> b
    android.arch.persistence.db.SupportSQLiteDatabase mDatabase -> a
    java.util.concurrent.locks.ReentrantLock mCloseLock -> f
    boolean mAllowMainThreadQueries -> d
    void assertNotMainThread() -> a
    1:1:void android.arch.persistence.room.InvalidationTracker.syncTriggers():0:0 -> b
    1:1:void beginTransaction():0 -> b
    2:2:void beginTransaction():0:0 -> b
    3:3:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.beginTransaction():0:0 -> b
    3:3:void beginTransaction():0 -> b
    android.arch.persistence.room.InvalidationTracker createInvalidationTracker() -> c
    android.arch.persistence.db.SupportSQLiteOpenHelper createOpenHelper(android.arch.persistence.room.DatabaseConfiguration) -> d
    1:1:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.endTransaction():0:0 -> e
    1:1:void endTransaction():0 -> e
    2:2:void endTransaction():0:0 -> e
    3:3:void android.arch.persistence.room.InvalidationTracker.refreshVersionsAsync():0:0 -> e
    3:3:void endTransaction():0 -> e
    4:4:void android.arch.core.executor.ArchTaskExecutor.executeOnDiskIO(java.lang.Runnable):0:0 -> e
    4:4:void android.arch.persistence.room.InvalidationTracker.refreshVersionsAsync():0 -> e
    4:4:void endTransaction():0 -> e
    1:1:boolean android.arch.persistence.db.framework.FrameworkSQLiteDatabase.inTransaction():0:0 -> f
    1:1:boolean inTransaction():0 -> f
    android.database.Cursor query(java.lang.String,java.lang.Object[]) -> g
android.arch.persistence.room.RoomDatabase$Builder -> f.d$a:
    android.content.Context mContext -> c
    android.arch.persistence.room.RoomDatabase$MigrationContainer mMigrationContainer -> f
    java.util.ArrayList mCallbacks -> d
    java.lang.Class mDatabaseClass -> a
    java.lang.String mName -> b
    android.arch.persistence.db.SupportSQLiteOpenHelper$Factory mFactory -> e
    1:1:java.lang.Object android.arch.persistence.room.Room.getGeneratedImplementation(java.lang.Class,java.lang.String):0:0 -> a
    1:1:android.arch.persistence.room.RoomDatabase build():0 -> a
    2:2:android.arch.persistence.room.RoomDatabase build():0:0 -> a
    3:3:void android.arch.persistence.room.RoomDatabase.init(android.arch.persistence.room.DatabaseConfiguration):0:0 -> a
    3:3:android.arch.persistence.room.RoomDatabase build():0 -> a
    4:4:java.lang.Object android.arch.persistence.room.Room.getGeneratedImplementation(java.lang.Class,java.lang.String):0:0 -> a
    4:4:android.arch.persistence.room.RoomDatabase build():0 -> a
    5:5:android.arch.persistence.room.RoomDatabase build():0:0 -> a
android.arch.persistence.room.RoomDatabase$Callback -> f.d$b:
    void onCreate(android.arch.persistence.db.SupportSQLiteDatabase) -> a
android.arch.persistence.room.RoomDatabase$MigrationContainer -> f.d$c:
    android.support.v4.util.SparseArrayCompat mMigrations -> a
    1:1:void android.support.v4.util.SparseArrayCompat.<init>():0:0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:void <init>():0:0 -> <init>
android.arch.persistence.room.RoomOpenHelper -> f.e:
    android.arch.persistence.room.RoomOpenHelper$Delegate mDelegate -> c
    android.arch.persistence.room.DatabaseConfiguration mConfiguration -> b
    1:1:java.util.List android.arch.persistence.room.RoomDatabase$MigrationContainer.findMigrationPath(int,int):0:0 -> b
    1:1:void onUpgrade(android.arch.persistence.db.SupportSQLiteDatabase,int,int):0 -> b
    2:2:java.util.List android.arch.persistence.room.RoomDatabase$MigrationContainer.findUpMigrationPath(java.util.List,boolean,int,int):0:0 -> b
    2:2:java.util.List android.arch.persistence.room.RoomDatabase$MigrationContainer.findMigrationPath(int,int):0 -> b
    2:2:void onUpgrade(android.arch.persistence.db.SupportSQLiteDatabase,int,int):0 -> b
    3:3:void onUpgrade(android.arch.persistence.db.SupportSQLiteDatabase,int,int):0:0 -> b
    4:4:void com.cleanup.todoc.database.TodocDatabase_Impl$1.validateMigration(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> b
    4:4:void onUpgrade(android.arch.persistence.db.SupportSQLiteDatabase,int,int):0 -> b
    5:5:void onUpgrade(android.arch.persistence.db.SupportSQLiteDatabase,int,int):0:0 -> b
    6:6:void com.cleanup.todoc.database.TodocDatabase_Impl$1.validateMigration(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> b
    6:6:void onUpgrade(android.arch.persistence.db.SupportSQLiteDatabase,int,int):0 -> b
    7:7:void onUpgrade(android.arch.persistence.db.SupportSQLiteDatabase,int,int):0:0 -> b
    1:1:void android.arch.persistence.room.RoomOpenHelper.createMasterTableIfNotExists(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> c
    1:1:void updateIdentity(android.arch.persistence.db.SupportSQLiteDatabase):0 -> c
    2:2:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.execSQL(java.lang.String):0:0 -> c
    2:2:void android.arch.persistence.room.RoomOpenHelper.createMasterTableIfNotExists(android.arch.persistence.db.SupportSQLiteDatabase):0 -> c
    2:2:void updateIdentity(android.arch.persistence.db.SupportSQLiteDatabase):0 -> c
    3:3:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.execSQL(java.lang.String):0:0 -> c
    3:3:void updateIdentity(android.arch.persistence.db.SupportSQLiteDatabase):0 -> c
android.arch.persistence.room.RoomOpenHelper$Delegate -> f.e$a:
    int version -> a
    void createAllTables(android.arch.persistence.db.SupportSQLiteDatabase) -> a
android.arch.persistence.room.RoomSQLiteQuery -> f.f:
    int[] mBindingTypes -> f
    byte[][] mBlobBindings -> e
    int mArgCount -> h
    long[] mLongBindings -> b
    double[] mDoubleBindings -> c
    java.lang.String[] mStringBindings -> d
    int mCapacity -> g
    java.lang.String mQuery -> a
    java.util.TreeMap sQueryPool -> i
    java.lang.String getSql() -> a
    void bindTo(android.arch.persistence.db.SupportSQLiteProgram) -> b
    1:1:void android.arch.persistence.room.RoomSQLiteQuery.init(java.lang.String,int):0:0 -> c
    1:1:android.arch.persistence.room.RoomSQLiteQuery acquire(java.lang.String,int):0 -> c
    2:2:android.arch.persistence.room.RoomSQLiteQuery acquire(java.lang.String,int):0:0 -> c
    3:3:void android.arch.persistence.room.RoomSQLiteQuery.init(java.lang.String,int):0:0 -> c
    3:3:android.arch.persistence.room.RoomSQLiteQuery acquire(java.lang.String,int):0 -> c
    4:4:android.arch.persistence.room.RoomSQLiteQuery acquire(java.lang.String,int):0:0 -> c
    1:1:void android.arch.persistence.room.RoomSQLiteQuery.prunePoolLocked():0:0 -> d
    1:1:void release():0 -> d
    2:2:void release():0:0 -> d
android.arch.persistence.room.SharedSQLiteStatement -> f.g:
    java.util.concurrent.atomic.AtomicBoolean mLock -> a
    android.arch.persistence.room.RoomDatabase mDatabase -> b
    android.arch.persistence.db.SupportSQLiteStatement mStmt -> c
    1:1:void android.arch.persistence.room.SharedSQLiteStatement.assertNotMainThread():0:0 -> a
    1:1:android.arch.persistence.db.SupportSQLiteStatement acquire():0 -> a
    2:2:android.arch.persistence.db.SupportSQLiteStatement acquire():0:0 -> a
    3:3:android.arch.persistence.db.SupportSQLiteStatement android.arch.persistence.room.SharedSQLiteStatement.getStmt(boolean):0:0 -> a
    3:3:android.arch.persistence.db.SupportSQLiteStatement acquire():0 -> a
    1:1:android.arch.persistence.db.SupportSQLiteStatement android.arch.persistence.room.RoomDatabase.compileStatement(java.lang.String):0:0 -> b
    1:1:android.arch.persistence.db.SupportSQLiteStatement createNewStatement():0 -> b
    2:2:android.arch.persistence.db.SupportSQLiteStatement android.arch.persistence.db.framework.FrameworkSQLiteDatabase.compileStatement(java.lang.String):0:0 -> b
    2:2:android.arch.persistence.db.SupportSQLiteStatement android.arch.persistence.room.RoomDatabase.compileStatement(java.lang.String):0 -> b
    2:2:android.arch.persistence.db.SupportSQLiteStatement createNewStatement():0 -> b
    java.lang.String createQuery() -> c
    void release(android.arch.persistence.db.SupportSQLiteStatement) -> d
android.arch.persistence.room.migration.Migration -> g.a:
    void migrate(android.arch.persistence.db.SupportSQLiteDatabase) -> a
android.arch.persistence.room.util.TableInfo -> h.a:
    java.util.Map columns -> b
    java.util.Set foreignKeys -> c
    java.util.Set indices -> d
    java.lang.String name -> a
    1:1:java.util.Map android.arch.persistence.room.util.TableInfo.readColumns(android.arch.persistence.db.SupportSQLiteDatabase,java.lang.String):0:0 -> a
    1:1:android.arch.persistence.room.util.TableInfo read(android.arch.persistence.db.SupportSQLiteDatabase,java.lang.String):0 -> a
    2:2:java.util.Set android.arch.persistence.room.util.TableInfo.readForeignKeys(android.arch.persistence.db.SupportSQLiteDatabase,java.lang.String):0:0 -> a
    2:2:android.arch.persistence.room.util.TableInfo read(android.arch.persistence.db.SupportSQLiteDatabase,java.lang.String):0 -> a
    3:3:java.util.Set android.arch.persistence.room.util.TableInfo.readIndices(android.arch.persistence.db.SupportSQLiteDatabase,java.lang.String):0:0 -> a
    3:3:android.arch.persistence.room.util.TableInfo read(android.arch.persistence.db.SupportSQLiteDatabase,java.lang.String):0 -> a
    4:4:android.arch.persistence.room.util.TableInfo read(android.arch.persistence.db.SupportSQLiteDatabase,java.lang.String):0:0 -> a
    5:5:java.util.Set android.arch.persistence.room.util.TableInfo.readIndices(android.arch.persistence.db.SupportSQLiteDatabase,java.lang.String):0:0 -> a
    5:5:android.arch.persistence.room.util.TableInfo read(android.arch.persistence.db.SupportSQLiteDatabase,java.lang.String):0 -> a
    6:6:java.util.Set android.arch.persistence.room.util.TableInfo.readForeignKeys(android.arch.persistence.db.SupportSQLiteDatabase,java.lang.String):0:0 -> a
    6:6:android.arch.persistence.room.util.TableInfo read(android.arch.persistence.db.SupportSQLiteDatabase,java.lang.String):0 -> a
    7:7:java.util.Map android.arch.persistence.room.util.TableInfo.readColumns(android.arch.persistence.db.SupportSQLiteDatabase,java.lang.String):0:0 -> a
    7:7:android.arch.persistence.room.util.TableInfo read(android.arch.persistence.db.SupportSQLiteDatabase,java.lang.String):0 -> a
    java.util.List readForeignKeyFieldMappings(android.database.Cursor) -> b
    android.arch.persistence.room.util.TableInfo$Index readIndex(android.arch.persistence.db.SupportSQLiteDatabase,java.lang.String,boolean) -> c
android.arch.persistence.room.util.TableInfo$Column -> h.a$a:
    java.lang.String name -> a
    int primaryKeyPosition -> d
    java.lang.String type -> b
    boolean notNull -> c
android.arch.persistence.room.util.TableInfo$ForeignKey -> h.a$b:
    java.util.List referenceColumnNames -> e
    java.util.List columnNames -> d
    java.lang.String referenceTable -> a
    java.lang.String onUpdate -> c
    java.lang.String onDelete -> b
android.arch.persistence.room.util.TableInfo$ForeignKeyWithSequence -> h.a$c:
    int mSequence -> b
    java.lang.String mFrom -> c
    int mId -> a
    java.lang.String mTo -> d
    1:1:int android.arch.persistence.room.util.TableInfo$ForeignKeyWithSequence.compareTo(android.arch.persistence.room.util.TableInfo$ForeignKeyWithSequence):0:0 -> compareTo
    1:1:int compareTo(java.lang.Object):0 -> compareTo
android.arch.persistence.room.util.TableInfo$Index -> h.a$d:
    java.util.List columns -> c
    java.lang.String name -> a
    boolean unique -> b
android.support.compat.R$styleable -> i.a:
    int[] FontFamily -> b
    int[] FontFamilyFont -> c
    int[] GradientColor -> d
    int[] GradientColorItem -> e
    int[] ColorStateListItem -> a
android.support.coordinatorlayout.R$styleable -> j.a:
    int[] CoordinatorLayout_Layout -> b
    int[] CoordinatorLayout -> a
android.support.design.R$styleable -> k.a:
    int[] MaterialButton -> f
    int[] ScrollingViewBehavior_Layout -> g
    int[] SnackbarLayout -> h
    int[] ThemeEnforcement -> i
    int[] BottomSheetBehavior_Layout -> b
    int[] FloatingActionButton -> c
    int[] FloatingActionButton_Behavior_Layout -> d
    int[] ForegroundLinearLayout -> e
    int[] AppBarLayout_Layout -> a
android.support.design.animation.AnimationUtils -> l.a:
    android.animation.TimeInterpolator FAST_OUT_SLOW_IN_INTERPOLATOR -> a
    android.animation.TimeInterpolator FAST_OUT_LINEAR_IN_INTERPOLATOR -> b
    android.animation.TimeInterpolator LINEAR_OUT_SLOW_IN_INTERPOLATOR -> c
    android.animation.TimeInterpolator DECELERATE_INTERPOLATOR -> d
android.support.design.animation.ArgbEvaluatorCompat -> l.b:
    android.support.design.animation.ArgbEvaluatorCompat instance -> a
    1:1:java.lang.Integer android.support.design.animation.ArgbEvaluatorCompat.evaluate(float,java.lang.Integer,java.lang.Integer):0:0 -> evaluate
    1:1:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object):0 -> evaluate
android.support.design.animation.ChildrenAlphaProperty -> l.c:
    android.util.Property CHILDREN_ALPHA -> a
    1:1:java.lang.Float android.support.design.animation.ChildrenAlphaProperty.get(android.view.ViewGroup):0:0 -> get
    1:1:java.lang.Object get(java.lang.Object):0 -> get
    1:1:void android.support.design.animation.ChildrenAlphaProperty.set(android.view.ViewGroup,java.lang.Float):0:0 -> set
    1:1:void set(java.lang.Object,java.lang.Object):0 -> set
android.support.design.animation.DrawableAlphaProperty -> l.d:
    android.util.Property DRAWABLE_ALPHA_COMPAT -> a
    1:1:java.lang.Integer android.support.design.animation.DrawableAlphaProperty.get(android.graphics.drawable.Drawable):0:0 -> get
    1:1:java.lang.Object get(java.lang.Object):0 -> get
    1:1:void android.support.design.animation.DrawableAlphaProperty.set(android.graphics.drawable.Drawable,java.lang.Integer):0:0 -> set
    1:1:void set(java.lang.Object,java.lang.Object):0 -> set
android.support.design.animation.ImageMatrixProperty -> l.e:
    android.graphics.Matrix matrix -> a
    1:1:android.graphics.Matrix android.support.design.animation.ImageMatrixProperty.get(android.widget.ImageView):0:0 -> get
    1:1:java.lang.Object get(java.lang.Object):0 -> get
    1:1:void android.support.design.animation.ImageMatrixProperty.set(android.widget.ImageView,android.graphics.Matrix):0:0 -> set
    1:1:void set(java.lang.Object,java.lang.Object):0 -> set
android.support.design.animation.MatrixEvaluator -> l.f:
    android.graphics.Matrix tempMatrix -> c
    float[] tempStartValues -> a
    float[] tempEndValues -> b
    1:1:android.graphics.Matrix android.support.design.animation.MatrixEvaluator.evaluate(float,android.graphics.Matrix,android.graphics.Matrix):0:0 -> evaluate
    1:1:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object):0 -> evaluate
android.support.design.animation.MotionSpec -> l.g:
    android.support.v4.util.SimpleArrayMap timings -> a
    android.support.design.animation.MotionSpec createFromAttribute(android.content.Context,android.content.res.TypedArray,int) -> a
    android.support.design.animation.MotionSpec createFromResource(android.content.Context,int) -> b
    1:1:void android.support.design.animation.MotionSpec.addTimingFromAnimator(android.support.design.animation.MotionSpec,android.animation.Animator):0:0 -> c
    1:1:android.support.design.animation.MotionSpec createSpecFromAnimators(java.util.List):0 -> c
    2:2:android.support.design.animation.MotionTiming android.support.design.animation.MotionTiming.createFromAnimator(android.animation.ValueAnimator):0:0 -> c
    2:2:void android.support.design.animation.MotionSpec.addTimingFromAnimator(android.support.design.animation.MotionSpec,android.animation.Animator):0 -> c
    2:2:android.support.design.animation.MotionSpec createSpecFromAnimators(java.util.List):0 -> c
    3:3:android.animation.TimeInterpolator android.support.design.animation.MotionTiming.getInterpolatorCompat(android.animation.ValueAnimator):0:0 -> c
    3:3:android.support.design.animation.MotionTiming android.support.design.animation.MotionTiming.createFromAnimator(android.animation.ValueAnimator):0 -> c
    3:3:void android.support.design.animation.MotionSpec.addTimingFromAnimator(android.support.design.animation.MotionSpec,android.animation.Animator):0 -> c
    3:3:android.support.design.animation.MotionSpec createSpecFromAnimators(java.util.List):0 -> c
    4:4:android.support.design.animation.MotionTiming android.support.design.animation.MotionTiming.createFromAnimator(android.animation.ValueAnimator):0:0 -> c
    4:4:void android.support.design.animation.MotionSpec.addTimingFromAnimator(android.support.design.animation.MotionSpec,android.animation.Animator):0 -> c
    4:4:android.support.design.animation.MotionSpec createSpecFromAnimators(java.util.List):0 -> c
    5:5:void android.support.design.animation.MotionSpec.setTiming(java.lang.String,android.support.design.animation.MotionTiming):0:0 -> c
    5:5:void android.support.design.animation.MotionSpec.addTimingFromAnimator(android.support.design.animation.MotionSpec,android.animation.Animator):0 -> c
    5:5:android.support.design.animation.MotionSpec createSpecFromAnimators(java.util.List):0 -> c
    6:6:void android.support.design.animation.MotionSpec.addTimingFromAnimator(android.support.design.animation.MotionSpec,android.animation.Animator):0:0 -> c
    6:6:android.support.design.animation.MotionSpec createSpecFromAnimators(java.util.List):0 -> c
    1:1:boolean android.support.design.animation.MotionSpec.hasTiming(java.lang.String):0:0 -> d
    1:1:android.support.design.animation.MotionTiming getTiming(java.lang.String):0 -> d
    2:2:android.support.design.animation.MotionTiming getTiming(java.lang.String):0:0 -> d
android.support.design.animation.MotionTiming -> l.h:
    android.animation.TimeInterpolator interpolator -> c
    long duration -> b
    long delay -> a
    int repeatCount -> d
    int repeatMode -> e
    1:1:long android.support.design.animation.MotionTiming.getDelay():0:0 -> a
    1:1:void apply(android.animation.Animator):0 -> a
    2:2:void apply(android.animation.Animator):0:0 -> a
    3:3:long android.support.design.animation.MotionTiming.getDuration():0:0 -> a
    3:3:void apply(android.animation.Animator):0 -> a
    4:4:void apply(android.animation.Animator):0:0 -> a
    5:5:int android.support.design.animation.MotionTiming.getRepeatCount():0:0 -> a
    5:5:void apply(android.animation.Animator):0 -> a
    6:6:void apply(android.animation.Animator):0:0 -> a
    7:7:int android.support.design.animation.MotionTiming.getRepeatMode():0:0 -> a
    7:7:void apply(android.animation.Animator):0 -> a
    8:8:void apply(android.animation.Animator):0:0 -> a
    android.animation.TimeInterpolator getInterpolator() -> b
    1:1:long android.support.design.animation.MotionTiming.getDelay():0:0 -> equals
    1:1:boolean equals(java.lang.Object):0 -> equals
    2:2:long android.support.design.animation.MotionTiming.getDuration():0:0 -> equals
    2:2:boolean equals(java.lang.Object):0 -> equals
    3:3:int android.support.design.animation.MotionTiming.getRepeatCount():0:0 -> equals
    3:3:boolean equals(java.lang.Object):0 -> equals
    4:4:int android.support.design.animation.MotionTiming.getRepeatMode():0:0 -> equals
    4:4:boolean equals(java.lang.Object):0 -> equals
    5:5:boolean equals(java.lang.Object):0:0 -> equals
    1:1:long android.support.design.animation.MotionTiming.getDelay():0:0 -> hashCode
    1:1:int hashCode():0 -> hashCode
    2:2:long android.support.design.animation.MotionTiming.getDuration():0:0 -> hashCode
    2:2:int hashCode():0 -> hashCode
    3:3:int hashCode():0:0 -> hashCode
    4:4:int android.support.design.animation.MotionTiming.getRepeatCount():0:0 -> hashCode
    4:4:int hashCode():0 -> hashCode
    5:5:int android.support.design.animation.MotionTiming.getRepeatMode():0:0 -> hashCode
    5:5:int hashCode():0 -> hashCode
    1:1:long android.support.design.animation.MotionTiming.getDelay():0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
    3:3:long android.support.design.animation.MotionTiming.getDuration():0:0 -> toString
    3:3:java.lang.String toString():0 -> toString
    4:4:java.lang.String toString():0:0 -> toString
    5:5:int android.support.design.animation.MotionTiming.getRepeatCount():0:0 -> toString
    5:5:java.lang.String toString():0 -> toString
    6:6:java.lang.String toString():0:0 -> toString
    7:7:int android.support.design.animation.MotionTiming.getRepeatMode():0:0 -> toString
    7:7:java.lang.String toString():0 -> toString
    8:8:java.lang.String toString():0:0 -> toString
android.support.design.animation.Positioning -> l.i:
android.support.design.behavior.HideBottomViewOnScrollBehavior -> android.support.design.behavior.HideBottomViewOnScrollBehavior:
    android.view.ViewPropertyAnimator currentAnimator -> c
    int currentState -> b
    int height -> a
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> f
    void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> j
    boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> o
    void animateChildTo(android.view.View,int,long,android.animation.TimeInterpolator) -> s
    void slideDown(android.view.View) -> t
    void slideUp(android.view.View) -> u
android.support.design.behavior.HideBottomViewOnScrollBehavior$1 -> android.support.design.behavior.HideBottomViewOnScrollBehavior$a:
    android.support.design.behavior.HideBottomViewOnScrollBehavior this$0 -> a
    1:1:android.view.ViewPropertyAnimator android.support.design.behavior.HideBottomViewOnScrollBehavior.access$002(android.support.design.behavior.HideBottomViewOnScrollBehavior,android.view.ViewPropertyAnimator):0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
android.support.design.bottomappbar.BottomAppBar -> android.support.design.bottomappbar.BottomAppBar:
    android.animation.Animator modeAnimator -> O
    int $r8$clinit -> T
    android.animation.Animator menuAnimator -> P
    boolean hideOnScroll -> R
    boolean fabAttached -> S
    int fabAlignmentMode -> Q
    1:1:float getFabTranslationY(boolean):0:0 -> getFabTranslationY
    1:1:float getFabTranslationY():0 -> getFabTranslationY
    1:1:void cancelAnimations():0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void setCutoutState():0:0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0 -> onLayout
    1:1:android.os.Parcelable android.support.v4.view.AbsSavedState.getSuperState():0:0 -> onRestoreInstanceState
    1:1:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    2:2:void onRestoreInstanceState(android.os.Parcelable):0:0 -> onRestoreInstanceState
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> setBackgroundTint
    1:1:void setBackgroundTint(android.content.res.ColorStateList):0 -> setBackgroundTint
    1:1:void maybeAnimateModeChange(int):0:0 -> setFabAlignmentMode
    1:1:void setFabAlignmentMode(int):0 -> setFabAlignmentMode
    2:2:boolean android.support.v4.view.ViewCompat.isLaidOut(android.view.View):0:0 -> setFabAlignmentMode
    2:2:void maybeAnimateModeChange(int):0 -> setFabAlignmentMode
    2:2:void setFabAlignmentMode(int):0 -> setFabAlignmentMode
    3:3:void maybeAnimateModeChange(int):0:0 -> setFabAlignmentMode
    3:3:void setFabAlignmentMode(int):0 -> setFabAlignmentMode
    4:4:void createCradleTranslationAnimation(int,java.util.List):0:0 -> setFabAlignmentMode
    4:4:void maybeAnimateModeChange(int):0 -> setFabAlignmentMode
    4:4:void setFabAlignmentMode(int):0 -> setFabAlignmentMode
    5:5:void createFabTranslationXAnimation(int,java.util.List):0:0 -> setFabAlignmentMode
    5:5:void maybeAnimateModeChange(int):0 -> setFabAlignmentMode
    5:5:void setFabAlignmentMode(int):0 -> setFabAlignmentMode
    6:6:void maybeAnimateModeChange(int):0:0 -> setFabAlignmentMode
    6:6:void setFabAlignmentMode(int):0 -> setFabAlignmentMode
    7:7:void createCradleTranslationAnimation(int,java.util.List):0:0 -> setFabAlignmentMode
    7:7:void maybeAnimateModeChange(int):0 -> setFabAlignmentMode
    7:7:void setFabAlignmentMode(int):0 -> setFabAlignmentMode
    8:8:void setFabAlignmentMode(int):0:0 -> setFabAlignmentMode
    9:9:void maybeAnimateMenuView(int,boolean):0:0 -> setFabAlignmentMode
    9:9:void setFabAlignmentMode(int):0 -> setFabAlignmentMode
    10:10:boolean android.support.v4.view.ViewCompat.isLaidOut(android.view.View):0:0 -> setFabAlignmentMode
    10:10:void maybeAnimateMenuView(int,boolean):0 -> setFabAlignmentMode
    10:10:void setFabAlignmentMode(int):0 -> setFabAlignmentMode
    11:11:void maybeAnimateMenuView(int,boolean):0:0 -> setFabAlignmentMode
    11:11:void setFabAlignmentMode(int):0 -> setFabAlignmentMode
    12:12:void createMenuViewTranslationAnimation(int,boolean,java.util.List):0:0 -> setFabAlignmentMode
    12:12:void maybeAnimateMenuView(int,boolean):0 -> setFabAlignmentMode
    12:12:void setFabAlignmentMode(int):0 -> setFabAlignmentMode
    13:13:void maybeAnimateMenuView(int,boolean):0:0 -> setFabAlignmentMode
    13:13:void setFabAlignmentMode(int):0 -> setFabAlignmentMode
    14:14:void setFabAlignmentMode(int):0:0 -> setFabAlignmentMode
    1:1:void setCutoutState():0:0 -> u
    1:1:void access$1300(android.support.design.bottomappbar.BottomAppBar):0 -> u
    float access$1400(android.support.design.bottomappbar.BottomAppBar) -> v
    android.support.design.widget.FloatingActionButton findDependentFab() -> w
    1:1:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> x
    1:1:int getFabTranslationX(int):0 -> x
    2:2:int getFabTranslationX(int):0:0 -> x
    boolean isVisibleFab() -> y
    1:1:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> z
    1:1:void translateActionMenuView(android.support.v7.widget.ActionMenuView,int,boolean):0 -> z
    2:2:void translateActionMenuView(android.support.v7.widget.ActionMenuView,int,boolean):0:0 -> z
android.support.design.bottomappbar.BottomAppBar$1 -> m.a:
    android.support.design.bottomappbar.BottomAppBar this$0 -> a
    1:1:android.animation.Animator android.support.design.bottomappbar.BottomAppBar.access$002(android.support.design.bottomappbar.BottomAppBar,android.animation.Animator):0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
android.support.design.bottomappbar.BottomAppBar$3 -> m.b:
    android.support.design.bottomappbar.BottomAppBar this$0 -> a
    1:1:android.animation.Animator android.support.design.bottomappbar.BottomAppBar.access$302(android.support.design.bottomappbar.BottomAppBar,android.animation.Animator):0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
android.support.design.bottomappbar.BottomAppBar$4 -> m.c:
    android.support.v7.widget.ActionMenuView val$actionMenuView -> b
    boolean cancelled -> a
    int val$targetMode -> c
    android.support.design.bottomappbar.BottomAppBar this$0 -> e
    boolean val$targetAttached -> d
    1:1:void android.support.design.bottomappbar.BottomAppBar.access$400(android.support.design.bottomappbar.BottomAppBar,android.support.v7.widget.ActionMenuView,int,boolean):0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
android.support.design.bottomappbar.BottomAppBar$Behavior -> android.support.design.bottomappbar.BottomAppBar$Behavior:
    android.graphics.Rect fabContentRect -> d
    1:1:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.bottomappbar.BottomAppBar,int):0:0 -> f
    1:1:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    2:2:android.support.design.widget.FloatingActionButton android.support.design.bottomappbar.BottomAppBar.access$1100(android.support.design.bottomappbar.BottomAppBar):0:0 -> f
    2:2:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.bottomappbar.BottomAppBar,int):0 -> f
    2:2:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    3:3:boolean updateFabPositionAndVisibility(android.support.design.widget.FloatingActionButton,android.support.design.bottomappbar.BottomAppBar):0:0 -> f
    3:3:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.bottomappbar.BottomAppBar,int):0 -> f
    3:3:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    4:4:void android.support.design.bottomappbar.BottomAppBar.removeFabAnimationListeners(android.support.design.widget.FloatingActionButton):0:0 -> f
    4:4:void android.support.design.bottomappbar.BottomAppBar.addFabAnimationListeners(android.support.design.widget.FloatingActionButton):0 -> f
    4:4:void android.support.design.bottomappbar.BottomAppBar.access$1000(android.support.design.bottomappbar.BottomAppBar,android.support.design.widget.FloatingActionButton):0 -> f
    4:4:boolean updateFabPositionAndVisibility(android.support.design.widget.FloatingActionButton,android.support.design.bottomappbar.BottomAppBar):0 -> f
    4:4:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.bottomappbar.BottomAppBar,int):0 -> f
    4:4:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    5:5:void android.support.design.bottomappbar.BottomAppBar.addFabAnimationListeners(android.support.design.widget.FloatingActionButton):0:0 -> f
    5:5:void android.support.design.bottomappbar.BottomAppBar.access$1000(android.support.design.bottomappbar.BottomAppBar,android.support.design.widget.FloatingActionButton):0 -> f
    5:5:boolean updateFabPositionAndVisibility(android.support.design.widget.FloatingActionButton,android.support.design.bottomappbar.BottomAppBar):0 -> f
    5:5:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.bottomappbar.BottomAppBar,int):0 -> f
    5:5:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    6:6:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.bottomappbar.BottomAppBar,int):0:0 -> f
    6:6:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    7:7:void android.support.design.widget.FloatingActionButton.getMeasuredContentRect(android.graphics.Rect):0:0 -> f
    7:7:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.bottomappbar.BottomAppBar,int):0 -> f
    7:7:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    8:8:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.bottomappbar.BottomAppBar,int):0:0 -> f
    8:8:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    9:9:boolean android.support.design.bottomappbar.BottomAppBar.isAnimationRunning():0:0 -> f
    9:9:boolean android.support.design.bottomappbar.BottomAppBar.access$1200(android.support.design.bottomappbar.BottomAppBar):0 -> f
    9:9:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.bottomappbar.BottomAppBar,int):0 -> f
    9:9:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    10:10:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.bottomappbar.BottomAppBar,int):0:0 -> f
    10:10:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    11:11:boolean android.support.design.behavior.HideBottomViewOnScrollBehavior.onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0:0 -> f
    11:11:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.bottomappbar.BottomAppBar,int):0 -> f
    11:11:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    12:12:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.bottomappbar.BottomAppBar,int):0:0 -> f
    12:12:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    1:1:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int):0:0 -> p
    1:1:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int):0 -> p
    2:2:boolean android.support.design.widget.CoordinatorLayout$Behavior.onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int):0:0 -> p
    2:2:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int):0 -> p
    2:2:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int):0 -> p
    1:1:void slideDown(android.support.design.bottomappbar.BottomAppBar):0:0 -> t
    1:1:void slideDown(android.view.View):0 -> t
    2:2:android.support.design.widget.FloatingActionButton android.support.design.bottomappbar.BottomAppBar.access$1100(android.support.design.bottomappbar.BottomAppBar):0:0 -> t
    2:2:void slideDown(android.support.design.bottomappbar.BottomAppBar):0 -> t
    2:2:void slideDown(android.view.View):0 -> t
    3:3:void slideDown(android.support.design.bottomappbar.BottomAppBar):0:0 -> t
    3:3:void slideDown(android.view.View):0 -> t
    1:1:void slideUp(android.support.design.bottomappbar.BottomAppBar):0:0 -> u
    1:1:void slideUp(android.view.View):0 -> u
    2:2:android.support.design.widget.FloatingActionButton android.support.design.bottomappbar.BottomAppBar.access$1100(android.support.design.bottomappbar.BottomAppBar):0:0 -> u
    2:2:void slideUp(android.support.design.bottomappbar.BottomAppBar):0 -> u
    2:2:void slideUp(android.view.View):0 -> u
    3:3:void slideUp(android.support.design.bottomappbar.BottomAppBar):0:0 -> u
    3:3:void slideUp(android.view.View):0 -> u
android.support.design.bottomappbar.BottomAppBar$SavedState -> android.support.design.bottomappbar.BottomAppBar$a:
    int fabAlignmentMode -> c
    boolean fabAttached -> d
    1:1:void android.support.v4.view.AbsSavedState.writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
    1:1:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    2:2:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
android.support.design.bottomappbar.BottomAppBar$SavedState$1 -> android.support.design.bottomappbar.BottomAppBar$a$a:
    1:1:android.support.design.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    2:2:android.support.design.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    2:2:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    1:1:android.support.design.bottomappbar.BottomAppBar$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
android.support.design.button.MaterialButton -> n.a:
    android.graphics.PorterDuff$Mode iconTintMode -> f
    int iconLeft -> j
    android.graphics.drawable.Drawable icon -> h
    int iconGravity -> k
    int iconSize -> i
    android.support.design.button.MaterialButtonHelper materialButtonHelper -> d
    android.content.res.ColorStateList iconTint -> g
    int iconPadding -> e
    1:1:void android.support.design.button.MaterialButton.<init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:android.graphics.drawable.Drawable android.support.design.resources.MaterialResources.getDrawable(android.content.Context,android.content.res.TypedArray,int):0:0 -> <init>
    2:2:void android.support.design.button.MaterialButton.<init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void android.support.design.button.MaterialButton.<init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    4:4:void android.support.design.button.MaterialButtonHelper.loadFromAttributes(android.content.res.TypedArray):0:0 -> <init>
    4:4:void android.support.design.button.MaterialButton.<init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    5:5:int android.support.v4.view.ViewCompat.getPaddingStart(android.view.View):0:0 -> <init>
    5:5:void android.support.design.button.MaterialButtonHelper.loadFromAttributes(android.content.res.TypedArray):0 -> <init>
    5:5:void android.support.design.button.MaterialButton.<init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    6:6:void android.support.design.button.MaterialButtonHelper.loadFromAttributes(android.content.res.TypedArray):0:0 -> <init>
    6:6:void android.support.design.button.MaterialButton.<init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    7:7:int android.support.v4.view.ViewCompat.getPaddingEnd(android.view.View):0:0 -> <init>
    7:7:void android.support.design.button.MaterialButtonHelper.loadFromAttributes(android.content.res.TypedArray):0 -> <init>
    7:7:void android.support.design.button.MaterialButton.<init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    8:8:void android.support.design.button.MaterialButtonHelper.loadFromAttributes(android.content.res.TypedArray):0:0 -> <init>
    8:8:void android.support.design.button.MaterialButton.<init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    9:9:void android.support.v4.view.ViewCompat.setPaddingRelative(android.view.View,int,int,int,int):0:0 -> <init>
    9:9:void android.support.design.button.MaterialButtonHelper.loadFromAttributes(android.content.res.TypedArray):0 -> <init>
    9:9:void android.support.design.button.MaterialButton.<init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    10:10:void android.support.design.button.MaterialButton.<init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:boolean android.support.design.button.MaterialButtonHelper.isBackgroundOverwritten():0:0 -> a
    1:1:boolean isUsingOriginalBackground():0 -> a
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> b
    1:1:void updateIcon():0 -> b
    2:2:void updateIcon():0:0 -> b
    3:3:void android.support.v4.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> b
    3:3:void updateIcon():0 -> b
    4:4:void updateIcon():0:0 -> b
    5:5:void android.support.v4.widget.TextViewCompat.setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0:0 -> b
    5:5:void updateIcon():0 -> b
    1:1:int android.support.design.button.MaterialButtonHelper.getCornerRadius():0:0 -> getCornerRadius
    1:1:int getCornerRadius():0 -> getCornerRadius
    1:1:android.content.res.ColorStateList android.support.design.button.MaterialButtonHelper.getRippleColor():0:0 -> getRippleColor
    1:1:android.content.res.ColorStateList getRippleColor():0 -> getRippleColor
    1:1:android.content.res.ColorStateList android.support.design.button.MaterialButtonHelper.getStrokeColor():0:0 -> getStrokeColor
    1:1:android.content.res.ColorStateList getStrokeColor():0 -> getStrokeColor
    1:1:int android.support.design.button.MaterialButtonHelper.getStrokeWidth():0:0 -> getStrokeWidth
    1:1:int getStrokeWidth():0 -> getStrokeWidth
    1:1:android.content.res.ColorStateList android.support.design.button.MaterialButtonHelper.getSupportBackgroundTintList():0:0 -> getSupportBackgroundTintList
    1:1:android.content.res.ColorStateList getSupportBackgroundTintList():0 -> getSupportBackgroundTintList
    2:2:android.content.res.ColorStateList getSupportBackgroundTintList():0:0 -> getSupportBackgroundTintList
    1:1:android.graphics.PorterDuff$Mode android.support.design.button.MaterialButtonHelper.getSupportBackgroundTintMode():0:0 -> getSupportBackgroundTintMode
    1:1:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode():0 -> getSupportBackgroundTintMode
    2:2:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode():0:0 -> getSupportBackgroundTintMode
    1:1:void android.support.design.button.MaterialButtonHelper.updateMaskBounds(int,int):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    1:1:int android.support.v4.view.ViewCompat.getPaddingEnd(android.view.View):0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
    3:3:int android.support.v4.view.ViewCompat.getPaddingStart(android.view.View):0:0 -> onMeasure
    3:3:void onMeasure(int,int):0 -> onMeasure
    4:4:void onMeasure(int,int):0:0 -> onMeasure
    5:5:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> onMeasure
    5:5:boolean android.support.design.button.MaterialButton.isLayoutRTL():0 -> onMeasure
    5:5:void onMeasure(int,int):0 -> onMeasure
    6:6:void onMeasure(int,int):0:0 -> onMeasure
    1:1:void android.support.design.button.MaterialButtonHelper.setBackgroundColor(int):0:0 -> setBackgroundColor
    1:1:void setBackgroundColor(int):0 -> setBackgroundColor
    2:2:void setBackgroundColor(int):0:0 -> setBackgroundColor
    1:1:void android.support.design.button.MaterialButtonHelper.setBackgroundOverwritten():0:0 -> setBackgroundDrawable
    1:1:void setBackgroundDrawable(android.graphics.drawable.Drawable):0 -> setBackgroundDrawable
    2:2:void setBackgroundDrawable(android.graphics.drawable.Drawable):0:0 -> setBackgroundDrawable
    1:1:void android.support.design.button.MaterialButtonHelper.setCornerRadius(int):0:0 -> setCornerRadius
    1:1:void setCornerRadius(int):0 -> setCornerRadius
    2:2:android.graphics.drawable.GradientDrawable android.support.design.button.MaterialButtonHelper.unwrapBackgroundDrawable():0:0 -> setCornerRadius
    2:2:void android.support.design.button.MaterialButtonHelper.setCornerRadius(int):0 -> setCornerRadius
    2:2:void setCornerRadius(int):0 -> setCornerRadius
    3:3:void android.support.design.button.MaterialButtonHelper.setCornerRadius(int):0:0 -> setCornerRadius
    3:3:void setCornerRadius(int):0 -> setCornerRadius
    4:4:android.graphics.drawable.GradientDrawable android.support.design.button.MaterialButtonHelper.unwrapStrokeDrawable():0:0 -> setCornerRadius
    4:4:void android.support.design.button.MaterialButtonHelper.setCornerRadius(int):0 -> setCornerRadius
    4:4:void setCornerRadius(int):0 -> setCornerRadius
    5:5:void android.support.design.button.MaterialButtonHelper.setCornerRadius(int):0:0 -> setCornerRadius
    5:5:void setCornerRadius(int):0 -> setCornerRadius
    1:1:void android.support.design.button.MaterialButtonHelper.setRippleColor(android.content.res.ColorStateList):0:0 -> setRippleColor
    1:1:void setRippleColor(android.content.res.ColorStateList):0 -> setRippleColor
    1:1:void android.support.design.button.MaterialButtonHelper.setStrokeColor(android.content.res.ColorStateList):0:0 -> setStrokeColor
    1:1:void setStrokeColor(android.content.res.ColorStateList):0 -> setStrokeColor
    2:2:void android.support.design.button.MaterialButtonHelper.updateStroke():0:0 -> setStrokeColor
    2:2:void android.support.design.button.MaterialButtonHelper.setStrokeColor(android.content.res.ColorStateList):0 -> setStrokeColor
    2:2:void setStrokeColor(android.content.res.ColorStateList):0 -> setStrokeColor
    1:1:void android.support.design.button.MaterialButtonHelper.setStrokeWidth(int):0:0 -> setStrokeWidth
    1:1:void setStrokeWidth(int):0 -> setStrokeWidth
    2:2:void android.support.design.button.MaterialButtonHelper.updateStroke():0:0 -> setStrokeWidth
    2:2:void android.support.design.button.MaterialButtonHelper.setStrokeWidth(int):0 -> setStrokeWidth
    2:2:void setStrokeWidth(int):0 -> setStrokeWidth
    1:1:void android.support.design.button.MaterialButtonHelper.setSupportBackgroundTintList(android.content.res.ColorStateList):0:0 -> setSupportBackgroundTintList
    1:1:void setSupportBackgroundTintList(android.content.res.ColorStateList):0 -> setSupportBackgroundTintList
    2:2:void setSupportBackgroundTintList(android.content.res.ColorStateList):0:0 -> setSupportBackgroundTintList
    1:1:void android.support.design.button.MaterialButtonHelper.setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode):0:0 -> setSupportBackgroundTintMode
    1:1:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode):0 -> setSupportBackgroundTintMode
    2:2:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode):0:0 -> setSupportBackgroundTintMode
android.support.design.button.MaterialButtonBackgroundDrawable -> n.b:
android.support.design.button.MaterialButtonHelper -> n.c:
    android.graphics.drawable.GradientDrawable maskDrawableLollipop -> q
    android.graphics.drawable.GradientDrawable backgroundDrawableLollipop -> o
    android.graphics.drawable.GradientDrawable strokeDrawableLollipop -> p
    int cornerRadius -> f
    int strokeWidth -> g
    int insetTop -> d
    int insetBottom -> e
    int insetLeft -> b
    int insetRight -> c
    boolean backgroundOverwritten -> r
    android.graphics.Paint buttonStrokePaint -> l
    android.graphics.RectF rectF -> n
    android.graphics.Rect bounds -> m
    android.graphics.PorterDuff$Mode backgroundTintMode -> h
    android.support.design.button.MaterialButton materialButton -> a
    android.content.res.ColorStateList strokeColor -> j
    android.content.res.ColorStateList backgroundTint -> i
    android.content.res.ColorStateList rippleColor -> k
    1:1:android.graphics.drawable.InsetDrawable android.support.design.button.MaterialButtonHelper.wrapDrawableWithInset(android.graphics.drawable.Drawable):0:0 -> a
    1:1:android.graphics.drawable.Drawable createBackgroundLollipop():0 -> a
    2:2:android.graphics.drawable.Drawable createBackgroundLollipop():0:0 -> a
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> b
    1:1:void updateTintAndTintModeLollipop():0 -> b
    2:2:void updateTintAndTintModeLollipop():0:0 -> b
    3:3:void android.support.v4.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> b
    3:3:void updateTintAndTintModeLollipop():0 -> b
android.support.design.circularreveal.CircularRevealCompat -> o.b:
    android.animation.Animator createCircularReveal(android.support.design.circularreveal.CircularRevealWidget,float,float,float) -> a
android.support.design.circularreveal.CircularRevealCompat$1 -> o.a:
    android.support.design.circularreveal.CircularRevealWidget val$view -> a
android.support.design.circularreveal.CircularRevealFrameLayout -> o.c:
    void destroyCircularRevealCache() -> a
    void buildCircularRevealCache() -> b
android.support.design.circularreveal.CircularRevealWidget -> o.d:
    void destroyCircularRevealCache() -> a
    void buildCircularRevealCache() -> b
android.support.design.circularreveal.CircularRevealWidget$1 -> o.d$a:
android.support.design.circularreveal.CircularRevealWidget$CircularRevealEvaluator -> o.d$b:
    android.support.design.circularreveal.CircularRevealWidget$RevealInfo revealInfo -> a
    android.animation.TypeEvaluator CIRCULAR_REVEAL -> b
    1:1:android.support.design.circularreveal.CircularRevealWidget$RevealInfo android.support.design.circularreveal.CircularRevealWidget$CircularRevealEvaluator.evaluate(float,android.support.design.circularreveal.CircularRevealWidget$RevealInfo,android.support.design.circularreveal.CircularRevealWidget$RevealInfo):0:0 -> evaluate
    1:1:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object):0 -> evaluate
    2:2:void android.support.design.circularreveal.CircularRevealWidget$RevealInfo.set(float,float,float):0:0 -> evaluate
    2:2:android.support.design.circularreveal.CircularRevealWidget$RevealInfo android.support.design.circularreveal.CircularRevealWidget$CircularRevealEvaluator.evaluate(float,android.support.design.circularreveal.CircularRevealWidget$RevealInfo,android.support.design.circularreveal.CircularRevealWidget$RevealInfo):0 -> evaluate
    2:2:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object):0 -> evaluate
    3:3:android.support.design.circularreveal.CircularRevealWidget$RevealInfo android.support.design.circularreveal.CircularRevealWidget$CircularRevealEvaluator.evaluate(float,android.support.design.circularreveal.CircularRevealWidget$RevealInfo,android.support.design.circularreveal.CircularRevealWidget$RevealInfo):0:0 -> evaluate
    3:3:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object):0 -> evaluate
android.support.design.circularreveal.CircularRevealWidget$CircularRevealProperty -> o.d$c:
    android.util.Property CIRCULAR_REVEAL -> a
    1:1:android.support.design.circularreveal.CircularRevealWidget$RevealInfo android.support.design.circularreveal.CircularRevealWidget$CircularRevealProperty.get(android.support.design.circularreveal.CircularRevealWidget):0:0 -> get
    1:1:java.lang.Object get(java.lang.Object):0 -> get
    1:1:void android.support.design.circularreveal.CircularRevealWidget$CircularRevealProperty.set(android.support.design.circularreveal.CircularRevealWidget,android.support.design.circularreveal.CircularRevealWidget$RevealInfo):0:0 -> set
    1:1:void set(java.lang.Object,java.lang.Object):0 -> set
android.support.design.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty -> o.d$d:
    android.util.Property CIRCULAR_REVEAL_SCRIM_COLOR -> a
    1:1:java.lang.Integer android.support.design.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty.get(android.support.design.circularreveal.CircularRevealWidget):0:0 -> get
    1:1:java.lang.Object get(java.lang.Object):0 -> get
    1:1:void android.support.design.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty.set(android.support.design.circularreveal.CircularRevealWidget,java.lang.Integer):0:0 -> set
    1:1:void set(java.lang.Object,java.lang.Object):0 -> set
android.support.design.circularreveal.CircularRevealWidget$RevealInfo -> o.d$e:
    float radius -> c
    float centerY -> b
    float centerX -> a
    1:1:void android.support.design.circularreveal.CircularRevealWidget$RevealInfo.<init>():0:0 -> <init>
    1:1:void <init>(android.support.design.circularreveal.CircularRevealWidget$1):0 -> <init>
android.support.design.circularreveal.cardview.CircularRevealCardView -> p.a:
    void destroyCircularRevealCache() -> a
    void buildCircularRevealCache() -> b
android.support.design.expandable.ExpandableWidget -> q.a:
    boolean isExpanded() -> a
android.support.design.expandable.ExpandableWidgetHelper -> q.b:
    android.view.View widget -> a
    boolean expanded -> b
    int expandedComponentIdHint -> c
android.support.design.internal.BaselineLayout -> android.support.design.internal.BaselineLayout:
    int baseline -> b
android.support.design.internal.ForegroundLinearLayout -> r.a:
    boolean mForegroundInPadding -> u
    boolean foregroundBoundsChanged -> v
    int foregroundGravity -> t
    android.graphics.Rect overlayBounds -> s
    android.graphics.drawable.Drawable foreground -> q
    android.graphics.Rect selfBounds -> r
android.support.design.internal.NavigationMenuItemView -> android.support.design.internal.NavigationMenuItemView:
    android.support.v4.view.AccessibilityDelegateCompat accessibilityDelegate -> F
    int[] CHECKED_STATE_SET -> G
    android.graphics.drawable.Drawable emptyDrawable -> E
    boolean checkable -> y
    android.support.v7.view.menu.MenuItemImpl itemData -> B
    android.content.res.ColorStateList iconTintList -> C
    int iconSize -> w
    boolean needsEmptyIcon -> x
    android.widget.CheckedTextView textView -> z
    android.widget.FrameLayout actionArea -> A
    boolean hasIconTintList -> D
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:android.graphics.drawable.StateListDrawable createDefaultBackground():0:0 -> d
    1:1:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0 -> d
    2:2:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0:0 -> d
    3:3:void android.support.v4.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> d
    3:3:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0 -> d
    4:4:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0:0 -> d
    5:5:java.lang.CharSequence android.support.v7.view.menu.MenuItemImpl.getTitle():0:0 -> d
    5:5:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0 -> d
    6:6:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0:0 -> d
    7:7:java.lang.CharSequence android.support.v7.view.menu.MenuItemImpl.getContentDescription():0:0 -> d
    7:7:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0 -> d
    8:8:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0:0 -> d
    9:9:java.lang.CharSequence android.support.v7.view.menu.MenuItemImpl.getTooltipText():0:0 -> d
    9:9:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0 -> d
    10:10:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0:0 -> d
    11:11:boolean shouldExpandActionArea():0:0 -> d
    11:11:void adjustAppearance():0 -> d
    11:11:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0 -> d
    12:12:java.lang.CharSequence android.support.v7.view.menu.MenuItemImpl.getTitle():0:0 -> d
    12:12:boolean shouldExpandActionArea():0 -> d
    12:12:void adjustAppearance():0 -> d
    12:12:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0 -> d
    13:13:boolean shouldExpandActionArea():0:0 -> d
    13:13:void adjustAppearance():0 -> d
    13:13:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0 -> d
    14:14:void adjustAppearance():0:0 -> d
    14:14:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0 -> d
    1:1:void android.support.v4.view.AccessibilityDelegateCompat.sendAccessibilityEvent(android.view.View,int):0:0 -> setCheckable
    1:1:void setCheckable(boolean):0 -> setCheckable
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> setIcon
    1:1:void setIcon(android.graphics.drawable.Drawable):0 -> setIcon
    2:2:void setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
    3:3:android.graphics.drawable.Drawable android.support.v4.content.res.ResourcesCompat.getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> setIcon
    3:3:void setIcon(android.graphics.drawable.Drawable):0 -> setIcon
    4:4:void setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
    5:5:void android.support.v4.widget.TextViewCompat.setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0:0 -> setIcon
    5:5:void setIcon(android.graphics.drawable.Drawable):0 -> setIcon
    1:1:void android.support.v4.widget.TextViewCompat.setTextAppearance(android.widget.TextView,int):0:0 -> setTextAppearance
    1:1:void setTextAppearance(int):0 -> setTextAppearance
android.support.design.internal.NavigationMenuItemView$1 -> android.support.design.internal.NavigationMenuItemView$a:
    android.support.design.internal.NavigationMenuItemView this$0 -> c
    1:1:void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setCheckable(boolean):0:0 -> b
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
android.support.design.internal.NavigationMenuView -> android.support.design.internal.NavigationMenuView:
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    void initialize(android.support.v7.view.menu.MenuBuilder) -> b
android.support.design.internal.ThemeEnforcement -> r.b:
    int[] MATERIAL_CHECK_ATTRS -> b
    int[] APPCOMPAT_CHECK_ATTRS -> a
    1:1:boolean android.support.design.internal.ThemeEnforcement.isTheme(android.content.Context,int[]):0:0 -> a
    1:1:void checkTheme(android.content.Context,int[],java.lang.String):0 -> a
    2:2:void checkTheme(android.content.Context,int[],java.lang.String):0:0 -> a
    1:1:void android.support.design.internal.ThemeEnforcement.checkCompatibleTheme(android.content.Context,android.util.AttributeSet,int,int):0:0 -> b
    1:1:android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]):0 -> b
    2:2:void android.support.design.internal.ThemeEnforcement.checkMaterialTheme(android.content.Context):0:0 -> b
    2:2:void android.support.design.internal.ThemeEnforcement.checkCompatibleTheme(android.content.Context,android.util.AttributeSet,int,int):0 -> b
    2:2:android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]):0 -> b
    3:3:void android.support.design.internal.ThemeEnforcement.checkAppCompatTheme(android.content.Context):0:0 -> b
    3:3:void android.support.design.internal.ThemeEnforcement.checkCompatibleTheme(android.content.Context,android.util.AttributeSet,int,int):0 -> b
    3:3:android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]):0 -> b
    4:4:void android.support.design.internal.ThemeEnforcement.checkTextAppearance(android.content.Context,android.util.AttributeSet,int[],int,int,int[]):0:0 -> b
    4:4:android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]):0 -> b
    5:5:boolean android.support.design.internal.ThemeEnforcement.isCustomTextAppearanceValid(android.content.Context,android.util.AttributeSet,int[],int,int,int[]):0:0 -> b
    5:5:void android.support.design.internal.ThemeEnforcement.checkTextAppearance(android.content.Context,android.util.AttributeSet,int[],int,int,int[]):0 -> b
    5:5:android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]):0 -> b
    6:6:void android.support.design.internal.ThemeEnforcement.checkTextAppearance(android.content.Context,android.util.AttributeSet,int[],int,int,int[]):0:0 -> b
    6:6:android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]):0 -> b
    7:7:android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]):0:0 -> b
    8:8:void android.support.design.internal.ThemeEnforcement.checkTextAppearance(android.content.Context,android.util.AttributeSet,int[],int,int,int[]):0:0 -> b
    8:8:android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]):0 -> b
android.support.design.internal.ViewUtils -> r.c:
    android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> a
android.support.design.ripple.RippleUtils -> s.a:
    int[] SELECTED_PRESSED_STATE_SET -> b
    int[] SELECTED_STATE_SET -> c
    int[] PRESSED_STATE_SET -> a
    android.content.res.ColorStateList convertToRippleDrawableColor(android.content.res.ColorStateList) -> a
    1:1:int android.support.design.ripple.RippleUtils.doubleAlpha(int):0:0 -> b
    1:1:int getColorForState(android.content.res.ColorStateList,int[]):0 -> b
android.support.design.stateful.ExtendableSavedState -> t.a:
    android.support.v4.util.SimpleArrayMap extendableStates -> c
    1:1:void android.support.design.stateful.ExtendableSavedState.<init>(android.os.Parcel,java.lang.ClassLoader):0:0 -> <init>
    1:1:void <init>(android.os.Parcel,java.lang.ClassLoader,android.support.design.stateful.ExtendableSavedState$1):0 -> <init>
    1:1:void android.support.v4.view.AbsSavedState.writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
    1:1:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    2:2:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
    3:3:int android.support.v4.util.SimpleArrayMap.size():0:0 -> writeToParcel
    3:3:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    4:4:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
android.support.design.stateful.ExtendableSavedState$1 -> t.a$a:
    1:1:android.support.design.stateful.ExtendableSavedState android.support.design.stateful.ExtendableSavedState$1.createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    2:2:android.support.design.stateful.ExtendableSavedState android.support.design.stateful.ExtendableSavedState$1.createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    2:2:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    1:1:android.support.design.stateful.ExtendableSavedState[] android.support.design.stateful.ExtendableSavedState$1.newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
android.support.design.transformation.ExpandableBehavior -> android.support.design.transformation.ExpandableBehavior:
    int currentState -> a
    boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> d
    1:1:boolean android.support.v4.view.ViewCompat.isLaidOut(android.view.View):0:0 -> f
    1:1:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    2:2:android.support.design.expandable.ExpandableWidget findExpandableWidget(android.support.design.widget.CoordinatorLayout,android.view.View):0:0 -> f
    2:2:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    3:3:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0:0 -> f
    boolean didStateChange(boolean) -> s
    boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> t
android.support.design.transformation.ExpandableBehavior$1 -> android.support.design.transformation.ExpandableBehavior$a:
    android.support.design.expandable.ExpandableWidget val$dep -> d
    android.support.design.transformation.ExpandableBehavior this$0 -> e
    android.view.View val$child -> b
    int val$expectedState -> c
    1:1:int android.support.design.transformation.ExpandableBehavior.access$000(android.support.design.transformation.ExpandableBehavior):0:0 -> onPreDraw
    1:1:boolean onPreDraw():0 -> onPreDraw
    2:2:boolean onPreDraw():0:0 -> onPreDraw
android.support.design.transformation.ExpandableTransformationBehavior -> android.support.design.transformation.ExpandableTransformationBehavior:
    android.animation.AnimatorSet currentAnimation -> b
    boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> t
    android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> u
android.support.design.transformation.ExpandableTransformationBehavior$1 -> android.support.design.transformation.ExpandableTransformationBehavior$a:
    android.support.design.transformation.ExpandableTransformationBehavior this$0 -> a
    1:1:android.animation.AnimatorSet android.support.design.transformation.ExpandableTransformationBehavior.access$002(android.support.design.transformation.ExpandableTransformationBehavior,android.animation.AnimatorSet):0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
android.support.design.transformation.FabTransformationBehavior -> android.support.design.transformation.FabTransformationBehavior:
    int[] tmpArray -> f
    android.graphics.RectF tmpRectF1 -> d
    android.graphics.RectF tmpRectF2 -> e
    android.graphics.Rect tmpRect -> c
    android.view.ViewGroup toViewGroupOrNull(android.view.View) -> A
    boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> b
    void onAttachedToLayoutParams(android.support.design.widget.CoordinatorLayout$LayoutParams) -> c
    1:1:void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List):0:0 -> u
    1:1:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    2:2:float android.support.v4.view.ViewCompat.getElevation(android.view.View):0:0 -> u
    2:2:void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List):0 -> u
    2:2:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    3:3:void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List):0:0 -> u
    3:3:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    4:4:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0:0 -> u
    5:5:void createTranslationAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List,android.graphics.RectF):0:0 -> u
    5:5:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    6:6:void calculateChildVisibleBoundsAtEndOfExpansion(android.view.View,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,android.support.design.animation.MotionTiming,android.support.design.animation.MotionTiming,float,float,float,float,android.graphics.RectF):0:0 -> u
    6:6:void createTranslationAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List,android.graphics.RectF):0 -> u
    6:6:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    7:7:void createTranslationAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List,android.graphics.RectF):0:0 -> u
    7:7:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    8:8:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0:0 -> u
    9:9:void createIconFadeAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List):0:0 -> u
    9:9:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    10:10:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0:0 -> u
    10:10:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    11:11:float calculateRevealCenterX(android.view.View,android.view.View,android.support.design.animation.Positioning):0:0 -> u
    11:11:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0 -> u
    11:11:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    12:12:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0:0 -> u
    12:12:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    13:13:float calculateRevealCenterY(android.view.View,android.view.View,android.support.design.animation.Positioning):0:0 -> u
    13:13:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0 -> u
    13:13:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    14:14:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0:0 -> u
    14:14:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    15:15:float android.support.design.widget.MathUtils.distanceToFurthestCorner(float,float,float,float,float,float):0:0 -> u
    15:15:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0 -> u
    15:15:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    16:16:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0:0 -> u
    16:16:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    17:17:long android.support.design.animation.MotionTiming.getDelay():0:0 -> u
    17:17:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0 -> u
    17:17:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    18:18:void createPreFillRadialExpansion(android.view.View,long,int,int,float,java.util.List):0:0 -> u
    18:18:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0 -> u
    18:18:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    19:19:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0:0 -> u
    19:19:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    20:20:long android.support.design.animation.MotionTiming.getDelay():0:0 -> u
    20:20:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0 -> u
    20:20:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    21:21:void createPreFillRadialExpansion(android.view.View,long,int,int,float,java.util.List):0:0 -> u
    21:21:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0 -> u
    21:21:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    22:22:long android.support.design.animation.MotionTiming.getDelay():0:0 -> u
    22:22:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0 -> u
    22:22:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    23:23:long android.support.design.animation.MotionTiming.getDuration():0:0 -> u
    23:23:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0 -> u
    23:23:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    24:24:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0:0 -> u
    24:24:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    25:25:long android.support.design.animation.MotionSpec.getTotalDuration():0:0 -> u
    25:25:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0 -> u
    25:25:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    26:26:int android.support.v4.util.SimpleArrayMap.size():0:0 -> u
    26:26:long android.support.design.animation.MotionSpec.getTotalDuration():0 -> u
    26:26:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0 -> u
    26:26:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    27:27:long android.support.design.animation.MotionSpec.getTotalDuration():0:0 -> u
    27:27:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0 -> u
    27:27:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    28:28:long android.support.design.animation.MotionTiming.getDelay():0:0 -> u
    28:28:long android.support.design.animation.MotionSpec.getTotalDuration():0 -> u
    28:28:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0 -> u
    28:28:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    29:29:long android.support.design.animation.MotionTiming.getDuration():0:0 -> u
    29:29:long android.support.design.animation.MotionSpec.getTotalDuration():0 -> u
    29:29:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0 -> u
    29:29:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    30:30:long android.support.design.animation.MotionSpec.getTotalDuration():0:0 -> u
    30:30:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0 -> u
    30:30:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    31:31:void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List):0:0 -> u
    31:31:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0 -> u
    31:31:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    32:32:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0:0 -> u
    32:32:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    33:33:android.animation.Animator$AnimatorListener android.support.design.circularreveal.CircularRevealCompat.createCircularRevealListener(android.support.design.circularreveal.CircularRevealWidget):0:0 -> u
    33:33:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0 -> u
    33:33:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    34:34:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List):0:0 -> u
    34:34:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    35:35:void createColorAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List):0:0 -> u
    35:35:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    36:36:int getBackgroundTint(android.view.View):0:0 -> u
    36:36:void createColorAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List):0 -> u
    36:36:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    37:37:android.content.res.ColorStateList android.support.v4.view.ViewCompat.getBackgroundTintList(android.view.View):0:0 -> u
    37:37:int getBackgroundTint(android.view.View):0 -> u
    37:37:void createColorAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List):0 -> u
    37:37:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    38:38:int getBackgroundTint(android.view.View):0:0 -> u
    38:38:void createColorAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List):0 -> u
    38:38:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    39:39:void createColorAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List):0:0 -> u
    39:39:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    40:40:void createChildrenFadeAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List):0:0 -> u
    40:40:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    41:41:android.view.ViewGroup calculateChildContentContainer(android.view.View):0:0 -> u
    41:41:void createChildrenFadeAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List):0 -> u
    41:41:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    42:42:void createChildrenFadeAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List):0:0 -> u
    42:42:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    43:43:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0:0 -> u
    float calculateTranslationX(android.view.View,android.view.View,android.support.design.animation.Positioning) -> v
    float calculateTranslationY(android.view.View,android.view.View,android.support.design.animation.Positioning) -> w
    1:1:long android.support.design.animation.MotionTiming.getDelay():0:0 -> x
    1:1:float calculateValueOfAnimationAtEndOfExpansion(android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,android.support.design.animation.MotionTiming,float,float):0 -> x
    2:2:long android.support.design.animation.MotionTiming.getDuration():0:0 -> x
    2:2:float calculateValueOfAnimationAtEndOfExpansion(android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,android.support.design.animation.MotionTiming,float,float):0 -> x
    3:3:float calculateValueOfAnimationAtEndOfExpansion(android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,android.support.design.animation.MotionTiming,float,float):0:0 -> x
    4:4:long android.support.design.animation.MotionTiming.getDelay():0:0 -> x
    4:4:float calculateValueOfAnimationAtEndOfExpansion(android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,android.support.design.animation.MotionTiming,float,float):0 -> x
    5:5:long android.support.design.animation.MotionTiming.getDuration():0:0 -> x
    5:5:float calculateValueOfAnimationAtEndOfExpansion(android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,android.support.design.animation.MotionTiming,float,float):0 -> x
    6:6:float calculateValueOfAnimationAtEndOfExpansion(android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,android.support.design.animation.MotionTiming,float,float):0:0 -> x
    void calculateWindowBounds(android.view.View,android.graphics.RectF) -> y
    android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean) -> z
android.support.design.transformation.FabTransformationBehavior$1 -> android.support.design.transformation.FabTransformationBehavior$a:
    android.view.View val$dependency -> c
    android.view.View val$child -> b
    boolean val$expanded -> a
android.support.design.transformation.FabTransformationBehavior$2 -> android.support.design.transformation.a:
    android.view.View val$child -> a
android.support.design.transformation.FabTransformationBehavior$3 -> android.support.design.transformation.b:
    android.support.design.circularreveal.CircularRevealWidget val$circularRevealChild -> a
    android.graphics.drawable.Drawable val$icon -> b
android.support.design.transformation.FabTransformationBehavior$4 -> android.support.design.transformation.c:
    android.support.design.circularreveal.CircularRevealWidget val$circularRevealChild -> a
android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec -> android.support.design.transformation.FabTransformationBehavior$b:
    android.support.design.animation.Positioning positioning -> b
    android.support.design.animation.MotionSpec timings -> a
android.support.design.transformation.FabTransformationScrimBehavior -> android.support.design.transformation.FabTransformationScrimBehavior:
    android.support.design.animation.MotionTiming expandTiming -> c
    android.support.design.animation.MotionTiming collapseTiming -> d
    boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> b
    boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> r
    1:1:void createScrimAnimation(android.view.View,boolean,boolean,java.util.List,java.util.List):0:0 -> u
    1:1:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0 -> u
    2:2:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean):0:0 -> u
android.support.design.transformation.FabTransformationScrimBehavior$1 -> android.support.design.transformation.FabTransformationScrimBehavior$a:
    android.view.View val$child -> b
    boolean val$expanded -> a
android.support.design.transformation.FabTransformationSheetBehavior -> android.support.design.transformation.FabTransformationSheetBehavior:
    java.util.Map importantForAccessibilityMap -> g
    1:1:void updateImportantForAccessibility(android.view.View,boolean):0:0 -> t
    1:1:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean):0 -> t
    2:2:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> t
    2:2:void updateImportantForAccessibility(android.view.View,boolean):0 -> t
    2:2:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean):0 -> t
    3:3:void updateImportantForAccessibility(android.view.View,boolean):0:0 -> t
    3:3:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean):0 -> t
    4:4:void android.support.v4.view.ViewCompat.setImportantForAccessibility(android.view.View,int):0:0 -> t
    4:4:void updateImportantForAccessibility(android.view.View,boolean):0 -> t
    4:4:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean):0 -> t
    5:5:void updateImportantForAccessibility(android.view.View,boolean):0:0 -> t
    5:5:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean):0 -> t
    6:6:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean):0:0 -> t
    android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean) -> z
android.support.design.transformation.TransformationChildCard -> u.a:
android.support.design.transformation.TransformationChildLayout -> u.b:
android.support.design.widget.AppBarLayout -> android.support.design.widget.AppBarLayout:
    boolean liftOnScroll -> i
    boolean haveChildWithInterpolator -> e
    int pendingAction -> f
    int downScrollRange -> d
    boolean liftable -> g
    boolean lifted -> h
    int totalScrollRange -> b
    int[] tmpStatesArray -> j
    int downPreScrollRange -> c
    android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    1:1:void setExpanded(boolean,boolean,boolean):0:0 -> b
    1:1:void setExpanded(boolean,boolean):0 -> b
    boolean setLiftedState(boolean) -> c
    1:1:android.support.design.widget.AppBarLayout$LayoutParams generateDefaultLayoutParams():0:0 -> generateDefaultLayoutParams
    1:1:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams():0 -> generateDefaultLayoutParams
    2:2:android.support.design.widget.AppBarLayout$LayoutParams generateDefaultLayoutParams():0:0 -> generateDefaultLayoutParams
    2:2:android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams():0 -> generateDefaultLayoutParams
    1:1:android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> generateLayoutParams
    1:1:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> generateLayoutParams
    2:2:android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> generateLayoutParams
    2:2:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> generateLayoutParams
    1:1:int android.support.v4.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> getDownNestedPreScrollRange
    1:1:int getDownNestedPreScrollRange():0 -> getDownNestedPreScrollRange
    2:2:int getDownNestedPreScrollRange():0:0 -> getDownNestedPreScrollRange
    3:3:int android.support.v4.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> getDownNestedPreScrollRange
    3:3:int getDownNestedPreScrollRange():0 -> getDownNestedPreScrollRange
    4:4:int getDownNestedPreScrollRange():0:0 -> getDownNestedPreScrollRange
    1:1:int android.support.v4.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> getDownNestedScrollRange
    1:1:int getDownNestedScrollRange():0 -> getDownNestedScrollRange
    2:2:int getDownNestedScrollRange():0:0 -> getDownNestedScrollRange
    1:1:int android.support.v4.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> getMinimumHeightForVisibleOverlappingContent
    1:1:int getMinimumHeightForVisibleOverlappingContent():0 -> getMinimumHeightForVisibleOverlappingContent
    2:2:int getMinimumHeightForVisibleOverlappingContent():0:0 -> getMinimumHeightForVisibleOverlappingContent
    3:3:int android.support.v4.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> getMinimumHeightForVisibleOverlappingContent
    3:3:int getMinimumHeightForVisibleOverlappingContent():0 -> getMinimumHeightForVisibleOverlappingContent
    4:4:int getMinimumHeightForVisibleOverlappingContent():0:0 -> getMinimumHeightForVisibleOverlappingContent
    1:1:int android.support.v4.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> getTotalScrollRange
    1:1:int getTotalScrollRange():0 -> getTotalScrollRange
    2:2:int getTotalScrollRange():0:0 -> getTotalScrollRange
    1:1:void invalidateScrollRanges():0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    3:3:android.view.animation.Interpolator android.support.design.widget.AppBarLayout$LayoutParams.getScrollInterpolator():0:0 -> onLayout
    3:3:void onLayout(boolean,int,int,int,int):0 -> onLayout
    4:4:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    5:5:boolean hasCollapsibleChild():0:0 -> onLayout
    5:5:void onLayout(boolean,int,int,int,int):0 -> onLayout
    6:6:boolean android.support.design.widget.AppBarLayout$LayoutParams.isCollapsible():0:0 -> onLayout
    6:6:boolean hasCollapsibleChild():0 -> onLayout
    6:6:void onLayout(boolean,int,int,int,int):0 -> onLayout
    7:7:boolean setLiftableState(boolean):0:0 -> onLayout
    7:7:void onLayout(boolean,int,int,int,int):0 -> onLayout
    1:1:void invalidateScrollRanges():0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    1:1:boolean android.support.v4.view.ViewCompat.isLaidOut(android.view.View):0:0 -> setExpanded
    1:1:void setExpanded(boolean):0 -> setExpanded
    2:2:void setExpanded(boolean):0:0 -> setExpanded
    1:1:void android.support.design.widget.ViewUtilsLollipop.setDefaultAppBarLayoutStateListAnimator(android.view.View,float):0:0 -> setTargetElevation
    1:1:void setTargetElevation(float):0 -> setTargetElevation
android.support.design.widget.AppBarLayout$BaseBehavior -> android.support.design.widget.AppBarLayout$BaseBehavior:
    boolean offsetToChildIndexOnLayoutIsMinHeight -> n
    android.animation.ValueAnimator offsetAnimator -> l
    int offsetToChildIndexOnLayout -> m
    int offsetDelta -> j
    int lastStartedType -> k
    java.lang.ref.WeakReference lastNestedScrollingChildRef -> p
    float offsetToChildIndexOnLayoutPerc -> o
    1:1:void animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int):0:0 -> A
    1:1:void animateOffsetTo(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,float):0 -> A
    boolean checkFlag(int,int) -> B
    1:1:int getChildIndexOnOffset(android.support.design.widget.AppBarLayout,int):0:0 -> C
    1:1:void snapToChildIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout):0 -> C
    2:2:int android.support.design.widget.AppBarLayout$LayoutParams.getScrollFlags():0:0 -> C
    2:2:int getChildIndexOnOffset(android.support.design.widget.AppBarLayout,int):0 -> C
    2:2:void snapToChildIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout):0 -> C
    3:3:int getChildIndexOnOffset(android.support.design.widget.AppBarLayout,int):0:0 -> C
    3:3:void snapToChildIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout):0 -> C
    4:4:void snapToChildIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout):0:0 -> C
    5:5:int android.support.design.widget.AppBarLayout$LayoutParams.getScrollFlags():0:0 -> C
    5:5:void snapToChildIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout):0 -> C
    6:6:void snapToChildIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout):0:0 -> C
    7:7:int android.support.v4.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> C
    7:7:void snapToChildIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout):0 -> C
    8:8:void snapToChildIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout):0:0 -> C
    9:9:int android.support.v4.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> C
    9:9:void snapToChildIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout):0 -> C
    10:10:void snapToChildIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout):0:0 -> C
    1:1:void android.support.v4.view.ViewCompat.stopNestedScroll(android.view.View,int):0:0 -> D
    1:1:void stopNestedScrollIfNeeded(int,android.support.design.widget.AppBarLayout,android.view.View,int):0 -> D
    1:1:android.view.View getAppBarChildOnOffset(android.support.design.widget.AppBarLayout,int):0:0 -> E
    1:1:void updateAppBarLayoutDrawableState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,boolean):0 -> E
    2:2:void updateAppBarLayoutDrawableState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,boolean):0:0 -> E
    3:3:int android.support.design.widget.AppBarLayout$LayoutParams.getScrollFlags():0:0 -> E
    3:3:void updateAppBarLayoutDrawableState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,boolean):0 -> E
    4:4:void updateAppBarLayoutDrawableState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,boolean):0:0 -> E
    5:5:int android.support.v4.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> E
    5:5:void updateAppBarLayoutDrawableState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,boolean):0 -> E
    6:6:void updateAppBarLayoutDrawableState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,boolean):0:0 -> E
    7:7:boolean android.support.design.widget.AppBarLayout.isLiftOnScroll():0:0 -> E
    7:7:void updateAppBarLayoutDrawableState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,boolean):0 -> E
    8:8:android.view.View findFirstScrollingChild(android.support.design.widget.CoordinatorLayout):0:0 -> E
    8:8:void updateAppBarLayoutDrawableState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,boolean):0 -> E
    9:9:void updateAppBarLayoutDrawableState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,boolean):0:0 -> E
    10:10:boolean shouldJumpElevationState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout):0:0 -> E
    10:10:void updateAppBarLayoutDrawableState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,boolean):0 -> E
    11:11:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> E
    11:11:boolean shouldJumpElevationState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout):0 -> E
    11:11:void updateAppBarLayoutDrawableState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,boolean):0 -> E
    12:12:boolean shouldJumpElevationState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout):0:0 -> E
    12:12:void updateAppBarLayoutDrawableState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,boolean):0 -> E
    13:13:int android.support.design.widget.HeaderScrollingViewBehavior.getOverlayTop():0:0 -> E
    13:13:boolean shouldJumpElevationState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout):0 -> E
    13:13:void updateAppBarLayoutDrawableState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,boolean):0 -> E
    14:14:void updateAppBarLayoutDrawableState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,boolean):0:0 -> E
    1:1:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int):0:0 -> f
    1:1:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    2:2:int android.support.v4.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> f
    2:2:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int):0 -> f
    2:2:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    3:3:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int):0:0 -> f
    3:3:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    4:4:void android.support.design.widget.AppBarLayout.resetPendingAction():0:0 -> f
    4:4:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int):0 -> f
    4:4:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    5:5:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int):0:0 -> f
    5:5:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    1:1:boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int,int):0:0 -> g
    1:1:boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int):0 -> g
    1:1:void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,int,int,int[],int):0:0 -> i
    1:1:void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int):0 -> i
    1:1:void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,int,int,int,int,int):0:0 -> k
    1:1:void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int):0 -> k
    2:2:boolean android.support.design.widget.AppBarLayout.isLiftOnScroll():0:0 -> k
    2:2:void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,int,int,int,int,int):0 -> k
    2:2:void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int):0 -> k
    3:3:void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,int,int,int,int,int):0:0 -> k
    3:3:void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int):0 -> k
    1:1:void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.os.Parcelable):0:0 -> m
    1:1:void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View,android.os.Parcelable):0 -> m
    1:1:android.os.Parcelable android.support.design.widget.CoordinatorLayout$Behavior.onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View):0:0 -> n
    1:1:android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout):0 -> n
    1:1:android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View):0 -> n
    2:2:android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout):0:0 -> n
    2:2:android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View):0 -> n
    3:3:int android.support.v4.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> n
    3:3:android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout):0 -> n
    3:3:android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View):0 -> n
    4:4:android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout):0:0 -> n
    4:4:android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View):0 -> n
    1:1:boolean android.support.design.widget.AppBarLayout.isLiftOnScroll():0:0 -> p
    1:1:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,android.view.View,int,int):0 -> p
    1:1:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int):0 -> p
    2:2:boolean android.support.design.widget.AppBarLayout.hasScrollableChildren():0:0 -> p
    2:2:boolean canScrollChildren(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View):0 -> p
    2:2:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,android.view.View,int,int):0 -> p
    2:2:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int):0 -> p
    3:3:boolean canScrollChildren(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View):0:0 -> p
    3:3:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,android.view.View,int,int):0 -> p
    3:3:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int):0 -> p
    4:4:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,android.view.View,int,int):0:0 -> p
    4:4:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int):0 -> p
    1:1:void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,int):0:0 -> q
    1:1:void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int):0 -> q
    1:1:boolean canDragView(android.support.design.widget.AppBarLayout):0:0 -> v
    1:1:boolean canDragView(android.view.View):0 -> v
    int getTopBottomOffsetForScrollingSibling() -> w
    1:1:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int):0:0 -> z
    1:1:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int):0 -> z
    2:2:boolean android.support.design.widget.AppBarLayout.hasChildWithInterpolator():0:0 -> z
    2:2:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int):0 -> z
    2:2:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int):0 -> z
    3:3:int interpolateOffset(android.support.design.widget.AppBarLayout,int):0:0 -> z
    3:3:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int):0 -> z
    3:3:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int):0 -> z
    4:4:android.view.animation.Interpolator android.support.design.widget.AppBarLayout$LayoutParams.getScrollInterpolator():0:0 -> z
    4:4:int interpolateOffset(android.support.design.widget.AppBarLayout,int):0 -> z
    4:4:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int):0 -> z
    4:4:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int):0 -> z
    5:5:int interpolateOffset(android.support.design.widget.AppBarLayout,int):0:0 -> z
    5:5:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int):0 -> z
    5:5:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int):0 -> z
    6:6:int android.support.design.widget.AppBarLayout$LayoutParams.getScrollFlags():0:0 -> z
    6:6:int interpolateOffset(android.support.design.widget.AppBarLayout,int):0 -> z
    6:6:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int):0 -> z
    6:6:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int):0 -> z
    7:7:int interpolateOffset(android.support.design.widget.AppBarLayout,int):0:0 -> z
    7:7:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int):0 -> z
    7:7:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int):0 -> z
    8:8:int android.support.v4.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> z
    8:8:int interpolateOffset(android.support.design.widget.AppBarLayout,int):0 -> z
    8:8:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int):0 -> z
    8:8:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int):0 -> z
    9:9:int interpolateOffset(android.support.design.widget.AppBarLayout,int):0:0 -> z
    9:9:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int):0 -> z
    9:9:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int):0 -> z
    10:10:boolean android.support.v4.view.ViewCompat.getFitsSystemWindows(android.view.View):0:0 -> z
    10:10:int interpolateOffset(android.support.design.widget.AppBarLayout,int):0 -> z
    10:10:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int):0 -> z
    10:10:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int):0 -> z
    11:11:int interpolateOffset(android.support.design.widget.AppBarLayout,int):0:0 -> z
    11:11:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int):0 -> z
    11:11:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int):0 -> z
    12:12:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int):0:0 -> z
    12:12:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int):0 -> z
    13:13:boolean android.support.design.widget.AppBarLayout.hasChildWithInterpolator():0:0 -> z
    13:13:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int):0 -> z
    13:13:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int):0 -> z
    14:14:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int):0:0 -> z
    14:14:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int):0 -> z
android.support.design.widget.AppBarLayout$BaseBehavior$1 -> android.support.design.widget.a:
    android.support.design.widget.CoordinatorLayout val$coordinatorLayout -> a
    android.support.design.widget.AppBarLayout$BaseBehavior this$0 -> c
    android.support.design.widget.AppBarLayout val$child -> b
android.support.design.widget.AppBarLayout$BaseBehavior$SavedState -> android.support.design.widget.AppBarLayout$BaseBehavior$a:
    float firstVisibleChildPercentageShown -> d
    boolean firstVisibleChildAtMinimumHeight -> e
    int firstVisibleChildIndex -> c
    1:1:void android.support.v4.view.AbsSavedState.writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
    1:1:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    2:2:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
android.support.design.widget.AppBarLayout$BaseBehavior$SavedState$1 -> android.support.design.widget.AppBarLayout$BaseBehavior$a$a:
    1:1:android.support.design.widget.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    2:2:android.support.design.widget.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    2:2:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    1:1:android.support.design.widget.AppBarLayout$BaseBehavior$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
android.support.design.widget.AppBarLayout$LayoutParams -> android.support.design.widget.AppBarLayout$a:
    android.view.animation.Interpolator scrollInterpolator -> b
    int scrollFlags -> a
android.support.design.widget.AppBarLayout$ScrollingViewBehavior -> android.support.design.widget.AppBarLayout$ScrollingViewBehavior:
    1:1:void android.support.design.widget.HeaderScrollingViewBehavior.setOverlayTop(int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> b
    1:1:void offsetChildAsNeeded(android.view.View,android.view.View):0:0 -> d
    1:1:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0 -> d
    2:2:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> d
    2:2:void offsetChildAsNeeded(android.view.View,android.view.View):0 -> d
    2:2:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0 -> d
    3:3:void offsetChildAsNeeded(android.view.View,android.view.View):0:0 -> d
    3:3:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0 -> d
    4:4:int android.support.design.widget.AppBarLayout$BaseBehavior.access$000(android.support.design.widget.AppBarLayout$BaseBehavior):0:0 -> d
    4:4:void offsetChildAsNeeded(android.view.View,android.view.View):0 -> d
    4:4:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0 -> d
    5:5:int android.support.design.widget.HeaderScrollingViewBehavior.getVerticalLayoutGap():0:0 -> d
    5:5:void offsetChildAsNeeded(android.view.View,android.view.View):0 -> d
    5:5:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0 -> d
    6:6:void offsetChildAsNeeded(android.view.View,android.view.View):0:0 -> d
    6:6:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0 -> d
    7:7:void updateLiftedStateIfNeeded(android.view.View,android.view.View):0:0 -> d
    7:7:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0 -> d
    8:8:boolean android.support.design.widget.AppBarLayout.isLiftOnScroll():0:0 -> d
    8:8:void updateLiftedStateIfNeeded(android.view.View,android.view.View):0 -> d
    8:8:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0 -> d
    9:9:void updateLiftedStateIfNeeded(android.view.View,android.view.View):0:0 -> d
    9:9:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0 -> d
    boolean onRequestChildRectangleOnScreen(android.support.design.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> l
    android.support.design.widget.AppBarLayout findFirstDependency(java.util.List) -> w
android.support.design.widget.BaseTransientBottomBar$Behavior -> android.support.design.widget.BaseTransientBottomBar$Behavior:
    android.support.design.widget.BaseTransientBottomBar$BehaviorDelegate delegate -> h
    1:1:void android.support.design.widget.BaseTransientBottomBar$BehaviorDelegate.onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0:0 -> e
    1:1:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> e
    2:2:android.support.design.widget.SnackbarManager android.support.design.widget.SnackbarManager.getInstance():0:0 -> e
    2:2:void android.support.design.widget.BaseTransientBottomBar$BehaviorDelegate.onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> e
    2:2:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> e
    3:3:void android.support.design.widget.SnackbarManager.restoreTimeoutIfPaused(android.support.design.widget.SnackbarManager$Callback):0:0 -> e
    3:3:void android.support.design.widget.BaseTransientBottomBar$BehaviorDelegate.onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> e
    3:3:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> e
    4:4:void android.support.design.widget.BaseTransientBottomBar$BehaviorDelegate.onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0:0 -> e
    4:4:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> e
    5:5:android.support.design.widget.SnackbarManager android.support.design.widget.SnackbarManager.getInstance():0:0 -> e
    5:5:void android.support.design.widget.BaseTransientBottomBar$BehaviorDelegate.onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> e
    5:5:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> e
    6:6:void android.support.design.widget.SnackbarManager.pauseTimeout(android.support.design.widget.SnackbarManager$Callback):0:0 -> e
    6:6:void android.support.design.widget.BaseTransientBottomBar$BehaviorDelegate.onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> e
    6:6:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> e
    7:7:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0:0 -> e
    1:1:boolean android.support.design.widget.BaseTransientBottomBar$BehaviorDelegate.canSwipeDismissView(android.view.View):0:0 -> s
    1:1:boolean canSwipeDismissView(android.view.View):0 -> s
android.support.design.widget.BaseTransientBottomBar$BehaviorDelegate -> v.a:
    1:1:void android.support.design.widget.SwipeDismissBehavior.setStartAlphaSwipeDistance(float):0:0 -> <init>
    1:1:void <init>(android.support.design.widget.SwipeDismissBehavior):0 -> <init>
    2:2:void android.support.design.widget.SwipeDismissBehavior.setEndAlphaSwipeDistance(float):0:0 -> <init>
    2:2:void <init>(android.support.design.widget.SwipeDismissBehavior):0 -> <init>
    3:3:void android.support.design.widget.SwipeDismissBehavior.setSwipeDirection(int):0:0 -> <init>
    3:3:void <init>(android.support.design.widget.SwipeDismissBehavior):0 -> <init>
android.support.design.widget.BaseTransientBottomBar$OnAttachStateChangeListener -> v.b:
android.support.design.widget.BaseTransientBottomBar$OnLayoutChangeListener -> v.c:
    void onLayoutChange(android.view.View,int,int,int,int) -> a
android.support.design.widget.BaseTransientBottomBar$SnackbarBaseLayout -> v.d:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener touchExplorationStateChangeListener -> c
    android.view.accessibility.AccessibilityManager accessibilityManager -> b
    android.support.design.widget.BaseTransientBottomBar$OnAttachStateChangeListener onAttachStateChangeListener -> e
    android.support.design.widget.BaseTransientBottomBar$OnLayoutChangeListener onLayoutChangeListener -> d
    1:1:void android.support.v4.view.ViewCompat.setElevation(android.view.View,float):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    3:3:boolean android.support.v4.view.accessibility.AccessibilityManagerCompat.addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    void access$300(android.support.design.widget.BaseTransientBottomBar$SnackbarBaseLayout,boolean) -> a
    1:1:void android.support.v4.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> onAttachedToWindow
    1:1:void onAttachedToWindow():0 -> onAttachedToWindow
    1:1:boolean android.support.v4.view.accessibility.AccessibilityManagerCompat.removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener):0:0 -> onDetachedFromWindow
    1:1:void onDetachedFromWindow():0 -> onDetachedFromWindow
android.support.design.widget.BaseTransientBottomBar$SnackbarBaseLayout$1 -> v.d$a:
    android.support.design.widget.BaseTransientBottomBar$SnackbarBaseLayout this$0 -> a
android.support.design.widget.BottomSheetBehavior -> android.support.design.widget.BottomSheetBehavior:
    int state -> l
    int halfExpandedOffset -> h
    boolean skipCollapsed -> k
    int lastPeekHeight -> f
    java.lang.ref.WeakReference viewRef -> r
    boolean touchingScrollingChild -> w
    android.support.v4.widget.ViewDragHelper$Callback dragCallback -> y
    android.support.v4.widget.ViewDragHelper viewDragHelper -> m
    int activePointerId -> u
    android.view.VelocityTracker velocityTracker -> t
    boolean peekHeightAuto -> d
    int parentHeight -> q
    boolean ignoreEvents -> n
    int lastNestedScrollDy -> o
    boolean nestedScrolled -> p
    boolean hideable -> j
    int collapsedOffset -> i
    int fitToContentsOffset -> g
    java.lang.ref.WeakReference nestedScrollingChildRef -> s
    float maximumVelocity -> b
    int peekHeightMin -> e
    int peekHeight -> c
    java.util.Map importantForAccessibilityMap -> x
    int initialY -> v
    boolean fitToContents -> a
    1:1:void setHideable(boolean):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    3:3:void setFitToContents(boolean):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    5:5:void setSkipCollapsed(boolean):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    1:1:void reset():0:0 -> e
    1:1:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> e
    2:2:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0:0 -> e
    3:3:int android.support.v4.widget.ViewDragHelper.getTouchSlop():0:0 -> e
    3:3:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> e
    1:1:boolean android.support.v4.view.ViewCompat.getFitsSystemWindows(android.view.View):0:0 -> f
    1:1:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    2:2:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0:0 -> f
    3:3:android.support.v4.widget.ViewDragHelper android.support.v4.widget.ViewDragHelper.create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback):0:0 -> f
    3:3:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    4:4:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0:0 -> f
    boolean onNestedPreFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> h
    1:1:void dispatchOnSlide(int):0:0 -> i
    1:1:void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int):0 -> i
    2:2:void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int):0:0 -> i
    1:1:void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View,android.os.Parcelable):0:0 -> m
    1:1:android.os.Parcelable android.support.design.widget.CoordinatorLayout$Behavior.onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View):0:0 -> n
    1:1:android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View):0 -> n
    2:2:android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View):0:0 -> n
    boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> p
    1:1:float getYVelocity():0:0 -> q
    1:1:void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int):0 -> q
    2:2:void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int):0:0 -> q
    3:3:boolean android.support.v4.widget.ViewDragHelper.smoothSlideViewTo(android.view.View,int,int):0:0 -> q
    3:3:void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int):0 -> q
    4:4:void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int):0:0 -> q
    5:5:void android.support.v4.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> q
    5:5:void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int):0 -> q
    6:6:void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int):0:0 -> q
    1:1:void reset():0:0 -> r
    1:1:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> r
    2:2:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0:0 -> r
    3:3:int android.support.v4.widget.ViewDragHelper.getTouchSlop():0:0 -> r
    3:3:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> r
    4:4:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0:0 -> r
    void calculateCollapsedOffset() -> s
    1:1:boolean android.support.v4.view.ViewCompat.isNestedScrollingEnabled(android.view.View):0:0 -> t
    1:1:android.view.View findScrollingChild(android.view.View):0 -> t
    2:2:android.view.View findScrollingChild(android.view.View):0:0 -> t
    int getExpandedOffset() -> u
    void setPeekHeight(int) -> v
    void setStateInternal(int) -> w
    boolean shouldHide(android.view.View,float) -> x
    1:1:void android.support.v4.view.ViewCompat.setImportantForAccessibility(android.view.View,int):0:0 -> y
    1:1:void updateImportantForAccessibility(boolean):0 -> y
    2:2:void updateImportantForAccessibility(boolean):0:0 -> y
android.support.design.widget.BottomSheetBehavior$2 -> android.support.design.widget.BottomSheetBehavior$a:
    android.support.design.widget.BottomSheetBehavior this$0 -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    1:1:int android.support.design.widget.BottomSheetBehavior.access$100(android.support.design.widget.BottomSheetBehavior):0:0 -> b
    1:1:int clampViewPositionVertical(android.view.View,int,int):0 -> b
    2:2:int clampViewPositionVertical(android.view.View,int,int):0:0 -> b
    int getViewVerticalDragRange(android.view.View) -> d
    void onViewDragStateChanged(int) -> f
    1:1:void android.support.design.widget.BottomSheetBehavior.dispatchOnSlide(int):0:0 -> g
    1:1:void onViewPositionChanged(android.view.View,int,int,int,int):0 -> g
    1:1:boolean android.support.design.widget.BottomSheetBehavior.access$000(android.support.design.widget.BottomSheetBehavior):0:0 -> h
    1:1:void onViewReleased(android.view.View,float,float):0 -> h
    2:2:void onViewReleased(android.view.View,float,float):0:0 -> h
    3:3:boolean android.support.design.widget.BottomSheetBehavior.access$000(android.support.design.widget.BottomSheetBehavior):0:0 -> h
    3:3:void onViewReleased(android.view.View,float,float):0 -> h
    4:4:void onViewReleased(android.view.View,float,float):0:0 -> h
    5:5:void android.support.v4.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> h
    5:5:void onViewReleased(android.view.View,float,float):0 -> h
    6:6:void onViewReleased(android.view.View,float,float):0:0 -> h
    boolean tryCaptureView(android.view.View,int) -> i
android.support.design.widget.BottomSheetBehavior$SavedState -> android.support.design.widget.BottomSheetBehavior$b:
    int state -> c
    1:1:void android.support.v4.view.AbsSavedState.writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
    1:1:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    2:2:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
android.support.design.widget.BottomSheetBehavior$SavedState$1 -> android.support.design.widget.BottomSheetBehavior$b$a:
    1:1:android.support.design.widget.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    2:2:android.support.design.widget.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    2:2:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    1:1:android.support.design.widget.BottomSheetBehavior$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
android.support.design.widget.BottomSheetBehavior$SettleRunnable -> android.support.design.widget.BottomSheetBehavior$c:
    android.support.design.widget.BottomSheetBehavior this$0 -> d
    android.view.View view -> b
    int targetState -> c
    1:1:void android.support.v4.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
android.support.design.widget.CheckableImageButton -> android.support.design.widget.CheckableImageButton:
    int[] DRAWABLE_STATE_CHECKED -> e
    boolean checked -> d
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:android.view.View$AccessibilityDelegate android.support.v4.view.AccessibilityDelegateCompat.getBridge():0:0 -> <init>
    2:2:void android.support.v4.view.ViewCompat.setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void android.support.v4.view.ViewCompat.setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
android.support.design.widget.CheckableImageButton$1 -> v.e:
    android.support.design.widget.CheckableImageButton this$0 -> c
    1:1:void android.support.v4.view.AccessibilityDelegateCompat.onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> a
    1:1:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> a
    2:2:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> a
    1:1:void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setCheckable(boolean):0:0 -> b
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    2:2:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    3:3:void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setChecked(boolean):0:0 -> b
    3:3:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
android.support.design.widget.CircularBorderDrawable -> v.f:
    android.graphics.RectF rectF -> c
    int currentBorderTintColor -> k
    int bottomOuterStrokeColor -> h
    float borderWidth -> e
    int bottomInnerStrokeColor -> i
    boolean invalidateShader -> l
    int topOuterStrokeColor -> f
    int topInnerStrokeColor -> g
    android.graphics.Rect rect -> b
    android.support.design.widget.CircularBorderDrawable$CircularBorderState state -> d
    android.graphics.Paint paint -> a
    android.content.res.ColorStateList borderTint -> j
    float rotation -> m
    void setBorderTint(android.content.res.ColorStateList) -> a
    1:1:android.graphics.Shader android.support.design.widget.CircularBorderDrawable.createGradientShader():0:0 -> draw
    1:1:void draw(android.graphics.Canvas):0 -> draw
    2:2:void draw(android.graphics.Canvas):0:0 -> draw
android.support.design.widget.CircularBorderDrawable$1 -> v.f$a:
android.support.design.widget.CircularBorderDrawable$CircularBorderState -> v.f$b:
    android.support.design.widget.CircularBorderDrawable this$0 -> a
    1:1:void android.support.design.widget.CircularBorderDrawable$CircularBorderState.<init>(android.support.design.widget.CircularBorderDrawable):0:0 -> <init>
    1:1:void <init>(android.support.design.widget.CircularBorderDrawable,android.support.design.widget.CircularBorderDrawable$1):0 -> <init>
android.support.design.widget.CircularBorderDrawableLollipop -> v.g:
android.support.design.widget.CoordinatorLayout -> android.support.design.widget.CoordinatorLayout:
    boolean mNeedsPreDrawListener -> m
    boolean mDrawStatusBarBackground -> o
    java.lang.Class[] CONSTRUCTOR_PARAMS -> u
    android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener -> l
    java.lang.String WIDGET_PACKAGE_NAME -> t
    java.util.List mDependencySortedChildren -> b
    int[] mTempIntPair -> f
    android.view.View mNestedScrollingTarget -> k
    android.support.v4.view.OnApplyWindowInsetsListener mApplyWindowInsetsListener -> r
    int[] mKeylines -> i
    android.view.View mBehaviorTouchView -> j
    android.support.v4.util.Pools$Pool sRectPool -> x
    java.util.List mTempDependenciesList -> e
    android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener -> q
    java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR -> w
    java.util.List mTempList1 -> d
    android.support.v4.view.WindowInsetsCompat mLastInsets -> n
    android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper -> s
    java.lang.ThreadLocal sConstructors -> v
    boolean mDisallowInterceptReset -> g
    boolean mIsAttachedToWindow -> h
    android.graphics.drawable.Drawable mStatusBarBackground -> p
    android.support.v4.widget.DirectedAcyclicGraph mChildDag -> c
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:void android.support.v4.view.NestedScrollingParentHelper.onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> a
    1:1:void onNestedScrollAccepted(android.view.View,android.view.View,int,int):0 -> a
    2:2:void onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> a
    1:1:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> b
    1:1:void onNestedScroll(android.view.View,int,int,int,int,int):0 -> b
    2:2:void onNestedScroll(android.view.View,int,int,int,int,int):0:0 -> b
    1:1:void android.support.v4.view.NestedScrollingParentHelper.onStopNestedScroll(android.view.View,int):0:0 -> c
    1:1:void onStopNestedScroll(android.view.View,int):0 -> c
    2:2:void onStopNestedScroll(android.view.View,int):0:0 -> c
    3:3:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> c
    3:3:void onStopNestedScroll(android.view.View,int):0 -> c
    4:4:void onStopNestedScroll(android.view.View,int):0:0 -> c
    5:5:void android.support.design.widget.CoordinatorLayout$LayoutParams.resetNestedScroll(int):0:0 -> c
    5:5:void onStopNestedScroll(android.view.View,int):0 -> c
    6:6:void android.support.design.widget.CoordinatorLayout$LayoutParams.resetChangedAfterNestedScroll():0:0 -> c
    6:6:void onStopNestedScroll(android.view.View,int):0 -> c
    7:7:void onStopNestedScroll(android.view.View,int):0:0 -> c
    1:1:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> d
    1:1:void onNestedPreScroll(android.view.View,int,int,int[],int):0 -> d
    2:2:void onNestedPreScroll(android.view.View,int,int,int[],int):0:0 -> d
    1:1:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> e
    1:1:boolean onStartNestedScroll(android.view.View,android.view.View,int,int):0 -> e
    2:2:boolean onStartNestedScroll(android.view.View,android.view.View,int,int):0:0 -> e
    android.graphics.Rect acquireTempRect() -> f
    void constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int) -> g
    1:1:android.support.design.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams():0:0 -> generateDefaultLayoutParams
    1:1:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams():0 -> generateDefaultLayoutParams
    1:1:android.support.design.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> generateLayoutParams
    1:1:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> generateLayoutParams
    2:2:android.support.design.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0:0 -> generateLayoutParams
    2:2:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):0 -> generateLayoutParams
    1:1:int android.support.v4.view.NestedScrollingParentHelper.getNestedScrollAxes():0:0 -> getNestedScrollAxes
    1:1:int getNestedScrollAxes():0 -> getNestedScrollAxes
    1:1:java.util.List android.support.v4.widget.DirectedAcyclicGraph.getIncomingEdges(java.lang.Object):0:0 -> h
    1:1:void dispatchDependentViewsChanged(android.view.View):0 -> h
    2:2:void dispatchDependentViewsChanged(android.view.View):0:0 -> h
    3:3:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> h
    3:3:void dispatchDependentViewsChanged(android.view.View):0 -> h
    4:4:void dispatchDependentViewsChanged(android.view.View):0:0 -> h
    void getChildRect(android.view.View,boolean,android.graphics.Rect) -> i
    1:1:java.util.List android.support.v4.widget.DirectedAcyclicGraph.getOutgoingEdges(java.lang.Object):0:0 -> j
    1:1:java.util.List getDependencies(android.view.View):0 -> j
    2:2:int android.support.v4.util.SimpleArrayMap.size():0:0 -> j
    2:2:java.util.List android.support.v4.widget.DirectedAcyclicGraph.getOutgoingEdges(java.lang.Object):0 -> j
    2:2:java.util.List getDependencies(android.view.View):0 -> j
    3:3:java.util.List android.support.v4.widget.DirectedAcyclicGraph.getOutgoingEdges(java.lang.Object):0:0 -> j
    3:3:java.util.List getDependencies(android.view.View):0 -> j
    4:4:java.util.List getDependencies(android.view.View):0:0 -> j
    1:1:java.util.List android.support.v4.widget.DirectedAcyclicGraph.getIncomingEdges(java.lang.Object):0:0 -> k
    1:1:java.util.List getDependents(android.view.View):0 -> k
    2:2:java.util.List getDependents(android.view.View):0:0 -> k
    1:1:void android.support.v4.widget.ViewGroupUtils.getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect):0:0 -> l
    1:1:void getDescendantRect(android.view.View,android.graphics.Rect):0 -> l
    2:2:void android.support.v4.widget.ViewGroupUtils.offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect):0:0 -> l
    2:2:void android.support.v4.widget.ViewGroupUtils.getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect):0 -> l
    2:2:void getDescendantRect(android.view.View,android.graphics.Rect):0 -> l
    1:1:int android.support.v4.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> m
    1:1:void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,android.support.design.widget.CoordinatorLayout$LayoutParams,int,int):0 -> m
    2:2:void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,android.support.design.widget.CoordinatorLayout$LayoutParams,int,int):0:0 -> m
    3:3:int android.support.v4.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> m
    3:3:void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,android.support.design.widget.CoordinatorLayout$LayoutParams,int,int):0 -> m
    4:4:void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,android.support.design.widget.CoordinatorLayout$LayoutParams,int,int):0:0 -> m
    int getKeyline(int) -> n
    1:1:void android.support.design.widget.CoordinatorLayout$LayoutParams.setBehavior(android.support.design.widget.CoordinatorLayout$Behavior):0:0 -> o
    1:1:android.support.design.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View):0 -> o
    2:2:android.support.design.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View):0:0 -> o
    3:3:void android.support.design.widget.CoordinatorLayout$LayoutParams.setBehavior(android.support.design.widget.CoordinatorLayout$Behavior):0:0 -> o
    3:3:android.support.design.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View):0 -> o
    4:4:android.support.design.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View):0:0 -> o
    1:1:boolean android.support.v4.view.ViewCompat.getFitsSystemWindows(android.view.View):0:0 -> onAttachedToWindow
    1:1:void onAttachedToWindow():0 -> onAttachedToWindow
    2:2:void android.support.v4.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> onAttachedToWindow
    2:2:void onAttachedToWindow():0 -> onAttachedToWindow
    3:3:void onAttachedToWindow():0:0 -> onAttachedToWindow
    1:1:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    3:3:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> onLayout
    3:3:void onLayout(boolean,int,int,int,int):0 -> onLayout
    4:4:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    1:1:void ensurePreDrawListener():0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:boolean hasDependencies(android.view.View):0:0 -> onMeasure
    2:2:void ensurePreDrawListener():0 -> onMeasure
    2:2:void onMeasure(int,int):0 -> onMeasure
    3:3:boolean android.support.v4.widget.DirectedAcyclicGraph.hasOutgoingEdges(java.lang.Object):0:0 -> onMeasure
    3:3:boolean hasDependencies(android.view.View):0 -> onMeasure
    3:3:void ensurePreDrawListener():0 -> onMeasure
    3:3:void onMeasure(int,int):0 -> onMeasure
    4:4:int android.support.v4.util.SimpleArrayMap.size():0:0 -> onMeasure
    4:4:boolean android.support.v4.widget.DirectedAcyclicGraph.hasOutgoingEdges(java.lang.Object):0 -> onMeasure
    4:4:boolean hasDependencies(android.view.View):0 -> onMeasure
    4:4:void ensurePreDrawListener():0 -> onMeasure
    4:4:void onMeasure(int,int):0 -> onMeasure
    5:5:boolean android.support.v4.widget.DirectedAcyclicGraph.hasOutgoingEdges(java.lang.Object):0:0 -> onMeasure
    5:5:boolean hasDependencies(android.view.View):0 -> onMeasure
    5:5:void ensurePreDrawListener():0 -> onMeasure
    5:5:void onMeasure(int,int):0 -> onMeasure
    6:6:void ensurePreDrawListener():0:0 -> onMeasure
    6:6:void onMeasure(int,int):0 -> onMeasure
    7:7:void addPreDrawListener():0:0 -> onMeasure
    7:7:void ensurePreDrawListener():0 -> onMeasure
    7:7:void onMeasure(int,int):0 -> onMeasure
    8:8:void removePreDrawListener():0:0 -> onMeasure
    8:8:void ensurePreDrawListener():0 -> onMeasure
    8:8:void onMeasure(int,int):0 -> onMeasure
    9:9:void onMeasure(int,int):0:0 -> onMeasure
    10:10:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> onMeasure
    10:10:void onMeasure(int,int):0 -> onMeasure
    11:11:void onMeasure(int,int):0:0 -> onMeasure
    12:12:boolean android.support.v4.view.ViewCompat.getFitsSystemWindows(android.view.View):0:0 -> onMeasure
    12:12:void onMeasure(int,int):0 -> onMeasure
    13:13:void onMeasure(int,int):0:0 -> onMeasure
    14:14:int android.support.v4.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> onMeasure
    14:14:void onMeasure(int,int):0 -> onMeasure
    15:15:void onMeasure(int,int):0:0 -> onMeasure
    16:16:boolean android.support.v4.view.ViewCompat.getFitsSystemWindows(android.view.View):0:0 -> onMeasure
    16:16:void onMeasure(int,int):0 -> onMeasure
    17:17:void onMeasure(int,int):0:0 -> onMeasure
    18:18:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> onMeasure
    18:18:void onMeasure(int,int):0 -> onMeasure
    19:19:void onMeasure(int,int):0:0 -> onMeasure
    20:20:void onMeasureChild(android.view.View,int,int,int,int):0:0 -> onMeasure
    20:20:void onMeasure(int,int):0 -> onMeasure
    21:21:void onMeasure(int,int):0:0 -> onMeasure
    1:1:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> onNestedFling
    1:1:boolean onNestedFling(android.view.View,float,float,boolean):0 -> onNestedFling
    1:1:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> onNestedPreFling
    1:1:boolean onNestedPreFling(android.view.View,float,float):0 -> onNestedPreFling
    2:2:boolean onNestedPreFling(android.view.View,float,float):0:0 -> onNestedPreFling
    1:1:android.os.Parcelable android.support.v4.view.AbsSavedState.getSuperState():0:0 -> onRestoreInstanceState
    1:1:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    2:2:void onRestoreInstanceState(android.os.Parcelable):0:0 -> onRestoreInstanceState
    3:3:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> onRestoreInstanceState
    3:3:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    4:4:void onRestoreInstanceState(android.os.Parcelable):0:0 -> onRestoreInstanceState
    1:1:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> onSaveInstanceState
    1:1:android.os.Parcelable onSaveInstanceState():0 -> onSaveInstanceState
    2:2:android.os.Parcelable onSaveInstanceState():0:0 -> onSaveInstanceState
    1:1:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> onTouchEvent
    1:1:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    2:2:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    1:1:void releaseTempRect(android.graphics.Rect):0:0 -> p
    1:1:boolean isPointInChildBounds(android.view.View,int,int):0 -> p
    2:2:boolean isPointInChildBounds(android.view.View,int,int):0:0 -> p
    1:1:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> q
    1:1:void onChildViewsChanged(int):0 -> q
    2:2:void onChildViewsChanged(int):0:0 -> q
    3:3:void offsetChildToAnchor(android.view.View,int):0:0 -> q
    3:3:void onChildViewsChanged(int):0 -> q
    4:4:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> q
    4:4:void offsetChildToAnchor(android.view.View,int):0 -> q
    4:4:void onChildViewsChanged(int):0 -> q
    5:5:void offsetChildToAnchor(android.view.View,int):0:0 -> q
    5:5:void onChildViewsChanged(int):0 -> q
    6:6:void releaseTempRect(android.graphics.Rect):0:0 -> q
    6:6:void offsetChildToAnchor(android.view.View,int):0 -> q
    6:6:void onChildViewsChanged(int):0 -> q
    7:7:void onChildViewsChanged(int):0:0 -> q
    8:8:int android.support.v4.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> q
    8:8:void onChildViewsChanged(int):0 -> q
    9:9:void onChildViewsChanged(int):0:0 -> q
    10:10:void offsetChildByInset(android.view.View,android.graphics.Rect,int):0:0 -> q
    10:10:void onChildViewsChanged(int):0 -> q
    11:11:boolean android.support.v4.view.ViewCompat.isLaidOut(android.view.View):0:0 -> q
    11:11:void offsetChildByInset(android.view.View,android.graphics.Rect,int):0 -> q
    11:11:void onChildViewsChanged(int):0 -> q
    12:12:void offsetChildByInset(android.view.View,android.graphics.Rect,int):0:0 -> q
    12:12:void onChildViewsChanged(int):0 -> q
    13:13:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> q
    13:13:void offsetChildByInset(android.view.View,android.graphics.Rect,int):0 -> q
    13:13:void onChildViewsChanged(int):0 -> q
    14:14:void offsetChildByInset(android.view.View,android.graphics.Rect,int):0:0 -> q
    14:14:void onChildViewsChanged(int):0 -> q
    15:15:void releaseTempRect(android.graphics.Rect):0:0 -> q
    15:15:void offsetChildByInset(android.view.View,android.graphics.Rect,int):0 -> q
    15:15:void onChildViewsChanged(int):0 -> q
    16:16:void offsetChildByInset(android.view.View,android.graphics.Rect,int):0:0 -> q
    16:16:void onChildViewsChanged(int):0 -> q
    17:17:int android.support.v4.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> q
    17:17:void offsetChildByInset(android.view.View,android.graphics.Rect,int):0 -> q
    17:17:void onChildViewsChanged(int):0 -> q
    18:18:void offsetChildByInset(android.view.View,android.graphics.Rect,int):0:0 -> q
    18:18:void onChildViewsChanged(int):0 -> q
    19:19:void releaseTempRect(android.graphics.Rect):0:0 -> q
    19:19:void offsetChildByInset(android.view.View,android.graphics.Rect,int):0 -> q
    19:19:void onChildViewsChanged(int):0 -> q
    20:20:void getLastChildRect(android.view.View,android.graphics.Rect):0:0 -> q
    20:20:void onChildViewsChanged(int):0 -> q
    21:21:android.graphics.Rect android.support.design.widget.CoordinatorLayout$LayoutParams.getLastChildRect():0:0 -> q
    21:21:void getLastChildRect(android.view.View,android.graphics.Rect):0 -> q
    21:21:void onChildViewsChanged(int):0 -> q
    22:22:void getLastChildRect(android.view.View,android.graphics.Rect):0:0 -> q
    22:22:void onChildViewsChanged(int):0 -> q
    23:23:void onChildViewsChanged(int):0:0 -> q
    24:24:void recordLastChildRect(android.view.View,android.graphics.Rect):0:0 -> q
    24:24:void onChildViewsChanged(int):0 -> q
    25:25:void android.support.design.widget.CoordinatorLayout$LayoutParams.setLastChildRect(android.graphics.Rect):0:0 -> q
    25:25:void recordLastChildRect(android.view.View,android.graphics.Rect):0 -> q
    25:25:void onChildViewsChanged(int):0 -> q
    26:26:void onChildViewsChanged(int):0:0 -> q
    27:27:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> q
    27:27:void onChildViewsChanged(int):0 -> q
    28:28:void onChildViewsChanged(int):0:0 -> q
    29:29:boolean android.support.design.widget.CoordinatorLayout$LayoutParams.getChangedAfterNestedScroll():0:0 -> q
    29:29:void onChildViewsChanged(int):0 -> q
    30:30:void android.support.design.widget.CoordinatorLayout$LayoutParams.resetChangedAfterNestedScroll():0:0 -> q
    30:30:void onChildViewsChanged(int):0 -> q
    31:31:void onChildViewsChanged(int):0:0 -> q
    32:32:void android.support.design.widget.CoordinatorLayout$LayoutParams.setChangedAfterNestedScroll(boolean):0:0 -> q
    32:32:void onChildViewsChanged(int):0 -> q
    33:33:void releaseTempRect(android.graphics.Rect):0:0 -> q
    33:33:void onChildViewsChanged(int):0 -> q
    1:1:boolean android.support.design.widget.CoordinatorLayout$LayoutParams.checkAnchorChanged():0:0 -> r
    1:1:void onLayoutChild(android.view.View,int):0 -> r
    2:2:void layoutChildWithAnchor(android.view.View,android.view.View,int):0:0 -> r
    2:2:void onLayoutChild(android.view.View,int):0 -> r
    3:3:void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect):0:0 -> r
    3:3:void layoutChildWithAnchor(android.view.View,android.view.View,int):0 -> r
    3:3:void onLayoutChild(android.view.View,int):0 -> r
    4:4:void layoutChildWithAnchor(android.view.View,android.view.View,int):0:0 -> r
    4:4:void onLayoutChild(android.view.View,int):0 -> r
    5:5:void releaseTempRect(android.graphics.Rect):0:0 -> r
    5:5:void layoutChildWithAnchor(android.view.View,android.view.View,int):0 -> r
    5:5:void onLayoutChild(android.view.View,int):0 -> r
    6:6:void layoutChildWithAnchor(android.view.View,android.view.View,int):0:0 -> r
    6:6:void onLayoutChild(android.view.View,int):0 -> r
    7:7:void onLayoutChild(android.view.View,int):0:0 -> r
    8:8:void layoutChildWithKeyline(android.view.View,int,int):0:0 -> r
    8:8:void onLayoutChild(android.view.View,int):0 -> r
    9:9:int android.support.v4.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> r
    9:9:void layoutChildWithKeyline(android.view.View,int,int):0 -> r
    9:9:void onLayoutChild(android.view.View,int):0 -> r
    10:10:void layoutChildWithKeyline(android.view.View,int,int):0:0 -> r
    10:10:void onLayoutChild(android.view.View,int):0 -> r
    11:11:void layoutChild(android.view.View,int):0:0 -> r
    11:11:void onLayoutChild(android.view.View,int):0 -> r
    12:12:boolean android.support.v4.view.ViewCompat.getFitsSystemWindows(android.view.View):0:0 -> r
    12:12:void layoutChild(android.view.View,int):0 -> r
    12:12:void onLayoutChild(android.view.View,int):0 -> r
    13:13:void layoutChild(android.view.View,int):0:0 -> r
    13:13:void onLayoutChild(android.view.View,int):0 -> r
    14:14:void android.support.v4.view.GravityCompat.apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int):0:0 -> r
    14:14:void layoutChild(android.view.View,int):0 -> r
    14:14:void onLayoutChild(android.view.View,int):0 -> r
    15:15:void layoutChild(android.view.View,int):0:0 -> r
    15:15:void onLayoutChild(android.view.View,int):0 -> r
    16:16:void releaseTempRect(android.graphics.Rect):0:0 -> r
    16:16:void layoutChild(android.view.View,int):0 -> r
    16:16:void onLayoutChild(android.view.View,int):0 -> r
    17:17:void onLayoutChild(android.view.View,int):0:0 -> r
    1:1:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> requestChildRectangleOnScreen
    1:1:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean):0 -> requestChildRectangleOnScreen
    2:2:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean):0:0 -> requestChildRectangleOnScreen
    void onMeasureChild(android.view.View,int,int,int,int) -> s
    1:1:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> setStatusBarBackground
    1:1:void setStatusBarBackground(android.graphics.drawable.Drawable):0 -> setStatusBarBackground
    2:2:void setStatusBarBackground(android.graphics.drawable.Drawable):0:0 -> setStatusBarBackground
    3:3:void android.support.v4.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> setStatusBarBackground
    3:3:void setStatusBarBackground(android.graphics.drawable.Drawable):0 -> setStatusBarBackground
    1:1:android.graphics.drawable.Drawable android.support.v4.content.ContextCompat.getDrawable(android.content.Context,int):0:0 -> setStatusBarBackgroundResource
    1:1:void setStatusBarBackgroundResource(int):0 -> setStatusBarBackgroundResource
    2:2:void setStatusBarBackgroundResource(int):0:0 -> setStatusBarBackgroundResource
    1:1:void getTopSortedChildren(java.util.List):0:0 -> t
    1:1:boolean performIntercept(android.view.MotionEvent,int):0 -> t
    2:2:boolean performIntercept(android.view.MotionEvent,int):0:0 -> t
    3:3:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> t
    3:3:boolean performIntercept(android.view.MotionEvent,int):0 -> t
    4:4:boolean performIntercept(android.view.MotionEvent,int):0:0 -> t
    5:5:boolean android.support.design.widget.CoordinatorLayout$LayoutParams.didBlockInteraction():0:0 -> t
    5:5:boolean performIntercept(android.view.MotionEvent,int):0 -> t
    6:6:boolean android.support.design.widget.CoordinatorLayout$LayoutParams.isBlockingInteractionBelow(android.support.design.widget.CoordinatorLayout,android.view.View):0:0 -> t
    6:6:boolean performIntercept(android.view.MotionEvent,int):0 -> t
    7:7:boolean performIntercept(android.view.MotionEvent,int):0:0 -> t
    1:1:void android.support.v4.widget.DirectedAcyclicGraph.clear():0:0 -> u
    1:1:void prepareChildren():0 -> u
    2:2:int android.support.v4.util.SimpleArrayMap.size():0:0 -> u
    2:2:void android.support.v4.widget.DirectedAcyclicGraph.clear():0 -> u
    2:2:void prepareChildren():0 -> u
    3:3:void android.support.v4.widget.DirectedAcyclicGraph.clear():0:0 -> u
    3:3:void prepareChildren():0 -> u
    4:4:void prepareChildren():0:0 -> u
    5:5:android.view.View android.support.design.widget.CoordinatorLayout$LayoutParams.findAnchorView(android.support.design.widget.CoordinatorLayout,android.view.View):0:0 -> u
    5:5:void prepareChildren():0 -> u
    6:6:boolean android.support.design.widget.CoordinatorLayout$LayoutParams.verifyAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout):0:0 -> u
    6:6:android.view.View android.support.design.widget.CoordinatorLayout$LayoutParams.findAnchorView(android.support.design.widget.CoordinatorLayout,android.view.View):0 -> u
    6:6:void prepareChildren():0 -> u
    7:7:void android.support.design.widget.CoordinatorLayout$LayoutParams.resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout):0:0 -> u
    7:7:android.view.View android.support.design.widget.CoordinatorLayout$LayoutParams.findAnchorView(android.support.design.widget.CoordinatorLayout,android.view.View):0 -> u
    7:7:void prepareChildren():0 -> u
    8:8:void prepareChildren():0:0 -> u
    9:9:boolean android.support.design.widget.CoordinatorLayout$LayoutParams.dependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0:0 -> u
    9:9:void prepareChildren():0 -> u
    10:10:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> u
    10:10:boolean android.support.design.widget.CoordinatorLayout$LayoutParams.dependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0 -> u
    10:10:void prepareChildren():0 -> u
    11:11:boolean android.support.design.widget.CoordinatorLayout$LayoutParams.shouldDodge(android.view.View,int):0:0 -> u
    11:11:boolean android.support.design.widget.CoordinatorLayout$LayoutParams.dependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0 -> u
    11:11:void prepareChildren():0 -> u
    12:12:int android.support.v4.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> u
    12:12:boolean android.support.design.widget.CoordinatorLayout$LayoutParams.shouldDodge(android.view.View,int):0 -> u
    12:12:boolean android.support.design.widget.CoordinatorLayout$LayoutParams.dependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0 -> u
    12:12:void prepareChildren():0 -> u
    13:13:boolean android.support.design.widget.CoordinatorLayout$LayoutParams.shouldDodge(android.view.View,int):0:0 -> u
    13:13:boolean android.support.design.widget.CoordinatorLayout$LayoutParams.dependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0 -> u
    13:13:void prepareChildren():0 -> u
    14:14:int android.support.v4.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> u
    14:14:boolean android.support.design.widget.CoordinatorLayout$LayoutParams.shouldDodge(android.view.View,int):0 -> u
    14:14:boolean android.support.design.widget.CoordinatorLayout$LayoutParams.dependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0 -> u
    14:14:void prepareChildren():0 -> u
    15:15:boolean android.support.design.widget.CoordinatorLayout$LayoutParams.dependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0:0 -> u
    15:15:void prepareChildren():0 -> u
    16:16:void prepareChildren():0:0 -> u
    17:17:boolean android.support.v4.widget.DirectedAcyclicGraph.contains(java.lang.Object):0:0 -> u
    17:17:void prepareChildren():0 -> u
    18:18:boolean android.support.v4.util.SimpleArrayMap.containsKey(java.lang.Object):0:0 -> u
    18:18:boolean android.support.v4.widget.DirectedAcyclicGraph.contains(java.lang.Object):0 -> u
    18:18:void prepareChildren():0 -> u
    19:19:void prepareChildren():0:0 -> u
    20:20:void android.support.v4.widget.DirectedAcyclicGraph.addEdge(java.lang.Object,java.lang.Object):0:0 -> u
    20:20:void prepareChildren():0 -> u
    21:21:boolean android.support.v4.util.SimpleArrayMap.containsKey(java.lang.Object):0:0 -> u
    21:21:void android.support.v4.widget.DirectedAcyclicGraph.addEdge(java.lang.Object,java.lang.Object):0 -> u
    21:21:void prepareChildren():0 -> u
    22:22:void android.support.v4.widget.DirectedAcyclicGraph.addEdge(java.lang.Object,java.lang.Object):0:0 -> u
    22:22:void prepareChildren():0 -> u
    23:23:boolean android.support.v4.util.SimpleArrayMap.containsKey(java.lang.Object):0:0 -> u
    23:23:void android.support.v4.widget.DirectedAcyclicGraph.addEdge(java.lang.Object,java.lang.Object):0 -> u
    23:23:void prepareChildren():0 -> u
    24:24:void android.support.v4.widget.DirectedAcyclicGraph.addEdge(java.lang.Object,java.lang.Object):0:0 -> u
    24:24:void prepareChildren():0 -> u
    25:25:void android.support.design.widget.CoordinatorLayout$LayoutParams.resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout):0:0 -> u
    25:25:android.view.View android.support.design.widget.CoordinatorLayout$LayoutParams.findAnchorView(android.support.design.widget.CoordinatorLayout,android.view.View):0 -> u
    25:25:void prepareChildren():0 -> u
    26:26:void prepareChildren():0:0 -> u
    27:27:java.util.ArrayList android.support.v4.widget.DirectedAcyclicGraph.getSortedList():0:0 -> u
    27:27:void prepareChildren():0 -> u
    28:28:int android.support.v4.util.SimpleArrayMap.size():0:0 -> u
    28:28:java.util.ArrayList android.support.v4.widget.DirectedAcyclicGraph.getSortedList():0 -> u
    28:28:void prepareChildren():0 -> u
    29:29:java.util.ArrayList android.support.v4.widget.DirectedAcyclicGraph.getSortedList():0:0 -> u
    29:29:void prepareChildren():0 -> u
    30:30:void prepareChildren():0:0 -> u
    1:1:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> v
    1:1:void resetTouchBehaviors(boolean):0 -> v
    2:2:void resetTouchBehaviors(boolean):0:0 -> v
    3:3:void android.support.design.widget.CoordinatorLayout$LayoutParams.resetTouchBehaviorTracking():0:0 -> v
    3:3:void resetTouchBehaviors(boolean):0 -> v
    4:4:void resetTouchBehaviors(boolean):0:0 -> v
    void setInsetOffsetX(android.view.View,int) -> w
    void setInsetOffsetY(android.view.View,int) -> x
    1:1:boolean android.support.v4.view.ViewCompat.getFitsSystemWindows(android.view.View):0:0 -> y
    1:1:void setupForInsets():0 -> y
    2:2:void setupForInsets():0:0 -> y
android.support.design.widget.CoordinatorLayout$1 -> android.support.design.widget.CoordinatorLayout$a:
    android.support.design.widget.CoordinatorLayout this$0 -> a
    1:1:android.support.v4.view.WindowInsetsCompat android.support.design.widget.CoordinatorLayout.setWindowInsets(android.support.v4.view.WindowInsetsCompat):0:0 -> a
    1:1:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat):0 -> a
    2:2:boolean android.support.v4.util.ObjectsCompat.equals(java.lang.Object,java.lang.Object):0:0 -> a
    2:2:android.support.v4.view.WindowInsetsCompat android.support.design.widget.CoordinatorLayout.setWindowInsets(android.support.v4.view.WindowInsetsCompat):0 -> a
    2:2:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat):0 -> a
    3:3:android.support.v4.view.WindowInsetsCompat android.support.design.widget.CoordinatorLayout.setWindowInsets(android.support.v4.view.WindowInsetsCompat):0:0 -> a
    3:3:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat):0 -> a
    4:4:boolean android.support.v4.view.WindowInsetsCompat.isConsumed():0:0 -> a
    4:4:android.support.v4.view.WindowInsetsCompat android.support.design.widget.CoordinatorLayout.dispatchApplyWindowInsetsToBehaviors(android.support.v4.view.WindowInsetsCompat):0 -> a
    4:4:android.support.v4.view.WindowInsetsCompat android.support.design.widget.CoordinatorLayout.setWindowInsets(android.support.v4.view.WindowInsetsCompat):0 -> a
    4:4:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat):0 -> a
    5:5:android.support.v4.view.WindowInsetsCompat android.support.design.widget.CoordinatorLayout.dispatchApplyWindowInsetsToBehaviors(android.support.v4.view.WindowInsetsCompat):0:0 -> a
    5:5:android.support.v4.view.WindowInsetsCompat android.support.design.widget.CoordinatorLayout.setWindowInsets(android.support.v4.view.WindowInsetsCompat):0 -> a
    5:5:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat):0 -> a
    6:6:boolean android.support.v4.view.ViewCompat.getFitsSystemWindows(android.view.View):0:0 -> a
    6:6:android.support.v4.view.WindowInsetsCompat android.support.design.widget.CoordinatorLayout.dispatchApplyWindowInsetsToBehaviors(android.support.v4.view.WindowInsetsCompat):0 -> a
    6:6:android.support.v4.view.WindowInsetsCompat android.support.design.widget.CoordinatorLayout.setWindowInsets(android.support.v4.view.WindowInsetsCompat):0 -> a
    6:6:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat):0 -> a
    7:7:android.support.v4.view.WindowInsetsCompat android.support.design.widget.CoordinatorLayout.dispatchApplyWindowInsetsToBehaviors(android.support.v4.view.WindowInsetsCompat):0:0 -> a
    7:7:android.support.v4.view.WindowInsetsCompat android.support.design.widget.CoordinatorLayout.setWindowInsets(android.support.v4.view.WindowInsetsCompat):0 -> a
    7:7:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat):0 -> a
    8:8:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> a
    8:8:android.support.v4.view.WindowInsetsCompat android.support.design.widget.CoordinatorLayout.dispatchApplyWindowInsetsToBehaviors(android.support.v4.view.WindowInsetsCompat):0 -> a
    8:8:android.support.v4.view.WindowInsetsCompat android.support.design.widget.CoordinatorLayout.setWindowInsets(android.support.v4.view.WindowInsetsCompat):0 -> a
    8:8:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat):0 -> a
    9:9:boolean android.support.v4.view.WindowInsetsCompat.isConsumed():0:0 -> a
    9:9:android.support.v4.view.WindowInsetsCompat android.support.design.widget.CoordinatorLayout.dispatchApplyWindowInsetsToBehaviors(android.support.v4.view.WindowInsetsCompat):0 -> a
    9:9:android.support.v4.view.WindowInsetsCompat android.support.design.widget.CoordinatorLayout.setWindowInsets(android.support.v4.view.WindowInsetsCompat):0 -> a
    9:9:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat):0 -> a
    10:10:android.support.v4.view.WindowInsetsCompat android.support.design.widget.CoordinatorLayout.setWindowInsets(android.support.v4.view.WindowInsetsCompat):0:0 -> a
    10:10:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat):0 -> a
android.support.design.widget.CoordinatorLayout$AttachedBehavior -> android.support.design.widget.CoordinatorLayout$b:
android.support.design.widget.CoordinatorLayout$Behavior -> android.support.design.widget.CoordinatorLayout$c:
    boolean getInsetDodgeRect(android.support.design.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> a
    boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> b
    void onAttachedToLayoutParams(android.support.design.widget.CoordinatorLayout$LayoutParams) -> c
    boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> d
    boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> e
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> f
    boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> g
    boolean onNestedPreFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> h
    void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> i
    void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> j
    void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> k
    boolean onRequestChildRectangleOnScreen(android.support.design.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> l
    void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> m
    android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View) -> n
    boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> o
    boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> p
    void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> q
    boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> r
android.support.design.widget.CoordinatorLayout$DefaultBehavior -> android.support.design.widget.CoordinatorLayout$d:
android.support.design.widget.CoordinatorLayout$HierarchyChangeListener -> android.support.design.widget.CoordinatorLayout$e:
    android.support.design.widget.CoordinatorLayout this$0 -> a
android.support.design.widget.CoordinatorLayout$LayoutParams -> android.support.design.widget.CoordinatorLayout$f:
    boolean mDidBlockInteraction -> m
    boolean mDidAcceptNestedScrollTouch -> n
    boolean mDidAcceptNestedScrollNonTouch -> o
    boolean mDidChangeAfterNestedScroll -> p
    int mInsetOffsetY -> j
    int dodgeInsetEdges -> h
    int mInsetOffsetX -> i
    android.support.design.widget.CoordinatorLayout$Behavior mBehavior -> a
    int mAnchorId -> f
    int insetEdge -> g
    int anchorGravity -> d
    int keyline -> e
    int gravity -> c
    android.view.View mAnchorView -> k
    android.view.View mAnchorDirectChild -> l
    boolean mBehaviorResolved -> b
    android.graphics.Rect mLastChildRect -> q
    1:1:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout.parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    3:3:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout.parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    boolean isNestedScrollAccepted(int) -> a
    void setNestedScrollAccepted(int,boolean) -> b
android.support.design.widget.CoordinatorLayout$OnPreDrawListener -> android.support.design.widget.CoordinatorLayout$g:
    android.support.design.widget.CoordinatorLayout this$0 -> b
android.support.design.widget.CoordinatorLayout$SavedState -> android.support.design.widget.CoordinatorLayout$h:
    android.util.SparseArray behaviorStates -> c
    1:1:void android.support.v4.view.AbsSavedState.writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
    1:1:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    2:2:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
android.support.design.widget.CoordinatorLayout$SavedState$1 -> android.support.design.widget.CoordinatorLayout$h$a:
    1:1:android.support.design.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    2:2:android.support.design.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    2:2:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    1:1:android.support.design.widget.CoordinatorLayout$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
android.support.design.widget.CoordinatorLayout$ViewElevationComparator -> android.support.design.widget.CoordinatorLayout$i:
    1:1:int compare(android.view.View,android.view.View):0:0 -> compare
    1:1:int compare(java.lang.Object,java.lang.Object):0 -> compare
    2:2:float android.support.v4.view.ViewCompat.getZ(android.view.View):0:0 -> compare
    2:2:int compare(android.view.View,android.view.View):0 -> compare
    2:2:int compare(java.lang.Object,java.lang.Object):0 -> compare
android.support.design.widget.DescendantOffsetUtils -> v.h:
    java.lang.ThreadLocal matrix -> a
    java.lang.ThreadLocal rectF -> b
    void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> a
android.support.design.widget.FloatingActionButton -> android.support.design.widget.FloatingActionButton:
    boolean compatPadding -> m
    int maxImageSize -> l
    int customSize -> j
    int imagePadding -> k
    int size -> i
    int borderWidth -> g
    android.graphics.PorterDuff$Mode backgroundTintMode -> d
    android.graphics.Rect touchArea -> o
    android.support.design.widget.FloatingActionButtonImpl impl -> r
    android.graphics.Rect shadowPadding -> n
    android.graphics.PorterDuff$Mode imageMode -> f
    android.support.v7.widget.AppCompatImageHelper imageHelper -> p
    android.content.res.ColorStateList backgroundTint -> c
    android.content.res.ColorStateList imageTint -> e
    android.content.res.ColorStateList rippleColor -> h
    android.support.design.expandable.ExpandableWidgetHelper expandableWidgetHelper -> q
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void android.support.design.widget.FloatingActionButtonImpl.setElevation(float):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    4:4:void android.support.design.widget.FloatingActionButtonImpl.setHoveredFocusedTranslationZ(float):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    6:6:void android.support.design.widget.FloatingActionButtonImpl.setPressedTranslationZ(float):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    8:8:void android.support.design.widget.FloatingActionButtonImpl.setMaxImageSize(int):0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    9:9:void android.support.design.widget.FloatingActionButtonImpl.updateImageMatrixScale():0:0 -> <init>
    9:9:void android.support.design.widget.FloatingActionButtonImpl.setMaxImageSize(int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    11:11:void android.support.design.widget.FloatingActionButtonImpl.setShowMotionSpec(android.support.design.animation.MotionSpec):0:0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    13:13:void android.support.design.widget.FloatingActionButtonImpl.setHideMotionSpec(android.support.design.animation.MotionSpec):0:0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:boolean android.support.design.expandable.ExpandableWidgetHelper.isExpanded():0:0 -> a
    1:1:boolean isExpanded():0 -> a
    void access$101(android.support.design.widget.FloatingActionButton,android.graphics.drawable.Drawable) -> c
    1:1:void android.support.design.widget.FloatingActionButtonImpl.addOnHideAnimationListener(android.animation.Animator$AnimatorListener):0:0 -> d
    1:1:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener):0 -> d
    1:1:void android.support.design.widget.FloatingActionButtonImpl.addOnShowAnimationListener(android.animation.Animator$AnimatorListener):0:0 -> e
    1:1:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener):0 -> e
    1:1:boolean android.support.v4.view.ViewCompat.isLaidOut(android.view.View):0:0 -> f
    1:1:boolean getContentRect(android.graphics.Rect):0 -> f
    2:2:boolean getContentRect(android.graphics.Rect):0:0 -> f
    int getSizeDimension(int) -> g
    1:1:float android.support.design.widget.FloatingActionButtonImpl.getHoveredFocusedTranslationZ():0:0 -> getCompatHoveredFocusedTranslationZ
    1:1:float getCompatHoveredFocusedTranslationZ():0 -> getCompatHoveredFocusedTranslationZ
    1:1:float android.support.design.widget.FloatingActionButtonImpl.getPressedTranslationZ():0:0 -> getCompatPressedTranslationZ
    1:1:float getCompatPressedTranslationZ():0 -> getCompatPressedTranslationZ
    1:1:android.graphics.drawable.Drawable android.support.design.widget.FloatingActionButtonImpl.getContentBackground():0:0 -> getContentBackground
    1:1:android.graphics.drawable.Drawable getContentBackground():0 -> getContentBackground
    1:1:int android.support.design.expandable.ExpandableWidgetHelper.getExpandedComponentIdHint():0:0 -> getExpandedComponentIdHint
    1:1:int getExpandedComponentIdHint():0 -> getExpandedComponentIdHint
    1:1:android.support.design.animation.MotionSpec android.support.design.widget.FloatingActionButtonImpl.getHideMotionSpec():0:0 -> getHideMotionSpec
    1:1:android.support.design.animation.MotionSpec getHideMotionSpec():0 -> getHideMotionSpec
    1:1:android.support.design.widget.FloatingActionButtonImpl createImpl():0:0 -> getImpl
    1:1:android.support.design.widget.FloatingActionButtonImpl getImpl():0 -> getImpl
    2:2:android.support.design.widget.FloatingActionButtonImpl getImpl():0:0 -> getImpl
    1:1:android.support.design.animation.MotionSpec android.support.design.widget.FloatingActionButtonImpl.getShowMotionSpec():0:0 -> getShowMotionSpec
    1:1:android.support.design.animation.MotionSpec getShowMotionSpec():0 -> getShowMotionSpec
    1:1:boolean android.support.design.widget.FloatingActionButtonImpl.isOrWillBeHidden():0:0 -> h
    1:1:void android.support.design.widget.FloatingActionButtonImpl.hide(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean):0 -> h
    1:1:void hide(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener,boolean):0 -> h
    2:2:void android.support.design.widget.FloatingActionButtonImpl.hide(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean):0:0 -> h
    2:2:void hide(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener,boolean):0 -> h
    3:3:android.support.design.animation.MotionSpec android.support.design.widget.FloatingActionButtonImpl.getDefaultHideMotionSpec():0:0 -> h
    3:3:void android.support.design.widget.FloatingActionButtonImpl.hide(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean):0 -> h
    3:3:void hide(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener,boolean):0 -> h
    4:4:void android.support.design.widget.FloatingActionButtonImpl.hide(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean):0:0 -> h
    4:4:void hide(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener,boolean):0 -> h
    boolean isOrWillBeShown() -> i
    void offsetRectWithShadow(android.graphics.Rect) -> j
    void onApplySupportImageTint() -> k
    1:1:void android.support.design.widget.FloatingActionButtonImpl.removeOnHideAnimationListener(android.animation.Animator$AnimatorListener):0:0 -> l
    1:1:void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener):0 -> l
    1:1:void android.support.design.widget.FloatingActionButtonImpl.removeOnShowAnimationListener(android.animation.Animator$AnimatorListener):0:0 -> m
    1:1:void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener):0 -> m
    int resolveAdjustedSize(int,int) -> n
    1:1:void android.support.design.widget.FloatingActionButtonImpl.show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean):0:0 -> o
    1:1:void show(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener,boolean):0 -> o
    2:2:android.support.design.animation.MotionSpec android.support.design.widget.FloatingActionButtonImpl.getDefaultShowMotionSpec():0:0 -> o
    2:2:void android.support.design.widget.FloatingActionButtonImpl.show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean):0 -> o
    2:2:void show(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener,boolean):0 -> o
    3:3:void android.support.design.widget.FloatingActionButtonImpl.show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean):0:0 -> o
    3:3:void show(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener,boolean):0 -> o
    1:1:boolean android.support.design.widget.FloatingActionButtonImpl.requirePreDrawListener():0:0 -> onAttachedToWindow
    1:1:void android.support.design.widget.FloatingActionButtonImpl.onAttachedToWindow():0 -> onAttachedToWindow
    1:1:void onAttachedToWindow():0 -> onAttachedToWindow
    2:2:void android.support.design.widget.FloatingActionButtonImpl.ensurePreDrawListener():0:0 -> onAttachedToWindow
    2:2:void android.support.design.widget.FloatingActionButtonImpl.onAttachedToWindow():0 -> onAttachedToWindow
    2:2:void onAttachedToWindow():0 -> onAttachedToWindow
    3:3:void android.support.design.widget.FloatingActionButtonImpl.onAttachedToWindow():0:0 -> onAttachedToWindow
    3:3:void onAttachedToWindow():0 -> onAttachedToWindow
    1:1:void android.support.design.widget.FloatingActionButtonImpl.onDetachedFromWindow():0:0 -> onDetachedFromWindow
    1:1:void onDetachedFromWindow():0 -> onDetachedFromWindow
    1:1:android.os.Parcelable android.support.v4.view.AbsSavedState.getSuperState():0:0 -> onRestoreInstanceState
    1:1:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    2:2:void onRestoreInstanceState(android.os.Parcelable):0:0 -> onRestoreInstanceState
    3:3:void android.support.design.expandable.ExpandableWidgetHelper.onRestoreInstanceState(android.os.Bundle):0:0 -> onRestoreInstanceState
    3:3:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    4:4:void android.support.design.expandable.ExpandableWidgetHelper.dispatchExpandedStateChanged():0:0 -> onRestoreInstanceState
    4:4:void android.support.design.expandable.ExpandableWidgetHelper.onRestoreInstanceState(android.os.Bundle):0 -> onRestoreInstanceState
    4:4:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    1:1:android.os.Bundle android.support.design.expandable.ExpandableWidgetHelper.onSaveInstanceState():0:0 -> onSaveInstanceState
    1:1:android.os.Parcelable onSaveInstanceState():0 -> onSaveInstanceState
    2:2:android.os.Parcelable onSaveInstanceState():0:0 -> onSaveInstanceState
    1:1:void android.support.design.widget.FloatingActionButtonImpl.setBackgroundTintList(android.content.res.ColorStateList):0:0 -> setBackgroundTintList
    1:1:void setBackgroundTintList(android.content.res.ColorStateList):0 -> setBackgroundTintList
    2:2:void android.support.v4.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> setBackgroundTintList
    2:2:void android.support.design.widget.FloatingActionButtonImpl.setBackgroundTintList(android.content.res.ColorStateList):0 -> setBackgroundTintList
    2:2:void setBackgroundTintList(android.content.res.ColorStateList):0 -> setBackgroundTintList
    3:3:void android.support.design.widget.FloatingActionButtonImpl.setBackgroundTintList(android.content.res.ColorStateList):0:0 -> setBackgroundTintList
    3:3:void setBackgroundTintList(android.content.res.ColorStateList):0 -> setBackgroundTintList
    1:1:void android.support.design.widget.FloatingActionButtonImpl.setBackgroundTintMode(android.graphics.PorterDuff$Mode):0:0 -> setBackgroundTintMode
    1:1:void setBackgroundTintMode(android.graphics.PorterDuff$Mode):0 -> setBackgroundTintMode
    2:2:void android.support.v4.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> setBackgroundTintMode
    2:2:void android.support.design.widget.FloatingActionButtonImpl.setBackgroundTintMode(android.graphics.PorterDuff$Mode):0 -> setBackgroundTintMode
    2:2:void setBackgroundTintMode(android.graphics.PorterDuff$Mode):0 -> setBackgroundTintMode
    1:1:void android.support.design.widget.FloatingActionButtonImpl.setElevation(float):0:0 -> setCompatElevation
    1:1:void setCompatElevation(float):0 -> setCompatElevation
    1:1:void android.support.design.widget.FloatingActionButtonImpl.setHoveredFocusedTranslationZ(float):0:0 -> setCompatHoveredFocusedTranslationZ
    1:1:void setCompatHoveredFocusedTranslationZ(float):0 -> setCompatHoveredFocusedTranslationZ
    1:1:void android.support.design.widget.FloatingActionButtonImpl.setPressedTranslationZ(float):0:0 -> setCompatPressedTranslationZ
    1:1:void setCompatPressedTranslationZ(float):0 -> setCompatPressedTranslationZ
    1:1:void android.support.design.expandable.ExpandableWidgetHelper.setExpandedComponentIdHint(int):0:0 -> setExpandedComponentIdHint
    1:1:void setExpandedComponentIdHint(int):0 -> setExpandedComponentIdHint
    1:1:void android.support.design.widget.FloatingActionButtonImpl.setHideMotionSpec(android.support.design.animation.MotionSpec):0:0 -> setHideMotionSpec
    1:1:void setHideMotionSpec(android.support.design.animation.MotionSpec):0 -> setHideMotionSpec
    1:1:void android.support.design.widget.FloatingActionButtonImpl.updateImageMatrixScale():0:0 -> setImageDrawable
    1:1:void setImageDrawable(android.graphics.drawable.Drawable):0 -> setImageDrawable
    1:1:void android.support.design.widget.FloatingActionButtonImpl.setShowMotionSpec(android.support.design.animation.MotionSpec):0:0 -> setShowMotionSpec
    1:1:void setShowMotionSpec(android.support.design.animation.MotionSpec):0 -> setShowMotionSpec
android.support.design.widget.FloatingActionButton$BaseBehavior -> android.support.design.widget.FloatingActionButton$BaseBehavior:
    boolean autoHideEnabled -> b
    android.graphics.Rect tmpRect -> a
    1:1:boolean getInsetDodgeRect(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.graphics.Rect):0:0 -> a
    1:1:boolean getInsetDodgeRect(android.support.design.widget.CoordinatorLayout,android.view.View,android.graphics.Rect):0 -> a
    void onAttachedToLayoutParams(android.support.design.widget.CoordinatorLayout$LayoutParams) -> c
    1:1:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.view.View):0:0 -> d
    1:1:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0 -> d
    2:2:boolean isBottomSheet(android.view.View):0:0 -> d
    2:2:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.view.View):0 -> d
    2:2:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0 -> d
    3:3:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> d
    3:3:boolean isBottomSheet(android.view.View):0 -> d
    3:3:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.view.View):0 -> d
    3:3:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0 -> d
    4:4:boolean isBottomSheet(android.view.View):0:0 -> d
    4:4:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.view.View):0 -> d
    4:4:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0 -> d
    5:5:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.view.View):0:0 -> d
    5:5:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View):0 -> d
    1:1:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,int):0:0 -> f
    1:1:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    2:2:boolean isBottomSheet(android.view.View):0:0 -> f
    2:2:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,int):0 -> f
    2:2:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    3:3:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> f
    3:3:boolean isBottomSheet(android.view.View):0 -> f
    3:3:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,int):0 -> f
    3:3:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    4:4:boolean isBottomSheet(android.view.View):0:0 -> f
    4:4:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,int):0 -> f
    4:4:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    5:5:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,int):0:0 -> f
    5:5:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    6:6:void offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton):0:0 -> f
    6:6:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,int):0 -> f
    6:6:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    1:1:int android.support.design.widget.CoordinatorLayout$LayoutParams.getAnchorId():0:0 -> s
    1:1:boolean shouldUpdateVisibility(android.view.View,android.support.design.widget.FloatingActionButton):0 -> s
    2:2:boolean shouldUpdateVisibility(android.view.View,android.support.design.widget.FloatingActionButton):0:0 -> s
    1:1:void android.support.design.widget.DescendantOffsetUtils.getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect):0:0 -> t
    1:1:boolean updateFabVisibilityForAppBarLayout(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.support.design.widget.FloatingActionButton):0 -> t
    2:2:void android.support.design.widget.DescendantOffsetUtils.offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect):0:0 -> t
    2:2:void android.support.design.widget.DescendantOffsetUtils.getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect):0 -> t
    2:2:boolean updateFabVisibilityForAppBarLayout(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.support.design.widget.FloatingActionButton):0 -> t
    3:3:boolean updateFabVisibilityForAppBarLayout(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.support.design.widget.FloatingActionButton):0:0 -> t
    boolean updateFabVisibilityForBottomSheet(android.view.View,android.support.design.widget.FloatingActionButton) -> u
android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener -> android.support.design.widget.FloatingActionButton$a:
android.support.design.widget.FloatingActionButton$ShadowDelegateImpl -> android.support.design.widget.FloatingActionButton$b:
    android.support.design.widget.FloatingActionButton this$0 -> a
android.support.design.widget.FloatingActionButtonImpl -> android.support.design.widget.d:
    float rotation -> i
    android.support.design.widget.CircularBorderDrawable borderDrawable -> l
    android.animation.TimeInterpolator ELEVATION_ANIM_INTERPOLATOR -> B
    android.support.design.widget.StateListAnimator stateListAnimator -> g
    android.graphics.Matrix tmpMatrix -> z
    int[] ENABLED_STATE_SET -> G
    int[] PRESSED_ENABLED_STATE_SET -> C
    int[] FOCUSED_ENABLED_STATE_SET -> E
    android.graphics.RectF tmpRectF1 -> x
    android.support.design.animation.MotionSpec showMotionSpec -> c
    android.support.design.widget.ShadowDrawableWrapper shadowDrawable -> h
    android.support.design.animation.MotionSpec defaultShowMotionSpec -> e
    java.util.ArrayList showListeners -> s
    float hoveredFocusedTranslationZ -> o
    int maxImageSize -> q
    android.graphics.drawable.Drawable shapeDrawable -> j
    android.support.design.widget.ShadowViewDelegate shadowViewDelegate -> v
    int animState -> a
    int[] HOVERED_ENABLED_STATE_SET -> F
    int[] EMPTY_STATE_SET -> H
    android.support.design.animation.MotionSpec defaultHideMotionSpec -> f
    android.animation.Animator currentAnimator -> b
    int[] HOVERED_FOCUSED_ENABLED_STATE_SET -> D
    android.graphics.drawable.Drawable rippleDrawable -> k
    android.graphics.Rect tmpRect -> w
    android.support.design.widget.VisibilityAwareImageButton view -> u
    android.view.ViewTreeObserver$OnPreDrawListener preDrawListener -> A
    android.support.design.animation.MotionSpec hideMotionSpec -> d
    android.graphics.drawable.Drawable contentBackground -> m
    float imageMatrixScale -> r
    java.util.ArrayList hideListeners -> t
    android.graphics.RectF tmpRectF2 -> y
    float pressedTranslationZ -> p
    float elevation -> n
    void calculateImageMatrixFromScale(float,android.graphics.Matrix) -> a
    android.animation.AnimatorSet createAnimator(android.support.design.animation.MotionSpec,float,float,float) -> b
    1:1:void android.support.design.widget.CircularBorderDrawable.setGradientColors(int,int,int,int):0:0 -> c
    1:1:android.support.design.widget.CircularBorderDrawable createBorderDrawable(int,android.content.res.ColorStateList):0 -> c
    2:2:void android.support.design.widget.CircularBorderDrawable.setBorderWidth(float):0:0 -> c
    2:2:android.support.design.widget.CircularBorderDrawable createBorderDrawable(int,android.content.res.ColorStateList):0 -> c
    3:3:android.support.design.widget.CircularBorderDrawable createBorderDrawable(int,android.content.res.ColorStateList):0:0 -> c
    android.animation.ValueAnimator createElevationAnimator(android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl) -> d
    android.graphics.drawable.GradientDrawable createShapeDrawable() -> e
    float getElevation() -> f
    void getPadding(android.graphics.Rect) -> g
    boolean isOrWillBeShown() -> h
    void jumpDrawableToCurrentState() -> i
    android.support.design.widget.CircularBorderDrawable newCircularDrawable() -> j
    android.graphics.drawable.GradientDrawable newGradientDrawableForShape() -> k
    void onCompatShadowChanged() -> l
    void onDrawableStateChanged(int[]) -> m
    void onElevationsChanged(float,float,float) -> n
    void onPaddingUpdated(android.graphics.Rect) -> o
    void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int) -> p
    void setImageMatrixScale(float) -> q
    void setRippleColor(android.content.res.ColorStateList) -> r
    1:1:boolean android.support.v4.view.ViewCompat.isLaidOut(android.view.View):0:0 -> s
    1:1:boolean shouldAnimateVisibilityChange():0 -> s
    2:2:boolean shouldAnimateVisibilityChange():0:0 -> s
    1:1:void android.support.design.widget.FloatingActionButton$ShadowDelegateImpl.setShadowPadding(int,int,int,int):0:0 -> t
    1:1:void updatePadding():0 -> t
    2:2:int android.support.design.widget.FloatingActionButton.access$000(android.support.design.widget.FloatingActionButton):0:0 -> t
    2:2:void android.support.design.widget.FloatingActionButton$ShadowDelegateImpl.setShadowPadding(int,int,int,int):0 -> t
    2:2:void updatePadding():0 -> t
    3:3:void android.support.design.widget.FloatingActionButton$ShadowDelegateImpl.setShadowPadding(int,int,int,int):0:0 -> t
    3:3:void updatePadding():0 -> t
android.support.design.widget.FloatingActionButtonImpl$1 -> android.support.design.widget.b:
    android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener val$listener -> c
    android.support.design.widget.FloatingActionButtonImpl this$0 -> d
    boolean cancelled -> a
    boolean val$fromUser -> b
android.support.design.widget.FloatingActionButtonImpl$2 -> android.support.design.widget.c:
    android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener val$listener -> b
    android.support.design.widget.FloatingActionButtonImpl this$0 -> c
    boolean val$fromUser -> a
android.support.design.widget.FloatingActionButtonImpl$3 -> v.i:
    android.support.design.widget.FloatingActionButtonImpl this$0 -> b
    1:1:void android.support.design.widget.FloatingActionButtonImpl.onPreDraw():0:0 -> onPreDraw
    1:1:boolean onPreDraw():0 -> onPreDraw
    2:2:void android.support.design.widget.FloatingActionButtonImpl.updateFromViewRotation():0:0 -> onPreDraw
    2:2:void android.support.design.widget.FloatingActionButtonImpl.onPreDraw():0 -> onPreDraw
    2:2:boolean onPreDraw():0 -> onPreDraw
    3:3:void android.support.design.widget.ShadowDrawableWrapper.setRotation(float):0:0 -> onPreDraw
    3:3:void android.support.design.widget.FloatingActionButtonImpl.updateFromViewRotation():0 -> onPreDraw
    3:3:void android.support.design.widget.FloatingActionButtonImpl.onPreDraw():0 -> onPreDraw
    3:3:boolean onPreDraw():0 -> onPreDraw
    4:4:void android.support.design.widget.FloatingActionButtonImpl.updateFromViewRotation():0:0 -> onPreDraw
    4:4:void android.support.design.widget.FloatingActionButtonImpl.onPreDraw():0 -> onPreDraw
    4:4:boolean onPreDraw():0 -> onPreDraw
    5:5:void android.support.design.widget.CircularBorderDrawable.setRotation(float):0:0 -> onPreDraw
    5:5:void android.support.design.widget.FloatingActionButtonImpl.updateFromViewRotation():0 -> onPreDraw
    5:5:void android.support.design.widget.FloatingActionButtonImpl.onPreDraw():0 -> onPreDraw
    5:5:boolean onPreDraw():0 -> onPreDraw
android.support.design.widget.FloatingActionButtonImpl$DisabledElevationAnimation -> android.support.design.widget.d$a:
    float getTargetShadowSize() -> a
android.support.design.widget.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation -> android.support.design.widget.d$b:
    android.support.design.widget.FloatingActionButtonImpl this$0 -> e
    float getTargetShadowSize() -> a
android.support.design.widget.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation -> android.support.design.widget.d$c:
    android.support.design.widget.FloatingActionButtonImpl this$0 -> e
    float getTargetShadowSize() -> a
android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener -> android.support.design.widget.d$d:
    void onShown() -> a
    void onHidden() -> b
android.support.design.widget.FloatingActionButtonImpl$ResetElevationAnimation -> android.support.design.widget.d$e:
    android.support.design.widget.FloatingActionButtonImpl this$0 -> e
    float getTargetShadowSize() -> a
android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl -> android.support.design.widget.d$f:
    android.support.design.widget.FloatingActionButtonImpl this$0 -> d
    float shadowSizeEnd -> c
    float shadowSizeStart -> b
    boolean validValues -> a
    1:1:void <init>(android.support.design.widget.FloatingActionButtonImpl):0:0 -> <init>
    1:1:void <init>(android.support.design.widget.FloatingActionButtonImpl,android.support.design.widget.FloatingActionButtonImpl$1):0 -> <init>
    float getTargetShadowSize() -> a
    1:1:void android.support.design.widget.ShadowDrawableWrapper.setShadowSize(float):0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
    2:2:void onAnimationEnd(android.animation.Animator):0:0 -> onAnimationEnd
    1:1:float android.support.design.widget.ShadowDrawableWrapper.getShadowSize():0:0 -> onAnimationUpdate
    1:1:void onAnimationUpdate(android.animation.ValueAnimator):0 -> onAnimationUpdate
    2:2:void onAnimationUpdate(android.animation.ValueAnimator):0:0 -> onAnimationUpdate
    3:3:void android.support.design.widget.ShadowDrawableWrapper.setShadowSize(float):0:0 -> onAnimationUpdate
    3:3:void onAnimationUpdate(android.animation.ValueAnimator):0 -> onAnimationUpdate
android.support.design.widget.FloatingActionButtonImplLollipop -> v.j:
    float getElevation() -> f
    1:1:boolean android.support.design.widget.FloatingActionButton$ShadowDelegateImpl.isCompatPaddingEnabled():0:0 -> g
    1:1:void getPadding(android.graphics.Rect):0 -> g
    2:2:float android.support.design.widget.FloatingActionButton$ShadowDelegateImpl.getRadius():0:0 -> g
    2:2:void getPadding(android.graphics.Rect):0 -> g
    3:3:float android.support.design.widget.FloatingActionButtonImplLollipop.getElevation():0:0 -> g
    3:3:void getPadding(android.graphics.Rect):0 -> g
    4:4:void getPadding(android.graphics.Rect):0:0 -> g
    void jumpDrawableToCurrentState() -> i
    android.support.design.widget.CircularBorderDrawable newCircularDrawable() -> j
    android.graphics.drawable.GradientDrawable newGradientDrawableForShape() -> k
    void onCompatShadowChanged() -> l
    void onDrawableStateChanged(int[]) -> m
    1:1:boolean android.support.design.widget.FloatingActionButton$ShadowDelegateImpl.isCompatPaddingEnabled():0:0 -> n
    1:1:void onElevationsChanged(float,float,float):0 -> n
    2:2:void onElevationsChanged(float,float,float):0:0 -> n
    1:1:boolean android.support.design.widget.FloatingActionButton$ShadowDelegateImpl.isCompatPaddingEnabled():0:0 -> o
    1:1:void onPaddingUpdated(android.graphics.Rect):0 -> o
    2:2:void onPaddingUpdated(android.graphics.Rect):0:0 -> o
    3:3:void android.support.design.widget.FloatingActionButton$ShadowDelegateImpl.setBackgroundDrawable(android.graphics.drawable.Drawable):0:0 -> o
    3:3:void onPaddingUpdated(android.graphics.Rect):0 -> o
    4:4:void onPaddingUpdated(android.graphics.Rect):0:0 -> o
    5:5:void android.support.design.widget.FloatingActionButton$ShadowDelegateImpl.setBackgroundDrawable(android.graphics.drawable.Drawable):0:0 -> o
    5:5:void onPaddingUpdated(android.graphics.Rect):0 -> o
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> p
    1:1:void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int):0 -> p
    2:2:void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int):0:0 -> p
    3:3:void android.support.v4.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> p
    3:3:void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int):0 -> p
    4:4:void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int):0:0 -> p
    5:5:void android.support.design.widget.FloatingActionButton$ShadowDelegateImpl.setBackgroundDrawable(android.graphics.drawable.Drawable):0:0 -> p
    5:5:void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int):0 -> p
    1:1:void android.support.design.widget.FloatingActionButtonImpl.setRippleColor(android.content.res.ColorStateList):0:0 -> r
    1:1:void setRippleColor(android.content.res.ColorStateList):0 -> r
    2:2:void android.support.v4.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> r
    2:2:void android.support.design.widget.FloatingActionButtonImpl.setRippleColor(android.content.res.ColorStateList):0 -> r
    2:2:void setRippleColor(android.content.res.ColorStateList):0 -> r
    android.animation.Animator createElevationAnimator(float,float) -> u
android.support.design.widget.FloatingActionButtonImplLollipop$AlwaysStatefulGradientDrawable -> v.j$a:
android.support.design.widget.HeaderBehavior -> v.k:
    java.lang.Runnable flingRunnable -> c
    int touchSlop -> h
    boolean isBeingDragged -> e
    int activePointerId -> f
    android.view.VelocityTracker velocityTracker -> i
    int lastMotionY -> g
    android.widget.OverScroller scroller -> d
    1:1:void android.support.design.widget.HeaderBehavior.ensureVelocityTracker():0:0 -> e
    1:1:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> e
    2:2:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0:0 -> e
    1:1:int android.support.design.widget.AppBarLayout$BaseBehavior.getMaxDragOffset(android.view.View):0:0 -> r
    1:1:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> r
    2:2:int android.support.design.widget.AppBarLayout$BaseBehavior.getMaxDragOffset(android.support.design.widget.AppBarLayout):0:0 -> r
    2:2:int android.support.design.widget.AppBarLayout$BaseBehavior.getMaxDragOffset(android.view.View):0 -> r
    2:2:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> r
    3:3:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0:0 -> r
    4:4:int android.support.design.widget.AppBarLayout$BaseBehavior.getScrollRangeForDragFling(android.view.View):0:0 -> r
    4:4:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> r
    5:5:int android.support.design.widget.AppBarLayout$BaseBehavior.getScrollRangeForDragFling(android.support.design.widget.AppBarLayout):0:0 -> r
    5:5:int android.support.design.widget.AppBarLayout$BaseBehavior.getScrollRangeForDragFling(android.view.View):0 -> r
    5:5:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> r
    6:6:boolean android.support.design.widget.HeaderBehavior.fling(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,float):0:0 -> r
    6:6:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> r
    7:7:void android.support.v4.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> r
    7:7:boolean android.support.design.widget.HeaderBehavior.fling(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,float):0 -> r
    7:7:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> r
    8:8:boolean android.support.design.widget.HeaderBehavior.fling(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,float):0:0 -> r
    8:8:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> r
    9:9:void android.support.design.widget.AppBarLayout$BaseBehavior.onFlingFinished(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout):0:0 -> r
    9:9:void android.support.design.widget.AppBarLayout$BaseBehavior.onFlingFinished(android.support.design.widget.CoordinatorLayout,android.view.View):0 -> r
    9:9:boolean android.support.design.widget.HeaderBehavior.fling(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,float):0 -> r
    9:9:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> r
    10:10:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0:0 -> r
    11:11:void android.support.design.widget.HeaderBehavior.ensureVelocityTracker():0:0 -> r
    11:11:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> r
    12:12:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0:0 -> r
    boolean canDragView(android.view.View) -> v
    int getTopBottomOffsetForScrollingSibling() -> w
    int scroll(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int) -> x
    int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> y
    int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int) -> z
android.support.design.widget.HeaderBehavior$FlingRunnable -> v.k$a:
    android.support.design.widget.CoordinatorLayout parent -> b
    android.support.design.widget.HeaderBehavior this$0 -> d
    android.view.View layout -> c
    1:1:void android.support.v4.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:void android.support.design.widget.AppBarLayout$BaseBehavior.onFlingFinished(android.support.design.widget.CoordinatorLayout,android.view.View):0:0 -> run
    3:3:void run():0 -> run
    4:4:void android.support.design.widget.AppBarLayout$BaseBehavior.onFlingFinished(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout):0:0 -> run
    4:4:void android.support.design.widget.AppBarLayout$BaseBehavior.onFlingFinished(android.support.design.widget.CoordinatorLayout,android.view.View):0 -> run
    4:4:void run():0 -> run
android.support.design.widget.HeaderScrollingViewBehavior -> android.support.design.widget.e:
    int overlayTop -> f
    int verticalLayoutGap -> e
    android.graphics.Rect tempRect1 -> c
    android.graphics.Rect tempRect2 -> d
    1:1:android.view.View android.support.design.widget.AppBarLayout$ScrollingViewBehavior.findFirstDependency(java.util.List):0:0 -> g
    1:1:boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int):0 -> g
    2:2:boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int):0:0 -> g
    3:3:boolean android.support.v4.view.ViewCompat.getFitsSystemWindows(android.view.View):0:0 -> g
    3:3:boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int):0 -> g
    4:4:void android.support.v4.view.ViewCompat.setFitsSystemWindows(android.view.View,boolean):0:0 -> g
    4:4:boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int):0 -> g
    5:5:boolean android.support.v4.view.ViewCompat.getFitsSystemWindows(android.view.View):0:0 -> g
    5:5:boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int):0 -> g
    6:6:boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int):0:0 -> g
    7:7:int android.support.design.widget.AppBarLayout$ScrollingViewBehavior.getScrollRange(android.view.View):0:0 -> g
    7:7:boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int):0 -> g
    8:8:boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int):0:0 -> g
    1:1:android.view.View android.support.design.widget.AppBarLayout$ScrollingViewBehavior.findFirstDependency(java.util.List):0:0 -> t
    1:1:void layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> t
    2:2:void layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0:0 -> t
    3:3:boolean android.support.v4.view.ViewCompat.getFitsSystemWindows(android.view.View):0:0 -> t
    3:3:void layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> t
    4:4:void layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0:0 -> t
    5:5:void android.support.v4.view.GravityCompat.apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int):0:0 -> t
    5:5:void layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> t
    6:6:void layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0:0 -> t
    7:7:void android.support.design.widget.ViewOffsetBehavior.layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0:0 -> t
    7:7:void layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> t
    8:8:void layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0:0 -> t
    1:1:float android.support.design.widget.AppBarLayout$ScrollingViewBehavior.getOverlapRatioForOffset(android.view.View):0:0 -> v
    1:1:int getOverlapPixelsForOffset(android.view.View):0 -> v
    2:2:int android.support.design.widget.AppBarLayout$ScrollingViewBehavior.getAppBarLayoutOffset(android.support.design.widget.AppBarLayout):0:0 -> v
    2:2:float android.support.design.widget.AppBarLayout$ScrollingViewBehavior.getOverlapRatioForOffset(android.view.View):0 -> v
    2:2:int getOverlapPixelsForOffset(android.view.View):0 -> v
    3:3:android.support.design.widget.CoordinatorLayout$Behavior android.support.design.widget.CoordinatorLayout$LayoutParams.getBehavior():0:0 -> v
    3:3:int android.support.design.widget.AppBarLayout$ScrollingViewBehavior.getAppBarLayoutOffset(android.support.design.widget.AppBarLayout):0 -> v
    3:3:float android.support.design.widget.AppBarLayout$ScrollingViewBehavior.getOverlapRatioForOffset(android.view.View):0 -> v
    3:3:int getOverlapPixelsForOffset(android.view.View):0 -> v
    4:4:int android.support.design.widget.AppBarLayout$ScrollingViewBehavior.getAppBarLayoutOffset(android.support.design.widget.AppBarLayout):0:0 -> v
    4:4:float android.support.design.widget.AppBarLayout$ScrollingViewBehavior.getOverlapRatioForOffset(android.view.View):0 -> v
    4:4:int getOverlapPixelsForOffset(android.view.View):0 -> v
    5:5:int getOverlapPixelsForOffset(android.view.View):0:0 -> v
android.support.design.widget.ShadowDrawableWrapper -> v.l:
    float rotation -> e
    float rawShadowSize -> d
    float rawMaxShadowSize -> c
    int $r8$clinit -> g
    double COS_45 -> f
    float calculateVerticalPadding(float,float,boolean) -> a
    void setShadowSize(float,float) -> b
android.support.design.widget.ShadowViewDelegate -> v.m:
android.support.design.widget.SnackbarContentLayout -> android.support.design.widget.SnackbarContentLayout:
    android.widget.TextView messageView -> b
    int maxWidth -> d
    int maxInlineActionWidth -> e
    android.widget.Button actionView -> c
    1:1:void updateTopBottomPadding(android.view.View,int,int):0:0 -> a
    1:1:boolean updateViewsWithinLayout(int,int,int):0 -> a
    2:2:boolean android.support.v4.view.ViewCompat.isPaddingRelative(android.view.View):0:0 -> a
    2:2:void updateTopBottomPadding(android.view.View,int,int):0 -> a
    2:2:boolean updateViewsWithinLayout(int,int,int):0 -> a
    3:3:int android.support.v4.view.ViewCompat.getPaddingStart(android.view.View):0:0 -> a
    3:3:void updateTopBottomPadding(android.view.View,int,int):0 -> a
    3:3:boolean updateViewsWithinLayout(int,int,int):0 -> a
    4:4:int android.support.v4.view.ViewCompat.getPaddingEnd(android.view.View):0:0 -> a
    4:4:void updateTopBottomPadding(android.view.View,int,int):0 -> a
    4:4:boolean updateViewsWithinLayout(int,int,int):0 -> a
    5:5:void android.support.v4.view.ViewCompat.setPaddingRelative(android.view.View,int,int,int,int):0:0 -> a
    5:5:void updateTopBottomPadding(android.view.View,int,int):0 -> a
    5:5:boolean updateViewsWithinLayout(int,int,int):0 -> a
    6:6:void updateTopBottomPadding(android.view.View,int,int):0:0 -> a
    6:6:boolean updateViewsWithinLayout(int,int,int):0 -> a
android.support.design.widget.SnackbarManager -> v.n:
    android.os.Handler handler -> b
    android.support.design.widget.SnackbarManager snackbarManager -> c
    java.lang.Object lock -> a
android.support.design.widget.SnackbarManager$1 -> v.n$a:
    android.support.design.widget.SnackbarManager this$0 -> a
    1:1:void android.support.design.widget.SnackbarManager.handleTimeout(android.support.design.widget.SnackbarManager$SnackbarRecord):0:0 -> handleMessage
    1:1:boolean handleMessage(android.os.Message):0 -> handleMessage
    2:2:boolean android.support.design.widget.SnackbarManager.cancelSnackbarLocked(android.support.design.widget.SnackbarManager$SnackbarRecord,int):0:0 -> handleMessage
    2:2:void android.support.design.widget.SnackbarManager.handleTimeout(android.support.design.widget.SnackbarManager$SnackbarRecord):0 -> handleMessage
    2:2:boolean handleMessage(android.os.Message):0 -> handleMessage
    3:3:void android.support.design.widget.SnackbarManager.handleTimeout(android.support.design.widget.SnackbarManager$SnackbarRecord):0:0 -> handleMessage
    3:3:boolean handleMessage(android.os.Message):0 -> handleMessage
android.support.design.widget.SnackbarManager$SnackbarRecord -> v.n$b:
android.support.design.widget.StateListAnimator -> v.o:
    android.support.design.widget.StateListAnimator$Tuple lastMatch -> b
    android.animation.ValueAnimator runningAnimator -> c
    android.animation.Animator$AnimatorListener animationListener -> d
    java.util.ArrayList tuples -> a
    void addState(int[],android.animation.ValueAnimator) -> a
android.support.design.widget.StateListAnimator$1 -> v.o$a:
    android.support.design.widget.StateListAnimator this$0 -> a
android.support.design.widget.StateListAnimator$Tuple -> v.o$b:
    int[] specs -> a
    android.animation.ValueAnimator animator -> b
android.support.design.widget.SwipeDismissBehavior -> android.support.design.widget.SwipeDismissBehavior:
    android.support.v4.widget.ViewDragHelper viewDragHelper -> a
    float alphaEndSwipeDistance -> f
    float alphaStartSwipeDistance -> e
    float dragDismissThreshold -> d
    boolean interceptingEvents -> b
    int swipeDirection -> c
    android.support.v4.widget.ViewDragHelper$Callback dragCallback -> g
    1:1:void ensureViewDragHelper(android.view.ViewGroup):0:0 -> e
    1:1:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> e
    2:2:android.support.v4.widget.ViewDragHelper android.support.v4.widget.ViewDragHelper.create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback):0:0 -> e
    2:2:void ensureViewDragHelper(android.view.ViewGroup):0 -> e
    2:2:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> e
    3:3:void ensureViewDragHelper(android.view.ViewGroup):0:0 -> e
    3:3:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0 -> e
    4:4:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent):0:0 -> e
    boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> r
    boolean canSwipeDismissView(android.view.View) -> s
    float clamp(float,float,float) -> t
android.support.design.widget.SwipeDismissBehavior$1 -> android.support.design.widget.SwipeDismissBehavior$a:
    android.support.design.widget.SwipeDismissBehavior this$0 -> c
    int activePointerId -> b
    int originalCapturedViewLeft -> a
    1:1:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> a
    1:1:int clampViewPositionHorizontal(android.view.View,int,int):0 -> a
    2:2:int clampViewPositionHorizontal(android.view.View,int,int):0:0 -> a
    3:3:int android.support.design.widget.SwipeDismissBehavior.clamp(int,int,int):0:0 -> a
    3:3:int clampViewPositionHorizontal(android.view.View,int,int):0 -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> c
    void onViewCaptured(android.view.View,int) -> e
    void onViewDragStateChanged(int) -> f
    void onViewPositionChanged(android.view.View,int,int,int,int) -> g
    1:1:boolean shouldDismiss(android.view.View,float):0:0 -> h
    1:1:void onViewReleased(android.view.View,float,float):0 -> h
    2:2:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> h
    2:2:boolean shouldDismiss(android.view.View,float):0 -> h
    2:2:void onViewReleased(android.view.View,float,float):0 -> h
    3:3:boolean shouldDismiss(android.view.View,float):0:0 -> h
    3:3:void onViewReleased(android.view.View,float,float):0 -> h
    4:4:void onViewReleased(android.view.View,float,float):0:0 -> h
    5:5:void android.support.v4.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> h
    5:5:void onViewReleased(android.view.View,float,float):0 -> h
    6:6:void onViewReleased(android.view.View,float,float):0:0 -> h
    boolean tryCaptureView(android.view.View,int) -> i
android.support.design.widget.SwipeDismissBehavior$SettleRunnable -> android.support.design.widget.SwipeDismissBehavior$b:
    android.support.design.widget.SwipeDismissBehavior this$0 -> d
    android.view.View view -> b
    boolean dismiss -> c
    1:1:void android.support.v4.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
android.support.design.widget.ViewOffsetBehavior -> android.support.design.widget.f:
    android.support.design.widget.ViewOffsetHelper viewOffsetHelper -> a
    int tempTopBottomOffset -> b
    1:1:void android.support.design.widget.ViewOffsetHelper.onViewLayout():0:0 -> f
    1:1:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    2:2:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0:0 -> f
    3:3:boolean android.support.design.widget.ViewOffsetHelper.setTopAndBottomOffset(int):0:0 -> f
    3:3:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0 -> f
    4:4:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int):0:0 -> f
    1:1:int android.support.design.widget.ViewOffsetHelper.getTopAndBottomOffset():0:0 -> s
    1:1:int getTopAndBottomOffset():0 -> s
    void layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> t
    1:1:boolean android.support.design.widget.ViewOffsetHelper.setTopAndBottomOffset(int):0:0 -> u
    1:1:boolean setTopAndBottomOffset(int):0 -> u
    2:2:boolean setTopAndBottomOffset(int):0:0 -> u
android.support.design.widget.ViewOffsetHelper -> v.p:
    android.view.View view -> a
    int offsetTop -> d
    int offsetLeft -> e
    int layoutTop -> b
    int layoutLeft -> c
    void updateOffsets() -> a
android.support.design.widget.VisibilityAwareImageButton -> v.q:
    int userSetVisibility -> b
    1:1:void android.support.design.widget.VisibilityAwareImageButton.<init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    void internalSetVisibility(int,boolean) -> b
    1:1:void android.support.design.widget.VisibilityAwareImageButton.internalSetVisibility(int,boolean):0:0 -> setVisibility
    1:1:void setVisibility(int):0 -> setVisibility
android.support.graphics.drawable.AndroidResources -> w.a:
    int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET -> f
    int[] STYLEABLE_ANIMATOR -> g
    int[] STYLEABLE_ANIMATOR_SET -> h
    int[] STYLEABLE_PROPERTY_VALUES_HOLDER -> i
    int[] STYLEABLE_VECTOR_DRAWABLE_GROUP -> b
    int[] STYLEABLE_VECTOR_DRAWABLE_PATH -> c
    int[] STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH -> d
    int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE -> e
    int[] STYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY -> a
    int[] STYLEABLE_KEYFRAME -> j
    int[] STYLEABLE_PROPERTY_ANIMATOR -> k
    int[] STYLEABLE_PATH_INTERPOLATOR -> l
android.support.graphics.drawable.AnimatedVectorDrawableCompat -> w.b:
    android.graphics.drawable.Drawable$Callback mCallback -> f
    android.animation.ArgbEvaluator mArgbEvaluator -> e
    android.content.Context mContext -> d
    android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState mAnimatedVectorState -> c
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme):0:0 -> applyTheme
    1:1:void applyTheme(android.content.res.Resources$Theme):0 -> applyTheme
    1:1:boolean android.support.v4.graphics.drawable.DrawableCompat.canApplyTheme(android.graphics.drawable.Drawable):0:0 -> canApplyTheme
    1:1:boolean canApplyTheme():0 -> canApplyTheme
    1:1:int android.support.v4.graphics.drawable.DrawableCompat.getAlpha(android.graphics.drawable.Drawable):0:0 -> getAlpha
    1:1:int getAlpha():0 -> getAlpha
    2:2:int getAlpha():0:0 -> getAlpha
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    1:1:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    2:2:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    3:3:android.support.graphics.drawable.VectorDrawableCompat android.support.graphics.drawable.VectorDrawableCompat.create(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> inflate
    3:3:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    4:4:android.graphics.drawable.Drawable android.support.v4.content.res.ResourcesCompat.getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> inflate
    4:4:android.support.graphics.drawable.VectorDrawableCompat android.support.graphics.drawable.VectorDrawableCompat.create(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> inflate
    4:4:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    5:5:android.support.graphics.drawable.VectorDrawableCompat android.support.graphics.drawable.VectorDrawableCompat.create(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> inflate
    5:5:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    6:6:void android.support.graphics.drawable.VectorDrawableCompat.setAllowCaching(boolean):0:0 -> inflate
    6:6:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    7:7:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    8:8:android.animation.Animator android.support.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,int):0:0 -> inflate
    8:8:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    9:9:android.animation.Animator android.support.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float):0:0 -> inflate
    9:9:android.animation.Animator android.support.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int):0 -> inflate
    9:9:android.animation.Animator android.support.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,int):0 -> inflate
    9:9:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    10:10:android.animation.Animator android.support.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float):0:0 -> inflate
    10:10:android.animation.Animator android.support.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float):0 -> inflate
    10:10:android.animation.Animator android.support.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int):0 -> inflate
    10:10:android.animation.Animator android.support.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,int):0 -> inflate
    10:10:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    11:11:android.animation.Animator android.support.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float):0:0 -> inflate
    11:11:android.animation.Animator android.support.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int):0 -> inflate
    11:11:android.animation.Animator android.support.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,int):0 -> inflate
    11:11:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    12:12:void android.support.graphics.drawable.AnimatedVectorDrawableCompat.setupAnimatorsForTarget(java.lang.String,android.animation.Animator):0:0 -> inflate
    12:12:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    13:13:java.lang.Object android.support.graphics.drawable.VectorDrawableCompat.getTargetByName(java.lang.String):0:0 -> inflate
    13:13:void android.support.graphics.drawable.AnimatedVectorDrawableCompat.setupAnimatorsForTarget(java.lang.String,android.animation.Animator):0 -> inflate
    13:13:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    14:14:void android.support.graphics.drawable.AnimatedVectorDrawableCompat.setupAnimatorsForTarget(java.lang.String,android.animation.Animator):0:0 -> inflate
    14:14:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    15:15:android.animation.Animator android.support.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float):0:0 -> inflate
    15:15:android.animation.Animator android.support.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int):0 -> inflate
    15:15:android.animation.Animator android.support.graphics.drawable.AnimatorInflaterCompat.loadAnimator(android.content.Context,int):0 -> inflate
    15:15:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    16:16:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    17:17:void android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState.setupAnimatorSet():0:0 -> inflate
    17:17:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    1:1:boolean android.support.v4.graphics.drawable.DrawableCompat.isAutoMirrored(android.graphics.drawable.Drawable):0:0 -> isAutoMirrored
    1:1:boolean isAutoMirrored():0 -> isAutoMirrored
    2:2:boolean isAutoMirrored():0:0 -> isAutoMirrored
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setAutoMirrored(android.graphics.drawable.Drawable,boolean):0:0 -> setAutoMirrored
    1:1:void setAutoMirrored(boolean):0 -> setAutoMirrored
    2:2:void setAutoMirrored(boolean):0:0 -> setAutoMirrored
    3:3:void android.support.graphics.drawable.VectorDrawableCompat.setAutoMirrored(boolean):0:0 -> setAutoMirrored
    3:3:void setAutoMirrored(boolean):0 -> setAutoMirrored
    4:4:void android.support.v4.graphics.drawable.DrawableCompat.setAutoMirrored(android.graphics.drawable.Drawable,boolean):0:0 -> setAutoMirrored
    4:4:void android.support.graphics.drawable.VectorDrawableCompat.setAutoMirrored(boolean):0 -> setAutoMirrored
    4:4:void setAutoMirrored(boolean):0 -> setAutoMirrored
    5:5:void android.support.graphics.drawable.VectorDrawableCompat.setAutoMirrored(boolean):0:0 -> setAutoMirrored
    5:5:void setAutoMirrored(boolean):0 -> setAutoMirrored
    1:1:void android.support.graphics.drawable.VectorDrawableCompat.setColorFilter(android.graphics.ColorFilter):0:0 -> setColorFilter
    1:1:void setColorFilter(android.graphics.ColorFilter):0 -> setColorFilter
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setTint(android.graphics.drawable.Drawable,int):0:0 -> setTint
    1:1:void setTint(int):0 -> setTint
    2:2:void setTint(int):0:0 -> setTint
android.support.graphics.drawable.AnimatedVectorDrawableCompat$1 -> w.b$a:
    android.support.graphics.drawable.AnimatedVectorDrawableCompat this$0 -> b
android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> w.b$b:
    android.support.v4.util.ArrayMap mTargetNameMap -> e
    android.support.graphics.drawable.VectorDrawableCompat mVectorDrawable -> b
    android.animation.AnimatorSet mAnimatorSet -> c
    java.util.ArrayList mAnimators -> d
    int mChangingConfigurations -> a
    1:1:void android.support.graphics.drawable.VectorDrawableCompat.setAllowCaching(boolean):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources):0 -> <init>
    2:2:void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources):0:0 -> <init>
    3:3:java.lang.Object android.support.graphics.drawable.VectorDrawableCompat.getTargetByName(java.lang.String):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources):0 -> <init>
    4:4:void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources):0:0 -> <init>
    5:5:void android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState.setupAnimatorSet():0:0 -> <init>
    5:5:void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources):0 -> <init>
android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> w.b$c:
    android.graphics.drawable.Drawable$ConstantState mDelegateState -> a
    1:1:void android.support.graphics.drawable.AnimatedVectorDrawableCompat.<init>():0:0 -> newDrawable
    1:1:android.graphics.drawable.Drawable newDrawable():0 -> newDrawable
    2:2:android.graphics.drawable.Drawable newDrawable():0:0 -> newDrawable
    3:3:void android.support.graphics.drawable.AnimatedVectorDrawableCompat.<init>():0:0 -> newDrawable
    3:3:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources):0 -> newDrawable
    4:4:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources):0:0 -> newDrawable
    5:5:void android.support.graphics.drawable.AnimatedVectorDrawableCompat.<init>():0:0 -> newDrawable
    5:5:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme):0 -> newDrawable
    6:6:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme):0:0 -> newDrawable
android.support.graphics.drawable.AnimatorInflaterCompat -> w.c:
    1:1:android.animation.ObjectAnimator android.support.graphics.drawable.AnimatorInflaterCompat.loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser):0:0 -> a
    1:1:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    2:2:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0:0 -> a
    3:3:int android.support.v4.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> a
    3:3:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    4:4:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0:0 -> a
    5:5:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0:0 -> a
    5:5:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    6:6:int android.support.v4.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> a
    6:6:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> a
    6:6:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    7:7:android.animation.PropertyValuesHolder android.support.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0:0 -> a
    7:7:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> a
    7:7:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    8:8:int android.support.graphics.drawable.AnimatorInflaterCompat.inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser):0:0 -> a
    8:8:android.animation.PropertyValuesHolder android.support.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> a
    8:8:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> a
    8:8:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    9:9:android.util.TypedValue android.support.v4.content.res.TypedArrayUtils.peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0:0 -> a
    9:9:int android.support.graphics.drawable.AnimatorInflaterCompat.inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser):0 -> a
    9:9:android.animation.PropertyValuesHolder android.support.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> a
    9:9:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> a
    9:9:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    10:10:int android.support.graphics.drawable.AnimatorInflaterCompat.inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser):0:0 -> a
    10:10:android.animation.PropertyValuesHolder android.support.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> a
    10:10:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> a
    10:10:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    11:11:android.animation.PropertyValuesHolder android.support.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0:0 -> a
    11:11:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> a
    11:11:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    12:12:android.animation.Keyframe android.support.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0:0 -> a
    12:12:android.animation.PropertyValuesHolder android.support.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> a
    12:12:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> a
    12:12:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    13:13:float android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> a
    13:13:android.animation.Keyframe android.support.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0 -> a
    13:13:android.animation.PropertyValuesHolder android.support.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> a
    13:13:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> a
    13:13:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    14:14:android.util.TypedValue android.support.v4.content.res.TypedArrayUtils.peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0:0 -> a
    14:14:android.animation.Keyframe android.support.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0 -> a
    14:14:android.animation.PropertyValuesHolder android.support.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> a
    14:14:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> a
    14:14:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    15:15:android.animation.Keyframe android.support.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0:0 -> a
    15:15:android.animation.PropertyValuesHolder android.support.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> a
    15:15:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> a
    15:15:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    16:16:int android.support.v4.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> a
    16:16:android.animation.Keyframe android.support.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0 -> a
    16:16:android.animation.PropertyValuesHolder android.support.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> a
    16:16:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> a
    16:16:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    17:17:android.animation.Keyframe android.support.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0:0 -> a
    17:17:android.animation.PropertyValuesHolder android.support.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> a
    17:17:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> a
    17:17:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    18:18:float android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> a
    18:18:android.animation.Keyframe android.support.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0 -> a
    18:18:android.animation.PropertyValuesHolder android.support.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> a
    18:18:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> a
    18:18:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    19:19:android.animation.Keyframe android.support.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0:0 -> a
    19:19:android.animation.PropertyValuesHolder android.support.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> a
    19:19:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> a
    19:19:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    20:20:int android.support.v4.content.res.TypedArrayUtils.getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> a
    20:20:android.animation.Keyframe android.support.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0 -> a
    20:20:android.animation.PropertyValuesHolder android.support.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> a
    20:20:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> a
    20:20:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    21:21:android.view.animation.Interpolator android.support.graphics.drawable.AnimationUtilsCompat.loadInterpolator(android.content.Context,int):0:0 -> a
    21:21:android.animation.Keyframe android.support.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0 -> a
    21:21:android.animation.PropertyValuesHolder android.support.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> a
    21:21:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> a
    21:21:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    22:22:android.animation.Keyframe android.support.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser):0:0 -> a
    22:22:android.animation.PropertyValuesHolder android.support.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> a
    22:22:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> a
    22:22:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    23:23:android.animation.PropertyValuesHolder android.support.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0:0 -> a
    23:23:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> a
    23:23:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    24:24:void android.support.graphics.drawable.AnimatorInflaterCompat.distributeKeyframes(android.animation.Keyframe[],float,int,int):0:0 -> a
    24:24:android.animation.PropertyValuesHolder android.support.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0 -> a
    24:24:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> a
    24:24:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    25:25:android.animation.PropertyValuesHolder android.support.graphics.drawable.AnimatorInflaterCompat.loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int):0:0 -> a
    25:25:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0 -> a
    25:25:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    26:26:android.animation.PropertyValuesHolder[] android.support.graphics.drawable.AnimatorInflaterCompat.loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet):0:0 -> a
    26:26:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0 -> a
    27:27:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float):0:0 -> a
    android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float) -> b
    android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String) -> c
    boolean isColorType(int) -> d
    1:1:int android.support.v4.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> e
    1:1:void android.support.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0 -> e
    1:1:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> e
    2:2:void android.support.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0:0 -> e
    2:2:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> e
    3:3:int android.support.graphics.drawable.AnimatorInflaterCompat.inferValueTypeFromValues(android.content.res.TypedArray,int,int):0:0 -> e
    3:3:void android.support.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0 -> e
    3:3:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> e
    4:4:void android.support.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0:0 -> e
    4:4:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> e
    5:5:int android.support.v4.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> e
    5:5:void android.support.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0 -> e
    5:5:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> e
    6:6:void android.support.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0:0 -> e
    6:6:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> e
    7:7:int android.support.v4.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> e
    7:7:void android.support.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0 -> e
    7:7:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> e
    8:8:void android.support.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0:0 -> e
    8:8:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> e
    9:9:void android.support.graphics.drawable.AnimatorInflaterCompat.setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser):0:0 -> e
    9:9:void android.support.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0 -> e
    9:9:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> e
    10:10:void android.support.graphics.drawable.AnimatorInflaterCompat.setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String):0:0 -> e
    10:10:void android.support.graphics.drawable.AnimatorInflaterCompat.setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser):0 -> e
    10:10:void android.support.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0 -> e
    10:10:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> e
    11:11:void android.support.graphics.drawable.AnimatorInflaterCompat.setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser):0:0 -> e
    11:11:void android.support.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser):0 -> e
    11:11:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> e
    12:12:int android.support.v4.content.res.TypedArrayUtils.getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> e
    12:12:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> e
    13:13:android.view.animation.Interpolator android.support.graphics.drawable.AnimationUtilsCompat.loadInterpolator(android.content.Context,int):0:0 -> e
    13:13:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0 -> e
    14:14:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser):0:0 -> e
android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator -> w.c$a:
    android.support.v4.graphics.PathParser$PathDataNode[] mNodeArray -> a
    1:1:android.support.v4.graphics.PathParser$PathDataNode[] android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator.evaluate(float,android.support.v4.graphics.PathParser$PathDataNode[],android.support.v4.graphics.PathParser$PathDataNode[]):0:0 -> evaluate
    1:1:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object):0 -> evaluate
    2:2:void android.support.v4.graphics.PathParser$PathDataNode.interpolatePathDataNode(android.support.v4.graphics.PathParser$PathDataNode,android.support.v4.graphics.PathParser$PathDataNode,float):0:0 -> evaluate
    2:2:android.support.v4.graphics.PathParser$PathDataNode[] android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator.evaluate(float,android.support.v4.graphics.PathParser$PathDataNode[],android.support.v4.graphics.PathParser$PathDataNode[]):0 -> evaluate
    2:2:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object):0 -> evaluate
    3:3:android.support.v4.graphics.PathParser$PathDataNode[] android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator.evaluate(float,android.support.v4.graphics.PathParser$PathDataNode[],android.support.v4.graphics.PathParser$PathDataNode[]):0:0 -> evaluate
    3:3:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object):0 -> evaluate
android.support.graphics.drawable.ArgbEvaluator -> w.d:
    android.support.graphics.drawable.ArgbEvaluator sInstance -> a
android.support.graphics.drawable.VectorDrawableCommon -> w.e:
    android.graphics.drawable.Drawable mDelegateDrawable -> b
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme):0:0 -> applyTheme
    1:1:void applyTheme(android.content.res.Resources$Theme):0 -> applyTheme
    1:1:android.graphics.ColorFilter android.support.v4.graphics.drawable.DrawableCompat.getColorFilter(android.graphics.drawable.Drawable):0:0 -> getColorFilter
    1:1:android.graphics.ColorFilter getColorFilter():0 -> getColorFilter
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.jumpToCurrentState(android.graphics.drawable.Drawable):0:0 -> jumpToCurrentState
    1:1:void jumpToCurrentState():0 -> jumpToCurrentState
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> setHotspot
    1:1:void setHotspot(float,float):0 -> setHotspot
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int):0:0 -> setHotspotBounds
    1:1:void setHotspotBounds(int,int,int,int):0 -> setHotspotBounds
android.support.graphics.drawable.VectorDrawableCompat -> w.f:
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> k
    android.graphics.PorterDuffColorFilter mTintFilter -> d
    android.graphics.ColorFilter mColorFilter -> e
    android.graphics.Matrix mTmpMatrix -> i
    float[] mTmpFloats -> h
    android.graphics.Rect mTmpBounds -> j
    android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState mVectorState -> c
    boolean mMutated -> f
    boolean mAllowCaching -> g
    android.support.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> b
    1:1:boolean android.support.v4.graphics.drawable.DrawableCompat.canApplyTheme(android.graphics.drawable.Drawable):0:0 -> canApplyTheme
    1:1:boolean canApplyTheme():0 -> canApplyTheme
    1:1:boolean android.support.graphics.drawable.VectorDrawableCompat.needMirroring():0:0 -> draw
    1:1:void draw(android.graphics.Canvas):0 -> draw
    2:2:int android.support.v4.graphics.drawable.DrawableCompat.getLayoutDirection(android.graphics.drawable.Drawable):0:0 -> draw
    2:2:boolean android.support.graphics.drawable.VectorDrawableCompat.needMirroring():0 -> draw
    2:2:void draw(android.graphics.Canvas):0 -> draw
    3:3:void draw(android.graphics.Canvas):0:0 -> draw
    4:4:void android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.createCachedBitmapIfNeeded(int,int):0:0 -> draw
    4:4:void draw(android.graphics.Canvas):0 -> draw
    5:5:boolean android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.canReuseBitmap(int,int):0:0 -> draw
    5:5:void android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.createCachedBitmapIfNeeded(int,int):0 -> draw
    5:5:void draw(android.graphics.Canvas):0 -> draw
    6:6:void android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.createCachedBitmapIfNeeded(int,int):0:0 -> draw
    6:6:void draw(android.graphics.Canvas):0 -> draw
    7:7:void draw(android.graphics.Canvas):0:0 -> draw
    8:8:boolean android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.canReuseCache():0:0 -> draw
    8:8:void draw(android.graphics.Canvas):0 -> draw
    9:9:void draw(android.graphics.Canvas):0:0 -> draw
    10:10:void android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.updateCacheStates():0:0 -> draw
    10:10:void draw(android.graphics.Canvas):0 -> draw
    11:11:void draw(android.graphics.Canvas):0:0 -> draw
    12:12:boolean android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.hasTranslucentRoot():0:0 -> draw
    12:12:android.graphics.Paint android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.getPaint(android.graphics.ColorFilter):0 -> draw
    12:12:void android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect):0 -> draw
    12:12:void draw(android.graphics.Canvas):0 -> draw
    13:13:android.graphics.Paint android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.getPaint(android.graphics.ColorFilter):0:0 -> draw
    13:13:void android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect):0 -> draw
    13:13:void draw(android.graphics.Canvas):0 -> draw
    14:14:void android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect):0:0 -> draw
    14:14:void draw(android.graphics.Canvas):0 -> draw
    15:15:void draw(android.graphics.Canvas):0:0 -> draw
    1:1:int android.support.v4.graphics.drawable.DrawableCompat.getAlpha(android.graphics.drawable.Drawable):0:0 -> getAlpha
    1:1:int getAlpha():0 -> getAlpha
    2:2:int getAlpha():0:0 -> getAlpha
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    1:1:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    2:2:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    3:3:void android.support.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    3:3:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    4:4:int android.support.v4.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> inflate
    4:4:void android.support.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0 -> inflate
    4:4:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    5:5:void android.support.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    5:5:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    6:6:android.graphics.PorterDuff$Mode android.support.graphics.drawable.VectorDrawableCompat.parseTintModeCompat(int,android.graphics.PorterDuff$Mode):0:0 -> inflate
    6:6:void android.support.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0 -> inflate
    6:6:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    7:7:void android.support.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    7:7:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    8:8:boolean android.support.v4.content.res.TypedArrayUtils.getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean):0:0 -> inflate
    8:8:void android.support.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0 -> inflate
    8:8:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    9:9:void android.support.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    9:9:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    10:10:float android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    10:10:void android.support.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0 -> inflate
    10:10:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    11:11:void android.support.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    11:11:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    12:12:float android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    12:12:void android.support.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0 -> inflate
    12:12:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    13:13:void android.support.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    13:13:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    14:14:float android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    14:14:void android.support.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0 -> inflate
    14:14:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    15:15:void android.support.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    15:15:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    16:16:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    17:17:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    17:17:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    18:18:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    18:18:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    18:18:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    19:19:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    19:19:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    19:19:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    19:19:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    20:20:float android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    20:20:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    20:20:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    20:20:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    20:20:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    21:21:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    21:21:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    21:21:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    21:21:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    22:22:int android.support.v4.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> inflate
    22:22:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    22:22:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    22:22:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    22:22:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    23:23:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    23:23:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    23:23:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    23:23:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    24:24:android.graphics.Paint$Cap android.support.graphics.drawable.VectorDrawableCompat$VFullPath.getStrokeLineCap(int,android.graphics.Paint$Cap):0:0 -> inflate
    24:24:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    24:24:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    24:24:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    24:24:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    25:25:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    25:25:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    25:25:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    25:25:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    26:26:int android.support.v4.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> inflate
    26:26:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    26:26:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    26:26:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    26:26:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    27:27:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    27:27:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    27:27:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    27:27:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    28:28:android.graphics.Paint$Join android.support.graphics.drawable.VectorDrawableCompat$VFullPath.getStrokeLineJoin(int,android.graphics.Paint$Join):0:0 -> inflate
    28:28:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    28:28:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    28:28:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    28:28:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    29:29:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    29:29:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    29:29:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    29:29:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    30:30:float android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    30:30:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    30:30:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    30:30:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    30:30:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    31:31:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    31:31:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    31:31:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    31:31:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    32:32:float android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    32:32:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    32:32:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    32:32:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    32:32:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    33:33:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    33:33:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    33:33:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    33:33:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    34:34:float android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    34:34:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    34:34:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    34:34:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    34:34:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    35:35:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    35:35:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    35:35:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    35:35:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    36:36:float android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    36:36:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    36:36:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    36:36:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    36:36:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    37:37:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    37:37:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    37:37:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    37:37:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    38:38:float android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    38:38:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    38:38:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    38:38:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    38:38:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    39:39:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    39:39:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    39:39:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    39:39:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    40:40:float android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    40:40:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    40:40:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    40:40:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    40:40:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    41:41:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    41:41:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    41:41:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    41:41:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    42:42:int android.support.v4.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> inflate
    42:42:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0 -> inflate
    42:42:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    42:42:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    42:42:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    43:43:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> inflate
    43:43:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    43:43:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    43:43:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    44:44:void android.support.graphics.drawable.VectorDrawableCompat$VFullPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    44:44:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    44:44:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    45:45:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    45:45:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    46:46:void android.support.graphics.drawable.VectorDrawableCompat$VClipPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    46:46:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    46:46:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    47:47:void android.support.graphics.drawable.VectorDrawableCompat$VClipPath.updateStateFromTypedArray(android.content.res.TypedArray):0:0 -> inflate
    47:47:void android.support.graphics.drawable.VectorDrawableCompat$VClipPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    47:47:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    47:47:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    48:48:void android.support.graphics.drawable.VectorDrawableCompat$VClipPath.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    48:48:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    48:48:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    49:49:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    49:49:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    50:50:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    50:50:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    50:50:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    51:51:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    51:51:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    51:51:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    51:51:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    52:52:float android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    52:52:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0 -> inflate
    52:52:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    52:52:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    52:52:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    53:53:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    53:53:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    53:53:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    53:53:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    54:54:float android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    54:54:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0 -> inflate
    54:54:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    54:54:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    54:54:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    55:55:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    55:55:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    55:55:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    55:55:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    56:56:float android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    56:56:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0 -> inflate
    56:56:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    56:56:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    56:56:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    57:57:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    57:57:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    57:57:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    57:57:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    58:58:float android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    58:58:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0 -> inflate
    58:58:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    58:58:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    58:58:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    59:59:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    59:59:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    59:59:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    59:59:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    60:60:float android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> inflate
    60:60:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0 -> inflate
    60:60:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    60:60:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    60:60:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    61:61:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    61:61:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0 -> inflate
    61:61:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    61:61:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    62:62:void android.support.graphics.drawable.VectorDrawableCompat$VGroup.inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    62:62:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    62:62:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    63:63:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    63:63:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    64:64:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    65:65:void android.support.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> inflate
    65:65:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    66:66:void android.support.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser):0:0 -> inflate
    66:66:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> inflate
    1:1:boolean android.support.v4.graphics.drawable.DrawableCompat.isAutoMirrored(android.graphics.drawable.Drawable):0:0 -> isAutoMirrored
    1:1:boolean isAutoMirrored():0 -> isAutoMirrored
    2:2:boolean isAutoMirrored():0:0 -> isAutoMirrored
    1:1:boolean android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.onStateChanged(int[]):0:0 -> onStateChange
    1:1:boolean onStateChange(int[]):0 -> onStateChange
    2:2:boolean android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.onStateChanged(int[]):0:0 -> onStateChange
    2:2:boolean android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.onStateChanged(int[]):0 -> onStateChange
    2:2:boolean onStateChange(int[]):0 -> onStateChange
    3:3:boolean android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.onStateChanged(int[]):0:0 -> onStateChange
    3:3:boolean onStateChange(int[]):0 -> onStateChange
    4:4:boolean onStateChange(int[]):0:0 -> onStateChange
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setAutoMirrored(android.graphics.drawable.Drawable,boolean):0:0 -> setAutoMirrored
    1:1:void setAutoMirrored(boolean):0 -> setAutoMirrored
    2:2:void setAutoMirrored(boolean):0:0 -> setAutoMirrored
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setTint(android.graphics.drawable.Drawable,int):0:0 -> setTint
    1:1:void setTint(int):0 -> setTint
    2:2:void setTint(int):0:0 -> setTint
android.support.graphics.drawable.VectorDrawableCompat$1 -> w.f$a:
android.support.graphics.drawable.VectorDrawableCompat$VClipPath -> w.f$b:
android.support.graphics.drawable.VectorDrawableCompat$VFullPath -> w.f$c:
    float mTrimPathEnd -> l
    float mTrimPathStart -> k
    float mFillAlpha -> j
    android.graphics.Paint$Cap mStrokeLineCap -> n
    float mStrokeAlpha -> h
    float mStrokeWidth -> f
    int mFillRule -> i
    android.support.v4.content.res.ComplexColorCompat mFillColor -> g
    android.support.v4.content.res.ComplexColorCompat mStrokeColor -> e
    android.graphics.Paint$Join mStrokeLineJoin -> o
    int[] mThemeAttrs -> d
    float mStrokeMiterlimit -> p
    float mTrimPathOffset -> m
    boolean isStateful() -> a
    boolean onStateChanged(int[]) -> b
    1:1:int android.support.v4.content.res.ComplexColorCompat.getColor():0:0 -> getFillColor
    1:1:int getFillColor():0 -> getFillColor
    1:1:int android.support.v4.content.res.ComplexColorCompat.getColor():0:0 -> getStrokeColor
    1:1:int getStrokeColor():0 -> getStrokeColor
    1:1:void android.support.v4.content.res.ComplexColorCompat.setColor(int):0:0 -> setFillColor
    1:1:void setFillColor(int):0 -> setFillColor
    1:1:void android.support.v4.content.res.ComplexColorCompat.setColor(int):0:0 -> setStrokeColor
    1:1:void setStrokeColor(int):0 -> setStrokeColor
android.support.graphics.drawable.VectorDrawableCompat$VGroup -> w.f$d:
    android.graphics.Matrix mLocalMatrix -> j
    float mTranslateY -> i
    float mTranslateX -> h
    float mScaleY -> g
    int mChangingConfigurations -> k
    float mScaleX -> f
    java.lang.String mGroupName -> m
    float mPivotY -> e
    float mPivotX -> d
    float mRotate -> c
    java.util.ArrayList mChildren -> b
    android.graphics.Matrix mStackedMatrix -> a
    int[] mThemeAttrs -> l
    boolean isStateful() -> a
    boolean onStateChanged(int[]) -> b
    void updateLocalMatrix() -> c
android.support.graphics.drawable.VectorDrawableCompat$VObject -> w.f$e:
    1:1:void android.support.graphics.drawable.VectorDrawableCompat$VObject.<init>():0:0 -> <init>
    1:1:void <init>(android.support.graphics.drawable.VectorDrawableCompat$1):0 -> <init>
    boolean isStateful() -> a
    boolean onStateChanged(int[]) -> b
android.support.graphics.drawable.VectorDrawableCompat$VPath -> w.f$f:
    android.support.v4.graphics.PathParser$PathDataNode[] mNodes -> a
    java.lang.String mPathName -> b
    int mChangingConfigurations -> c
    1:1:void android.support.v4.graphics.PathParser.updateNodes(android.support.v4.graphics.PathParser$PathDataNode[],android.support.v4.graphics.PathParser$PathDataNode[]):0:0 -> setPathData
    1:1:void setPathData(android.support.v4.graphics.PathParser$PathDataNode[]):0 -> setPathData
android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer -> w.f$g:
    android.graphics.Path mPath -> a
    float mViewportHeight -> l
    float mViewportWidth -> k
    float mBaseHeight -> j
    float mBaseWidth -> i
    int mRootAlpha -> m
    android.support.v4.util.ArrayMap mVGTargetsMap -> p
    java.lang.Boolean mIsStateful -> o
    int mChangingConfigurations -> g
    java.lang.String mRootName -> n
    android.support.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup -> h
    android.graphics.Matrix IDENTITY_MATRIX -> q
    android.graphics.Path mRenderPath -> b
    android.graphics.PathMeasure mPathMeasure -> f
    android.graphics.Paint mFillPaint -> e
    android.graphics.Paint mStrokePaint -> d
    android.graphics.Matrix mFinalPathMatrix -> c
    1:1:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    1:1:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    2:2:float android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.getMatrixScale(android.graphics.Matrix):0:0 -> a
    2:2:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    2:2:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    3:3:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    3:3:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    4:4:void android.support.graphics.drawable.VectorDrawableCompat$VPath.toPath(android.graphics.Path):0:0 -> a
    4:4:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    4:4:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    5:5:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    5:5:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    6:6:boolean android.support.graphics.drawable.VectorDrawableCompat$VPath.isClipPath():0:0 -> a
    6:6:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    6:6:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    7:7:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    7:7:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    8:8:boolean android.support.v4.content.res.ComplexColorCompat.willDraw():0:0 -> a
    8:8:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    8:8:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    9:9:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    9:9:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    10:10:android.graphics.Shader android.support.v4.content.res.ComplexColorCompat.getShader():0:0 -> a
    10:10:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    10:10:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    11:11:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    11:11:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    12:12:int android.support.v4.content.res.ComplexColorCompat.getColor():0:0 -> a
    12:12:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    12:12:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    13:13:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    13:13:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    14:14:int android.support.graphics.drawable.VectorDrawableCompat.applyAlpha(int,float):0:0 -> a
    14:14:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    14:14:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    15:15:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    15:15:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    16:16:boolean android.support.v4.content.res.ComplexColorCompat.willDraw():0:0 -> a
    16:16:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    16:16:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    17:17:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    17:17:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    18:18:android.graphics.Shader android.support.v4.content.res.ComplexColorCompat.getShader():0:0 -> a
    18:18:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    18:18:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    19:19:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    19:19:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    20:20:int android.support.v4.content.res.ComplexColorCompat.getColor():0:0 -> a
    20:20:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    20:20:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    21:21:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    21:21:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    22:22:int android.support.graphics.drawable.VectorDrawableCompat.applyAlpha(int,float):0:0 -> a
    22:22:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    22:22:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    23:23:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
    23:23:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0 -> a
    24:24:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> a
android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> w.f$h:
    android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer -> b
    android.content.res.ColorStateList mTint -> c
    boolean mCachedAutoMirrored -> j
    android.graphics.PorterDuff$Mode mCachedTintMode -> h
    boolean mCacheDirty -> k
    int mCachedRootAlpha -> i
    boolean mAutoMirrored -> e
    android.graphics.Bitmap mCachedBitmap -> f
    android.content.res.ColorStateList mCachedTint -> g
    android.graphics.PorterDuff$Mode mTintMode -> d
    android.graphics.Paint mTempPaint -> l
    int mChangingConfigurations -> a
    1:1:boolean android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.isStateful():0:0 -> a
    1:1:boolean isStateful():0 -> a
    1:1:void android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer.draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter):0:0 -> b
    1:1:void updateCachedBitmap(int,int):0 -> b
android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> w.f$i:
    android.graphics.drawable.Drawable$ConstantState mDelegateState -> a
android.support.transition.AutoTransition -> x.a:
    1:1:void android.support.transition.AutoTransition.init():0:0 -> <init>
    1:1:void <init>():0 -> <init>
android.support.transition.ChangeBounds -> x.b:
    android.util.Property POSITION_PROPERTY -> C
    android.util.Property TOP_LEFT_PROPERTY -> y
    java.lang.String[] sTransitionProperties -> x
    android.util.Property BOTTOM_RIGHT_PROPERTY -> z
    android.util.Property BOTTOM_RIGHT_ONLY_PROPERTY -> A
    android.util.Property TOP_LEFT_ONLY_PROPERTY -> B
    1:1:boolean android.support.v4.view.ViewCompat.isLaidOut(android.view.View):0:0 -> H
    1:1:void captureValues(android.support.transition.TransitionValues):0 -> H
    2:2:void captureValues(android.support.transition.TransitionValues):0:0 -> H
    void captureEndValues(android.support.transition.TransitionValues) -> d
    void captureStartValues(android.support.transition.TransitionValues) -> g
    1:1:android.support.transition.PathMotion android.support.transition.Transition.getPathMotion():0:0 -> k
    1:1:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0 -> k
    2:2:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0:0 -> k
    3:3:android.support.transition.PathMotion android.support.transition.Transition.getPathMotion():0:0 -> k
    3:3:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0 -> k
    4:4:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0:0 -> k
    5:5:android.support.transition.PathMotion android.support.transition.Transition.getPathMotion():0:0 -> k
    5:5:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0 -> k
    6:6:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0:0 -> k
    7:7:android.support.transition.PathMotion android.support.transition.Transition.getPathMotion():0:0 -> k
    7:7:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0 -> k
    8:8:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0:0 -> k
    9:9:android.support.transition.PathMotion android.support.transition.Transition.getPathMotion():0:0 -> k
    9:9:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0 -> k
    10:10:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0:0 -> k
    java.lang.String[] getTransitionProperties() -> p
android.support.transition.ChangeBounds$1 -> x.b$a:
    android.graphics.Rect mBounds -> a
    1:1:android.graphics.PointF android.support.transition.ChangeBounds$1.get(android.graphics.drawable.Drawable):0:0 -> get
    1:1:java.lang.Object get(java.lang.Object):0 -> get
    1:1:void android.support.transition.ChangeBounds$1.set(android.graphics.drawable.Drawable,android.graphics.PointF):0:0 -> set
    1:1:void set(java.lang.Object,java.lang.Object):0 -> set
android.support.transition.ChangeBounds$2 -> x.b$b:
    1:1:void android.support.transition.ChangeBounds$2.set(android.support.transition.ChangeBounds$ViewBounds,android.graphics.PointF):0:0 -> set
    1:1:void set(java.lang.Object,java.lang.Object):0 -> set
    2:2:void android.support.transition.ChangeBounds$ViewBounds.setTopLeft(android.graphics.PointF):0:0 -> set
    2:2:void android.support.transition.ChangeBounds$2.set(android.support.transition.ChangeBounds$ViewBounds,android.graphics.PointF):0 -> set
    2:2:void set(java.lang.Object,java.lang.Object):0 -> set
    3:3:void android.support.transition.ChangeBounds$ViewBounds.setLeftTopRightBottom():0:0 -> set
    3:3:void android.support.transition.ChangeBounds$ViewBounds.setTopLeft(android.graphics.PointF):0 -> set
    3:3:void android.support.transition.ChangeBounds$2.set(android.support.transition.ChangeBounds$ViewBounds,android.graphics.PointF):0 -> set
    3:3:void set(java.lang.Object,java.lang.Object):0 -> set
android.support.transition.ChangeBounds$3 -> x.b$c:
    1:1:void android.support.transition.ChangeBounds$3.set(android.support.transition.ChangeBounds$ViewBounds,android.graphics.PointF):0:0 -> set
    1:1:void set(java.lang.Object,java.lang.Object):0 -> set
    2:2:void android.support.transition.ChangeBounds$ViewBounds.setBottomRight(android.graphics.PointF):0:0 -> set
    2:2:void android.support.transition.ChangeBounds$3.set(android.support.transition.ChangeBounds$ViewBounds,android.graphics.PointF):0 -> set
    2:2:void set(java.lang.Object,java.lang.Object):0 -> set
    3:3:void android.support.transition.ChangeBounds$ViewBounds.setLeftTopRightBottom():0:0 -> set
    3:3:void android.support.transition.ChangeBounds$ViewBounds.setBottomRight(android.graphics.PointF):0 -> set
    3:3:void android.support.transition.ChangeBounds$3.set(android.support.transition.ChangeBounds$ViewBounds,android.graphics.PointF):0 -> set
    3:3:void set(java.lang.Object,java.lang.Object):0 -> set
android.support.transition.ChangeBounds$4 -> x.b$d:
    1:1:void android.support.transition.ChangeBounds$4.set(android.view.View,android.graphics.PointF):0:0 -> set
    1:1:void set(java.lang.Object,java.lang.Object):0 -> set
android.support.transition.ChangeBounds$5 -> x.b$e:
    1:1:void android.support.transition.ChangeBounds$5.set(android.view.View,android.graphics.PointF):0:0 -> set
    1:1:void set(java.lang.Object,java.lang.Object):0 -> set
android.support.transition.ChangeBounds$6 -> x.b$f:
    1:1:void android.support.transition.ChangeBounds$6.set(android.view.View,android.graphics.PointF):0:0 -> set
    1:1:void set(java.lang.Object,java.lang.Object):0 -> set
android.support.transition.ChangeBounds$7 -> x.b$g:
android.support.transition.ChangeBounds$9 -> x.b$h:
    android.view.ViewGroup val$parent -> a
    void onTransitionResume(android.support.transition.Transition) -> b
    void onTransitionEnd(android.support.transition.Transition) -> c
    void onTransitionPause(android.support.transition.Transition) -> d
android.support.transition.ChangeBounds$ViewBounds -> x.b$i:
    int mTopLeftCalls -> f
    int mBottomRightCalls -> g
    int mBottom -> d
    int mTop -> b
    android.view.View mView -> e
    int mRight -> c
    int mLeft -> a
android.support.transition.Fade -> x.c:
    1:1:void android.support.transition.Visibility.setMode(int):0:0 -> <init>
    1:1:void <init>(int):0 -> <init>
    1:1:void android.support.transition.ViewUtils.saveNonTransitionAlpha(android.view.View):0:0 -> J
    1:1:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0 -> J
    2:2:float android.support.transition.Fade.getStartAlpha(android.support.transition.TransitionValues,float):0:0 -> J
    2:2:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0 -> J
    3:3:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0:0 -> J
    1:1:void android.support.transition.ViewUtils.setTransitionAlpha(android.view.View,float):0:0 -> K
    1:1:android.animation.Animator createAnimation(android.view.View,float,float):0 -> K
    2:2:android.animation.Animator createAnimation(android.view.View,float,float):0:0 -> K
    1:1:void android.support.transition.Visibility.captureStartValues(android.support.transition.TransitionValues):0:0 -> g
    1:1:void captureStartValues(android.support.transition.TransitionValues):0 -> g
    2:2:void captureStartValues(android.support.transition.TransitionValues):0:0 -> g
android.support.transition.Fade$1 -> x.c$a:
    android.view.View val$view -> a
    1:1:void android.support.transition.ViewUtils.setTransitionAlpha(android.view.View,float):0:0 -> c
    1:1:void onTransitionEnd(android.support.transition.Transition):0 -> c
    2:2:void onTransitionEnd(android.support.transition.Transition):0:0 -> c
    3:3:void android.support.transition.ViewUtils.clearNonTransitionAlpha(android.view.View):0:0 -> c
    3:3:void onTransitionEnd(android.support.transition.Transition):0 -> c
    4:4:void onTransitionEnd(android.support.transition.Transition):0:0 -> c
android.support.transition.Fade$FadeAnimatorListener -> x.c$b:
    android.view.View mView -> a
    boolean mLayerTypeChanged -> b
    1:1:void android.support.transition.ViewUtils.setTransitionAlpha(android.view.View,float):0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
    2:2:void onAnimationEnd(android.animation.Animator):0:0 -> onAnimationEnd
    1:1:boolean android.support.v4.view.ViewCompat.hasOverlappingRendering(android.view.View):0:0 -> onAnimationStart
    1:1:void onAnimationStart(android.animation.Animator):0 -> onAnimationStart
    2:2:void onAnimationStart(android.animation.Animator):0:0 -> onAnimationStart
android.support.transition.FragmentTransitionSupport -> x.d:
    void addTarget(java.lang.Object,android.view.View) -> a
    1:1:int android.support.transition.TransitionSet.getTransitionCount():0:0 -> b
    1:1:void addTargets(java.lang.Object,java.util.ArrayList):0 -> b
    2:2:void addTargets(java.lang.Object,java.util.ArrayList):0:0 -> b
    3:3:java.util.List android.support.transition.Transition.getTargets():0:0 -> b
    3:3:void addTargets(java.lang.Object,java.util.ArrayList):0 -> b
    4:4:void addTargets(java.lang.Object,java.util.ArrayList):0:0 -> b
    1:1:void android.support.transition.TransitionManager.beginDelayedTransition(android.view.ViewGroup,android.support.transition.Transition):0:0 -> c
    1:1:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object):0 -> c
    2:2:boolean android.support.v4.view.ViewCompat.isLaidOut(android.view.View):0:0 -> c
    2:2:void android.support.transition.TransitionManager.beginDelayedTransition(android.view.ViewGroup,android.support.transition.Transition):0 -> c
    2:2:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object):0 -> c
    3:3:void android.support.transition.TransitionManager.beginDelayedTransition(android.view.ViewGroup,android.support.transition.Transition):0:0 -> c
    3:3:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object):0 -> c
    4:4:void android.support.transition.TransitionManager.sceneChangeSetup(android.view.ViewGroup,android.support.transition.Transition):0:0 -> c
    4:4:void android.support.transition.TransitionManager.beginDelayedTransition(android.view.ViewGroup,android.support.transition.Transition):0 -> c
    4:4:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object):0 -> c
    5:5:android.support.transition.Scene android.support.transition.Scene.getCurrentScene(android.view.View):0:0 -> c
    5:5:void android.support.transition.TransitionManager.sceneChangeSetup(android.view.ViewGroup,android.support.transition.Transition):0 -> c
    5:5:void android.support.transition.TransitionManager.beginDelayedTransition(android.view.ViewGroup,android.support.transition.Transition):0 -> c
    5:5:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object):0 -> c
    6:6:void android.support.transition.Scene.setCurrentScene(android.view.View,android.support.transition.Scene):0:0 -> c
    6:6:void android.support.transition.TransitionManager.beginDelayedTransition(android.view.ViewGroup,android.support.transition.Transition):0 -> c
    6:6:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object):0 -> c
    7:7:void android.support.transition.TransitionManager.sceneChangeRunTransition(android.view.ViewGroup,android.support.transition.Transition):0:0 -> c
    7:7:void android.support.transition.TransitionManager.beginDelayedTransition(android.view.ViewGroup,android.support.transition.Transition):0 -> c
    7:7:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object):0 -> c
    8:8:android.support.transition.Scene android.support.transition.Scene.getCurrentScene(android.view.View):0:0 -> c
    8:8:void android.support.transition.Scene.exit():0 -> c
    8:8:void android.support.transition.TransitionManager.sceneChangeSetup(android.view.ViewGroup,android.support.transition.Transition):0 -> c
    8:8:void android.support.transition.TransitionManager.beginDelayedTransition(android.view.ViewGroup,android.support.transition.Transition):0 -> c
    8:8:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object):0 -> c
    boolean canHandle(java.lang.Object) -> e
    java.lang.Object cloneTransition(java.lang.Object) -> f
    java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> k
    void removeTarget(java.lang.Object,android.view.View) -> l
    1:1:int android.support.transition.TransitionSet.getTransitionCount():0:0 -> m
    1:1:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList):0 -> m
    2:2:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList):0:0 -> m
    3:3:java.util.List android.support.transition.Transition.getTargets():0:0 -> m
    3:3:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList):0 -> m
    4:4:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList):0:0 -> m
    void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> n
    void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> o
    void setEpicenter(java.lang.Object,android.graphics.Rect) -> p
    void setEpicenter(java.lang.Object,android.view.View) -> q
    1:1:java.util.List android.support.transition.Transition.getTargets():0:0 -> r
    1:1:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList):0 -> r
    2:2:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList):0:0 -> r
    1:1:java.util.List android.support.transition.Transition.getTargets():0:0 -> s
    1:1:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList):0 -> s
    2:2:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList):0:0 -> s
    3:3:java.util.List android.support.transition.Transition.getTargets():0:0 -> s
    3:3:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList):0 -> s
    4:4:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList):0:0 -> s
    java.lang.Object wrapTransitionInSet(java.lang.Object) -> t
    1:1:java.util.List android.support.transition.Transition.getTargetIds():0:0 -> u
    1:1:boolean hasSimpleTarget(android.support.transition.Transition):0 -> u
    2:2:boolean hasSimpleTarget(android.support.transition.Transition):0:0 -> u
android.support.transition.FragmentTransitionSupport$1 -> x.d$a:
android.support.transition.FragmentTransitionSupport$2 -> x.d$b:
    android.view.View val$fragmentView -> a
    java.util.ArrayList val$exitingViews -> b
    void onTransitionStart(android.support.transition.Transition) -> a
    void onTransitionResume(android.support.transition.Transition) -> b
    void onTransitionEnd(android.support.transition.Transition) -> c
    void onTransitionPause(android.support.transition.Transition) -> d
android.support.transition.FragmentTransitionSupport$3 -> x.d$c:
    android.support.transition.FragmentTransitionSupport this$0 -> g
    java.lang.Object val$sharedElementTransition -> e
    java.lang.Object val$exitTransition -> c
    java.util.ArrayList val$sharedElementsIn -> f
    java.lang.Object val$enterTransition -> a
    java.util.ArrayList val$exitingViews -> d
    java.util.ArrayList val$enteringViews -> b
    void onTransitionStart(android.support.transition.Transition) -> a
    void onTransitionResume(android.support.transition.Transition) -> b
    void onTransitionEnd(android.support.transition.Transition) -> c
    void onTransitionPause(android.support.transition.Transition) -> d
android.support.transition.FragmentTransitionSupport$4 -> x.d$d:
android.support.transition.ObjectAnimatorUtils -> x.e:
    android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path) -> a
android.support.transition.Scene -> x.f:
android.support.transition.Transition -> x.g:
    int mNumInstances -> n
    android.support.transition.PathMotion mPathMotion -> t
    boolean mPaused -> o
    boolean mEnded -> p
    android.support.transition.PathMotion STRAIGHT_PATH_MOTION -> v
    android.animation.TimeInterpolator mInterpolator -> d
    int[] DEFAULT_MATCH_ORDER -> u
    long mStartDelay -> b
    java.util.ArrayList mTargets -> f
    java.util.ArrayList mTargetIds -> e
    long mDuration -> c
    android.support.transition.TransitionValuesMaps mStartValues -> g
    android.support.transition.TransitionValuesMaps mEndValues -> h
    android.support.transition.TransitionSet mParent -> i
    java.util.ArrayList mCurrentAnimators -> m
    java.util.ArrayList mEndValuesList -> l
    java.util.ArrayList mStartValuesList -> k
    android.support.transition.Transition$EpicenterCallback mEpicenterCallback -> s
    java.lang.ThreadLocal sRunningAnimators -> w
    java.lang.String mName -> a
    int[] mMatchOrder -> j
    java.util.ArrayList mAnimators -> r
    java.util.ArrayList mListeners -> q
    void setEpicenterCallback(android.support.transition.Transition$EpicenterCallback) -> A
    android.support.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> B
    void setPathMotion(android.support.transition.PathMotion) -> C
    void setPropagation(android.support.transition.TransitionPropagation) -> D
    android.support.transition.Transition setStartDelay(long) -> E
    void start() -> F
    java.lang.String toString(java.lang.String) -> G
    android.support.transition.Transition addListener(android.support.transition.Transition$TransitionListener) -> a
    android.support.transition.Transition addTarget(android.view.View) -> b
    1:1:java.lang.String android.support.v4.view.ViewCompat.getTransitionName(android.view.View):0:0 -> c
    1:1:void addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues):0 -> c
    2:2:void addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues):0:0 -> c
    3:3:boolean android.support.v4.util.SimpleArrayMap.containsKey(java.lang.Object):0:0 -> c
    3:3:void addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues):0 -> c
    4:4:void addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues):0:0 -> c
    5:5:int android.support.v4.util.LongSparseArray.indexOfKey(long):0:0 -> c
    5:5:void addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues):0 -> c
    6:6:void addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues):0:0 -> c
    7:7:void android.support.v4.view.ViewCompat.setHasTransientState(android.view.View,boolean):0:0 -> c
    7:7:void addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues):0 -> c
    8:8:void addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues):0:0 -> c
    9:9:void android.support.v4.view.ViewCompat.setHasTransientState(android.view.View,boolean):0:0 -> c
    9:9:void addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues):0 -> c
    10:10:void addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues):0:0 -> c
    void captureEndValues(android.support.transition.TransitionValues) -> d
    void captureHierarchy(android.view.View,boolean) -> e
    void capturePropagationValues(android.support.transition.TransitionValues) -> f
    void captureStartValues(android.support.transition.TransitionValues) -> g
    void captureValues(android.view.ViewGroup,boolean) -> h
    void clearValues(boolean) -> i
    android.support.transition.Transition clone() -> j
    android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> k
    1:1:int android.support.v4.util.SimpleArrayMap.size():0:0 -> l
    1:1:void createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList):0 -> l
    2:2:void createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList):0:0 -> l
    3:3:java.lang.String android.support.transition.Transition.getName():0:0 -> l
    3:3:void createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList):0 -> l
    4:4:void createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList):0:0 -> l
    5:5:java.lang.String android.support.transition.Transition.getName():0:0 -> l
    5:5:void createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList):0 -> l
    6:6:void createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList):0:0 -> l
    7:7:android.support.transition.WindowIdImpl android.support.transition.ViewUtils.getWindowId(android.view.View):0:0 -> l
    7:7:void createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList):0 -> l
    8:8:void createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList):0:0 -> l
    1:1:void android.support.v4.view.ViewCompat.setHasTransientState(android.view.View,boolean):0:0 -> m
    1:1:void end():0 -> m
    2:2:void end():0:0 -> m
    3:3:void android.support.v4.view.ViewCompat.setHasTransientState(android.view.View,boolean):0:0 -> m
    3:3:void end():0 -> m
    4:4:void end():0:0 -> m
    android.support.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean) -> n
    android.support.v4.util.ArrayMap getRunningAnimators() -> o
    java.lang.String[] getTransitionProperties() -> p
    android.support.transition.TransitionValues getTransitionValues(android.view.View,boolean) -> q
    boolean isTransitionRequired(android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> r
    boolean isValidTarget(android.view.View) -> s
    boolean isValueChanged(android.support.transition.TransitionValues,android.support.transition.TransitionValues,java.lang.String) -> t
    1:1:int android.support.v4.util.SimpleArrayMap.size():0:0 -> u
    1:1:void pause(android.view.View):0 -> u
    2:2:void pause(android.view.View):0:0 -> u
    3:3:void android.support.transition.WindowIdApi18.<init>(android.view.View):0:0 -> u
    3:3:android.support.transition.WindowIdImpl android.support.transition.ViewUtils.getWindowId(android.view.View):0 -> u
    3:3:void pause(android.view.View):0 -> u
    4:4:void pause(android.view.View):0:0 -> u
    5:5:boolean android.support.transition.WindowIdApi18.equals(java.lang.Object):0:0 -> u
    5:5:void pause(android.view.View):0 -> u
    6:6:void pause(android.view.View):0:0 -> u
    7:7:void android.support.transition.AnimatorUtils.pause(android.animation.Animator):0:0 -> u
    7:7:void pause(android.view.View):0 -> u
    8:8:void pause(android.view.View):0:0 -> u
    android.support.transition.Transition removeListener(android.support.transition.Transition$TransitionListener) -> v
    android.support.transition.Transition removeTarget(android.view.View) -> w
    1:1:int android.support.v4.util.SimpleArrayMap.size():0:0 -> x
    1:1:void resume(android.view.View):0 -> x
    2:2:void resume(android.view.View):0:0 -> x
    3:3:void android.support.transition.WindowIdApi18.<init>(android.view.View):0:0 -> x
    3:3:android.support.transition.WindowIdImpl android.support.transition.ViewUtils.getWindowId(android.view.View):0 -> x
    3:3:void resume(android.view.View):0 -> x
    4:4:void resume(android.view.View):0:0 -> x
    5:5:boolean android.support.transition.WindowIdApi18.equals(java.lang.Object):0:0 -> x
    5:5:void resume(android.view.View):0 -> x
    6:6:void resume(android.view.View):0:0 -> x
    7:7:void android.support.transition.AnimatorUtils.resume(android.animation.Animator):0:0 -> x
    7:7:void resume(android.view.View):0 -> x
    8:8:void resume(android.view.View):0:0 -> x
    1:1:void android.support.transition.Transition.runAnimator(android.animation.Animator,android.support.v4.util.ArrayMap):0:0 -> y
    1:1:void runAnimators():0 -> y
    2:2:long android.support.transition.Transition.getDuration():0:0 -> y
    2:2:void android.support.transition.Transition.animate(android.animation.Animator):0 -> y
    2:2:void android.support.transition.Transition.runAnimator(android.animation.Animator,android.support.v4.util.ArrayMap):0 -> y
    2:2:void runAnimators():0 -> y
    3:3:void android.support.transition.Transition.animate(android.animation.Animator):0:0 -> y
    3:3:void android.support.transition.Transition.runAnimator(android.animation.Animator,android.support.v4.util.ArrayMap):0 -> y
    3:3:void runAnimators():0 -> y
    4:4:long android.support.transition.Transition.getStartDelay():0:0 -> y
    4:4:void android.support.transition.Transition.animate(android.animation.Animator):0 -> y
    4:4:void android.support.transition.Transition.runAnimator(android.animation.Animator,android.support.v4.util.ArrayMap):0 -> y
    4:4:void runAnimators():0 -> y
    5:5:void android.support.transition.Transition.animate(android.animation.Animator):0:0 -> y
    5:5:void android.support.transition.Transition.runAnimator(android.animation.Animator,android.support.v4.util.ArrayMap):0 -> y
    5:5:void runAnimators():0 -> y
    6:6:android.animation.TimeInterpolator android.support.transition.Transition.getInterpolator():0:0 -> y
    6:6:void android.support.transition.Transition.animate(android.animation.Animator):0 -> y
    6:6:void android.support.transition.Transition.runAnimator(android.animation.Animator,android.support.v4.util.ArrayMap):0 -> y
    6:6:void runAnimators():0 -> y
    7:7:void android.support.transition.Transition.animate(android.animation.Animator):0:0 -> y
    7:7:void android.support.transition.Transition.runAnimator(android.animation.Animator,android.support.v4.util.ArrayMap):0 -> y
    7:7:void runAnimators():0 -> y
    8:8:void runAnimators():0:0 -> y
    android.support.transition.Transition setDuration(long) -> z
android.support.transition.Transition$1 -> x.g$a:
    android.graphics.Path getPath(float,float,float,float) -> b
android.support.transition.Transition$2 -> x.h:
    android.support.v4.util.ArrayMap val$runningAnimators -> a
    android.support.transition.Transition this$0 -> b
android.support.transition.Transition$3 -> x.i:
    android.support.transition.Transition this$0 -> a
android.support.transition.Transition$AnimationInfo -> x.g$b:
    android.support.transition.WindowIdImpl mWindowId -> d
    android.view.View mView -> a
    android.support.transition.TransitionValues mValues -> c
    java.lang.String mName -> b
    android.support.transition.Transition mTransition -> e
android.support.transition.Transition$EpicenterCallback -> x.g$c:
android.support.transition.Transition$TransitionListener -> x.g$d:
    void onTransitionStart(android.support.transition.Transition) -> a
    void onTransitionResume(android.support.transition.Transition) -> b
    void onTransitionEnd(android.support.transition.Transition) -> c
    void onTransitionPause(android.support.transition.Transition) -> d
android.support.transition.TransitionListenerAdapter -> x.j:
    void onTransitionStart(android.support.transition.Transition) -> a
    void onTransitionResume(android.support.transition.Transition) -> b
    void onTransitionPause(android.support.transition.Transition) -> d
android.support.transition.TransitionManager -> x.k:
    java.lang.ThreadLocal sRunningTransitions -> b
    android.support.transition.Transition sDefaultTransition -> a
    java.util.ArrayList sPendingTransitions -> c
    android.support.v4.util.ArrayMap getRunningTransitions() -> a
android.support.transition.TransitionManager$MultiListener -> x.k$a:
    android.view.ViewGroup mSceneRoot -> c
    android.support.transition.Transition mTransition -> b
    1:1:void android.support.transition.TransitionManager$MultiListener.removeListeners():0:0 -> onPreDraw
    1:1:boolean onPreDraw():0 -> onPreDraw
    2:2:boolean onPreDraw():0:0 -> onPreDraw
    3:3:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0:0 -> onPreDraw
    3:3:boolean onPreDraw():0 -> onPreDraw
    4:4:void android.support.transition.Transition.matchStartAndEnd(android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps):0:0 -> onPreDraw
    4:4:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0 -> onPreDraw
    4:4:boolean onPreDraw():0 -> onPreDraw
    5:5:void android.support.transition.Transition.matchItemIds(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap,android.support.v4.util.LongSparseArray,android.support.v4.util.LongSparseArray):0:0 -> onPreDraw
    5:5:void android.support.transition.Transition.matchStartAndEnd(android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps):0 -> onPreDraw
    5:5:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0 -> onPreDraw
    5:5:boolean onPreDraw():0 -> onPreDraw
    6:6:long android.support.v4.util.LongSparseArray.keyAt(int):0:0 -> onPreDraw
    6:6:void android.support.transition.Transition.matchItemIds(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap,android.support.v4.util.LongSparseArray,android.support.v4.util.LongSparseArray):0 -> onPreDraw
    6:6:void android.support.transition.Transition.matchStartAndEnd(android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps):0 -> onPreDraw
    6:6:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0 -> onPreDraw
    6:6:boolean onPreDraw():0 -> onPreDraw
    7:7:void android.support.transition.Transition.matchItemIds(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap,android.support.v4.util.LongSparseArray,android.support.v4.util.LongSparseArray):0:0 -> onPreDraw
    7:7:void android.support.transition.Transition.matchStartAndEnd(android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps):0 -> onPreDraw
    7:7:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0 -> onPreDraw
    7:7:boolean onPreDraw():0 -> onPreDraw
    8:8:void android.support.transition.Transition.matchStartAndEnd(android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps):0:0 -> onPreDraw
    8:8:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0 -> onPreDraw
    8:8:boolean onPreDraw():0 -> onPreDraw
    9:9:void android.support.transition.Transition.matchIds(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap,android.util.SparseArray,android.util.SparseArray):0:0 -> onPreDraw
    9:9:void android.support.transition.Transition.matchStartAndEnd(android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps):0 -> onPreDraw
    9:9:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0 -> onPreDraw
    9:9:boolean onPreDraw():0 -> onPreDraw
    10:10:void android.support.transition.Transition.matchStartAndEnd(android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps):0:0 -> onPreDraw
    10:10:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0 -> onPreDraw
    10:10:boolean onPreDraw():0 -> onPreDraw
    11:11:int android.support.v4.util.SimpleArrayMap.size():0:0 -> onPreDraw
    11:11:void android.support.transition.Transition.matchNames(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap):0 -> onPreDraw
    11:11:void android.support.transition.Transition.matchStartAndEnd(android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps):0 -> onPreDraw
    11:11:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0 -> onPreDraw
    11:11:boolean onPreDraw():0 -> onPreDraw
    12:12:void android.support.transition.Transition.matchNames(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap):0:0 -> onPreDraw
    12:12:void android.support.transition.Transition.matchStartAndEnd(android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps):0 -> onPreDraw
    12:12:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0 -> onPreDraw
    12:12:boolean onPreDraw():0 -> onPreDraw
    13:13:int android.support.v4.util.SimpleArrayMap.size():0:0 -> onPreDraw
    13:13:void android.support.transition.Transition.matchInstances(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap):0 -> onPreDraw
    13:13:void android.support.transition.Transition.matchStartAndEnd(android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps):0 -> onPreDraw
    13:13:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0 -> onPreDraw
    13:13:boolean onPreDraw():0 -> onPreDraw
    14:14:void android.support.transition.Transition.matchInstances(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap):0:0 -> onPreDraw
    14:14:void android.support.transition.Transition.matchStartAndEnd(android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps):0 -> onPreDraw
    14:14:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0 -> onPreDraw
    14:14:boolean onPreDraw():0 -> onPreDraw
    15:15:int android.support.v4.util.SimpleArrayMap.size():0:0 -> onPreDraw
    15:15:void android.support.transition.Transition.addUnmatched(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap):0 -> onPreDraw
    15:15:void android.support.transition.Transition.matchStartAndEnd(android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps):0 -> onPreDraw
    15:15:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0 -> onPreDraw
    15:15:boolean onPreDraw():0 -> onPreDraw
    16:16:void android.support.transition.Transition.addUnmatched(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap):0:0 -> onPreDraw
    16:16:void android.support.transition.Transition.matchStartAndEnd(android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps):0 -> onPreDraw
    16:16:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0 -> onPreDraw
    16:16:boolean onPreDraw():0 -> onPreDraw
    17:17:int android.support.v4.util.SimpleArrayMap.size():0:0 -> onPreDraw
    17:17:void android.support.transition.Transition.addUnmatched(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap):0 -> onPreDraw
    17:17:void android.support.transition.Transition.matchStartAndEnd(android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps):0 -> onPreDraw
    17:17:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0 -> onPreDraw
    17:17:boolean onPreDraw():0 -> onPreDraw
    18:18:void android.support.transition.Transition.addUnmatched(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap):0:0 -> onPreDraw
    18:18:void android.support.transition.Transition.matchStartAndEnd(android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps):0 -> onPreDraw
    18:18:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0 -> onPreDraw
    18:18:boolean onPreDraw():0 -> onPreDraw
    19:19:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0:0 -> onPreDraw
    19:19:boolean onPreDraw():0 -> onPreDraw
    20:20:int android.support.v4.util.SimpleArrayMap.size():0:0 -> onPreDraw
    20:20:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0 -> onPreDraw
    20:20:boolean onPreDraw():0 -> onPreDraw
    21:21:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0:0 -> onPreDraw
    21:21:boolean onPreDraw():0 -> onPreDraw
    22:22:void android.support.transition.WindowIdApi18.<init>(android.view.View):0:0 -> onPreDraw
    22:22:android.support.transition.WindowIdImpl android.support.transition.ViewUtils.getWindowId(android.view.View):0 -> onPreDraw
    22:22:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0 -> onPreDraw
    22:22:boolean onPreDraw():0 -> onPreDraw
    23:23:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0:0 -> onPreDraw
    23:23:boolean onPreDraw():0 -> onPreDraw
    24:24:boolean android.support.transition.WindowIdApi18.equals(java.lang.Object):0:0 -> onPreDraw
    24:24:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0 -> onPreDraw
    24:24:boolean onPreDraw():0 -> onPreDraw
    25:25:void android.support.transition.Transition.playTransition(android.view.ViewGroup):0:0 -> onPreDraw
    25:25:boolean onPreDraw():0 -> onPreDraw
    1:1:void android.support.transition.TransitionManager$MultiListener.removeListeners():0:0 -> onViewDetachedFromWindow
    1:1:void onViewDetachedFromWindow(android.view.View):0 -> onViewDetachedFromWindow
    2:2:void onViewDetachedFromWindow(android.view.View):0:0 -> onViewDetachedFromWindow
android.support.transition.TransitionManager$MultiListener$1 -> x.k$a$a:
    android.support.v4.util.ArrayMap val$runningTransitions -> a
    android.support.transition.TransitionManager$MultiListener this$0 -> b
    void onTransitionEnd(android.support.transition.Transition) -> c
android.support.transition.TransitionPropagation -> x.l:
android.support.transition.TransitionSet -> x.m:
    boolean mPlayTogether -> y
    int mCurrentListeners -> z
    java.util.ArrayList mTransitions -> x
    boolean mStarted -> A
    int mChangeFlags -> B
    1:1:void android.support.transition.Transition.setEpicenterCallback(android.support.transition.Transition$EpicenterCallback):0:0 -> A
    1:1:void setEpicenterCallback(android.support.transition.Transition$EpicenterCallback):0 -> A
    2:2:void setEpicenterCallback(android.support.transition.Transition$EpicenterCallback):0:0 -> A
    1:1:android.support.transition.TransitionSet android.support.transition.TransitionSet.setInterpolator(android.animation.TimeInterpolator):0:0 -> B
    1:1:android.support.transition.Transition setInterpolator(android.animation.TimeInterpolator):0 -> B
    2:2:android.support.transition.Transition android.support.transition.Transition.setInterpolator(android.animation.TimeInterpolator):0:0 -> B
    2:2:android.support.transition.TransitionSet android.support.transition.TransitionSet.setInterpolator(android.animation.TimeInterpolator):0 -> B
    2:2:android.support.transition.Transition setInterpolator(android.animation.TimeInterpolator):0 -> B
    1:1:void android.support.transition.Transition.setPathMotion(android.support.transition.PathMotion):0:0 -> C
    1:1:void setPathMotion(android.support.transition.PathMotion):0 -> C
    2:2:void setPathMotion(android.support.transition.PathMotion):0:0 -> C
    void setPropagation(android.support.transition.TransitionPropagation) -> D
    1:1:android.support.transition.Transition android.support.transition.Transition.setStartDelay(long):0:0 -> E
    1:1:android.support.transition.TransitionSet android.support.transition.TransitionSet.setStartDelay(long):0 -> E
    1:1:android.support.transition.Transition setStartDelay(long):0 -> E
    java.lang.String toString(java.lang.String) -> G
    1:1:android.animation.TimeInterpolator android.support.transition.Transition.getInterpolator():0:0 -> H
    1:1:android.support.transition.TransitionSet addTransition(android.support.transition.Transition):0 -> H
    2:2:android.support.transition.TransitionSet addTransition(android.support.transition.Transition):0:0 -> H
    3:3:android.support.transition.PathMotion android.support.transition.Transition.getPathMotion():0:0 -> H
    3:3:android.support.transition.TransitionSet addTransition(android.support.transition.Transition):0 -> H
    4:4:android.support.transition.TransitionSet addTransition(android.support.transition.Transition):0:0 -> H
    5:5:android.support.transition.Transition$EpicenterCallback android.support.transition.Transition.getEpicenterCallback():0:0 -> H
    5:5:android.support.transition.TransitionSet addTransition(android.support.transition.Transition):0 -> H
    6:6:android.support.transition.TransitionSet addTransition(android.support.transition.Transition):0:0 -> H
    android.support.transition.Transition getTransitionAt(int) -> I
    android.support.transition.TransitionSet setOrdering(int) -> J
    1:1:android.support.transition.TransitionSet android.support.transition.TransitionSet.addListener(android.support.transition.Transition$TransitionListener):0:0 -> a
    1:1:android.support.transition.Transition addListener(android.support.transition.Transition$TransitionListener):0 -> a
    1:1:android.support.transition.TransitionSet android.support.transition.TransitionSet.addTarget(android.view.View):0:0 -> b
    1:1:android.support.transition.Transition addTarget(android.view.View):0 -> b
    2:2:android.support.transition.Transition android.support.transition.Transition.addTarget(android.view.View):0:0 -> b
    2:2:android.support.transition.TransitionSet android.support.transition.TransitionSet.addTarget(android.view.View):0 -> b
    2:2:android.support.transition.Transition addTarget(android.view.View):0 -> b
    void captureEndValues(android.support.transition.TransitionValues) -> d
    void capturePropagationValues(android.support.transition.TransitionValues) -> f
    void captureStartValues(android.support.transition.TransitionValues) -> g
    android.support.transition.Transition clone() -> j
    1:1:long android.support.transition.Transition.getStartDelay():0:0 -> l
    1:1:void createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList):0 -> l
    2:2:void createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList):0:0 -> l
    3:3:long android.support.transition.Transition.getStartDelay():0:0 -> l
    3:3:void createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList):0 -> l
    4:4:void createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList):0:0 -> l
    void pause(android.view.View) -> u
    1:1:android.support.transition.TransitionSet android.support.transition.TransitionSet.removeListener(android.support.transition.Transition$TransitionListener):0:0 -> v
    1:1:android.support.transition.Transition removeListener(android.support.transition.Transition$TransitionListener):0 -> v
    1:1:android.support.transition.TransitionSet android.support.transition.TransitionSet.removeTarget(android.view.View):0:0 -> w
    1:1:android.support.transition.Transition removeTarget(android.view.View):0 -> w
    2:2:android.support.transition.Transition android.support.transition.Transition.removeTarget(android.view.View):0:0 -> w
    2:2:android.support.transition.TransitionSet android.support.transition.TransitionSet.removeTarget(android.view.View):0 -> w
    2:2:android.support.transition.Transition removeTarget(android.view.View):0 -> w
    void resume(android.view.View) -> x
    1:1:void android.support.transition.TransitionSet.setupStartEndListeners():0:0 -> y
    1:1:void runAnimators():0 -> y
    2:2:void runAnimators():0:0 -> y
    1:1:android.support.transition.Transition android.support.transition.Transition.setDuration(long):0:0 -> z
    1:1:android.support.transition.TransitionSet android.support.transition.TransitionSet.setDuration(long):0 -> z
    1:1:android.support.transition.Transition setDuration(long):0 -> z
    2:2:android.support.transition.TransitionSet android.support.transition.TransitionSet.setDuration(long):0:0 -> z
    2:2:android.support.transition.Transition setDuration(long):0 -> z
android.support.transition.TransitionSet$1 -> x.m$a:
    android.support.transition.Transition val$nextTransition -> a
    void onTransitionEnd(android.support.transition.Transition) -> c
android.support.transition.TransitionSet$TransitionSetListener -> x.m$b:
    android.support.transition.TransitionSet mTransitionSet -> a
    void onTransitionStart(android.support.transition.Transition) -> a
    void onTransitionEnd(android.support.transition.Transition) -> c
android.support.transition.TransitionUtils -> x.n:
    boolean HAS_IS_ATTACHED_TO_WINDOW -> a
    boolean HAS_OVERLAY -> b
    boolean HAS_PICTURE_BITMAP -> c
    1:1:void android.support.transition.ViewUtils.transformMatrixToGlobal(android.view.View,android.graphics.Matrix):0:0 -> a
    1:1:android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View):0 -> a
    2:2:void android.support.transition.ViewUtils.transformMatrixToLocal(android.view.View,android.graphics.Matrix):0:0 -> a
    2:2:android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View):0 -> a
    3:3:android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View):0:0 -> a
    4:4:android.graphics.Bitmap android.support.transition.TransitionUtils.createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup):0:0 -> a
    4:4:android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View):0 -> a
    5:5:android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View):0:0 -> a
android.support.transition.TransitionValues -> x.o:
    java.util.Map values -> a
    android.view.View view -> b
    java.util.ArrayList mTargetedTransitions -> c
android.support.transition.TransitionValuesMaps -> x.p:
    android.support.v4.util.ArrayMap mNameValues -> d
    android.support.v4.util.ArrayMap mViewValues -> a
    android.support.v4.util.LongSparseArray mItemIdValues -> c
    android.util.SparseArray mIdValues -> b
    1:1:void android.support.transition.TransitionValuesMaps.<init>():0:0 -> <init>
    1:1:void $r8$init$bridge():0 -> <init>
    2:2:void android.support.v4.widget.DirectedAcyclicGraph.<init>():0:0 -> <init>
    2:2:void $r8$init$bridge():0 -> <init>
    1:1:boolean android.support.v4.util.SimpleArrayMap.containsKey(java.lang.Object):0:0 -> a
    1:1:void android.support.v4.widget.DirectedAcyclicGraph.addNode(java.lang.Object):0 -> a
    2:2:void android.support.v4.widget.DirectedAcyclicGraph.addNode(java.lang.Object):0:0 -> a
    void android.support.v4.widget.DirectedAcyclicGraph.dfs(java.lang.Object,java.util.ArrayList,java.util.HashSet) -> b
    java.util.ArrayList android.support.v4.widget.DirectedAcyclicGraph.getEmptyList() -> c
    void android.support.v4.widget.DirectedAcyclicGraph.poolList(java.util.ArrayList) -> d
android.support.transition.ViewGroupOverlayImpl -> x.q:
    void remove(android.view.View) -> a
android.support.transition.ViewGroupUtils -> x.r:
    1:1:void android.support.transition.ViewGroupUtilsApi18.fetchSuppressLayoutMethod():0:0 -> a
    1:1:void android.support.transition.ViewGroupUtilsApi18.suppressLayout(android.view.ViewGroup,boolean):0 -> a
    1:1:void suppressLayout(android.view.ViewGroup,boolean):0 -> a
    2:2:void android.support.transition.ViewGroupUtilsApi18.suppressLayout(android.view.ViewGroup,boolean):0:0 -> a
    2:2:void suppressLayout(android.view.ViewGroup,boolean):0 -> a
android.support.transition.ViewUtils -> x.s:
    android.util.Property TRANSITION_ALPHA -> d
    java.lang.reflect.Field sViewFlagsField -> b
    boolean sViewFlagsFieldFetched -> c
    android.support.transition.ViewUtilsBase IMPL -> a
    float getTransitionAlpha(android.view.View) -> a
    void setLeftTopRightBottom(android.view.View,int,int,int,int) -> b
    1:1:void android.support.transition.ViewUtils.fetchViewFlagsField():0:0 -> c
    1:1:void setTransitionVisibility(android.view.View,int):0 -> c
    2:2:void setTransitionVisibility(android.view.View,int):0:0 -> c
android.support.transition.ViewUtils$1 -> x.s$a:
    1:1:java.lang.Float android.support.transition.ViewUtils$1.get(android.view.View):0:0 -> get
    1:1:java.lang.Object get(java.lang.Object):0 -> get
    1:1:void android.support.transition.ViewUtils$1.set(android.view.View,java.lang.Float):0:0 -> set
    1:1:void set(java.lang.Object,java.lang.Object):0 -> set
    2:2:void android.support.transition.ViewUtils.setTransitionAlpha(android.view.View,float):0:0 -> set
    2:2:void android.support.transition.ViewUtils$1.set(android.view.View,java.lang.Float):0 -> set
    2:2:void set(java.lang.Object,java.lang.Object):0 -> set
android.support.transition.ViewUtils$2 -> x.s$b:
    1:1:android.graphics.Rect android.support.transition.ViewUtils$2.get(android.view.View):0:0 -> get
    1:1:java.lang.Object get(java.lang.Object):0 -> get
    2:2:android.graphics.Rect android.support.v4.view.ViewCompat.getClipBounds(android.view.View):0:0 -> get
    2:2:android.graphics.Rect android.support.transition.ViewUtils$2.get(android.view.View):0 -> get
    2:2:java.lang.Object get(java.lang.Object):0 -> get
    1:1:void android.support.transition.ViewUtils$2.set(android.view.View,android.graphics.Rect):0:0 -> set
    1:1:void set(java.lang.Object,java.lang.Object):0 -> set
    2:2:void android.support.v4.view.ViewCompat.setClipBounds(android.view.View,android.graphics.Rect):0:0 -> set
    2:2:void android.support.transition.ViewUtils$2.set(android.view.View,android.graphics.Rect):0 -> set
    2:2:void set(java.lang.Object,java.lang.Object):0 -> set
android.support.transition.ViewUtilsApi19 -> x.t:
    java.lang.reflect.Method sGetTransitionAlphaMethod -> c
    boolean sSetTransitionAlphaMethodFetched -> b
    java.lang.reflect.Method sSetTransitionAlphaMethod -> a
    boolean sGetTransitionAlphaMethodFetched -> d
    void clearNonTransitionAlpha(android.view.View) -> a
    1:1:void android.support.transition.ViewUtilsApi19.fetchGetTransitionAlphaMethod():0:0 -> b
    1:1:float getTransitionAlpha(android.view.View):0 -> b
    2:2:float getTransitionAlpha(android.view.View):0:0 -> b
    void saveNonTransitionAlpha(android.view.View) -> c
    1:1:void android.support.transition.ViewUtilsApi19.fetchSetTransitionAlphaMethod():0:0 -> e
    1:1:void setTransitionAlpha(android.view.View,float):0 -> e
    2:2:void setTransitionAlpha(android.view.View,float):0:0 -> e
android.support.transition.ViewUtilsApi21 -> x.u:
    java.lang.reflect.Method sTransformMatrixToLocalMethod -> g
    boolean sTransformMatrixToGlobalMethodFetched -> f
    java.lang.reflect.Method sTransformMatrixToGlobalMethod -> e
    boolean sTransformMatrixToLocalMethodFetched -> h
    1:1:void android.support.transition.ViewUtilsApi21.fetchTransformMatrixToGlobalMethod():0:0 -> f
    1:1:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix):0 -> f
    2:2:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix):0:0 -> f
    1:1:void android.support.transition.ViewUtilsApi21.fetchTransformMatrixToLocalMethod():0:0 -> g
    1:1:void transformMatrixToLocal(android.view.View,android.graphics.Matrix):0 -> g
    2:2:void transformMatrixToLocal(android.view.View,android.graphics.Matrix):0:0 -> g
android.support.transition.ViewUtilsApi22 -> x.v:
    boolean sSetLeftTopRightBottomMethodFetched -> j
    java.lang.reflect.Method sSetLeftTopRightBottomMethod -> i
    1:1:void android.support.transition.ViewUtilsApi22.fetchSetLeftTopRightBottomMethod():0:0 -> d
    1:1:void setLeftTopRightBottom(android.view.View,int,int,int,int):0 -> d
    2:2:void setLeftTopRightBottom(android.view.View,int,int,int,int):0:0 -> d
android.support.transition.ViewUtilsBase -> x.w:
    void clearNonTransitionAlpha(android.view.View) -> a
    float getTransitionAlpha(android.view.View) -> b
    void saveNonTransitionAlpha(android.view.View) -> c
    void setLeftTopRightBottom(android.view.View,int,int,int,int) -> d
    void setTransitionAlpha(android.view.View,float) -> e
    void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> f
    void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> g
android.support.transition.Visibility -> x.y:
    java.lang.String[] sTransitionProperties -> y
    int mMode -> x
    void captureValues(android.support.transition.TransitionValues) -> H
    android.support.transition.Visibility$VisibilityInfo getVisibilityChangeInfo(android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> I
    android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> J
    void captureEndValues(android.support.transition.TransitionValues) -> d
    1:1:android.animation.Animator android.support.transition.Visibility.onAppear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int):0:0 -> k
    1:1:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0 -> k
    2:2:float android.support.transition.Fade.getStartAlpha(android.support.transition.TransitionValues,float):0:0 -> k
    2:2:android.animation.Animator android.support.transition.Fade.onAppear(android.view.ViewGroup,android.view.View,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0 -> k
    2:2:android.animation.Animator android.support.transition.Visibility.onAppear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int):0 -> k
    2:2:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0 -> k
    3:3:android.animation.Animator android.support.transition.Fade.onAppear(android.view.ViewGroup,android.view.View,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0:0 -> k
    3:3:android.animation.Animator android.support.transition.Visibility.onAppear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int):0 -> k
    3:3:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0 -> k
    4:4:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0:0 -> k
    5:5:android.animation.Animator android.support.transition.Visibility.onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int):0:0 -> k
    5:5:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0 -> k
    6:6:android.support.transition.ViewGroupOverlayImpl android.support.transition.ViewGroupUtils.getOverlay(android.view.ViewGroup):0:0 -> k
    6:6:android.animation.Animator android.support.transition.Visibility.onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int):0 -> k
    6:6:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0 -> k
    7:7:void android.support.transition.ViewGroupOverlayApi18.add(android.view.View):0:0 -> k
    7:7:android.animation.Animator android.support.transition.Visibility.onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int):0 -> k
    7:7:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0 -> k
    8:8:android.animation.Animator android.support.transition.Visibility.onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int):0:0 -> k
    8:8:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0 -> k
    9:9:void android.support.transition.ViewGroupOverlayApi18.remove(android.view.View):0:0 -> k
    9:9:android.animation.Animator android.support.transition.Visibility.onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int):0 -> k
    9:9:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0 -> k
    10:10:android.animation.Animator android.support.transition.Visibility.onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int):0:0 -> k
    10:10:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0 -> k
    11:11:void android.support.transition.AnimatorUtils.addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter):0:0 -> k
    11:11:android.animation.Animator android.support.transition.Visibility.onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int):0 -> k
    11:11:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0 -> k
    12:12:android.animation.Animator android.support.transition.Visibility.onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int):0:0 -> k
    12:12:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues):0 -> k
    java.lang.String[] getTransitionProperties() -> p
    boolean isTransitionRequired(android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> r
android.support.transition.Visibility$1 -> x.x:
    android.support.transition.ViewGroupOverlayImpl val$overlay -> a
    android.view.View val$finalOverlayView -> b
android.support.transition.Visibility$DisappearListener -> x.y$a:
    android.view.ViewGroup mParent -> c
    android.view.View mView -> a
    boolean mLayoutSuppressed -> e
    boolean mCanceled -> f
    int mFinalVisibility -> b
    boolean mSuppressLayout -> d
    void onTransitionStart(android.support.transition.Transition) -> a
    void onTransitionResume(android.support.transition.Transition) -> b
    void onTransitionEnd(android.support.transition.Transition) -> c
    void onTransitionPause(android.support.transition.Transition) -> d
    void hideViewWhenNotCanceled() -> e
    void suppressLayout(boolean) -> f
android.support.transition.Visibility$VisibilityInfo -> x.y$b:
    android.view.ViewGroup mEndParent -> f
    android.view.ViewGroup mStartParent -> e
    int mEndVisibility -> d
    boolean mVisibilityChange -> a
    boolean mFadeIn -> b
    int mStartVisibility -> c
android.support.transition.WindowIdApi18 -> x.z:
    android.view.WindowId mWindowId -> a
android.support.transition.WindowIdImpl -> x.a0:
android.support.v4.app.ActivityCompat -> y.a:
    int $r8$clinit -> b
android.support.v4.app.BackStackRecord -> y.b:
    int mBreadCrumbShortTitleRes -> o
    int mIndex -> l
    int mBreadCrumbTitleRes -> m
    boolean mAddToBackStack -> i
    java.lang.String mName -> j
    int mTransitionStyle -> h
    boolean mCommitted -> k
    int mPopExitAnim -> f
    int mTransition -> g
    int mExitAnim -> d
    int mPopEnterAnim -> e
    java.util.ArrayList mOps -> b
    int mEnterAnim -> c
    boolean mReorderingAllowed -> s
    java.lang.CharSequence mBreadCrumbTitleText -> n
    java.lang.CharSequence mBreadCrumbShortTitleText -> p
    java.util.ArrayList mSharedElementTargetNames -> r
    android.support.v4.app.FragmentManagerImpl mManager -> a
    java.util.ArrayList mSharedElementSourceNames -> q
    1:1:void android.support.v4.app.FragmentManagerImpl.addBackStackState(android.support.v4.app.BackStackRecord):0:0 -> a
    1:1:boolean generateOps(java.util.ArrayList,java.util.ArrayList):0 -> a
    1:1:void android.support.v4.app.BackStackRecord.doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int):0:0 -> g
    1:1:android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String):0 -> g
    void addOp(android.support.v4.app.BackStackRecord$Op) -> h
    void bumpBackStackNesting(int) -> i
    int commit() -> j
    1:1:int android.support.v4.app.FragmentManagerImpl.allocBackStackIndex(android.support.v4.app.BackStackRecord):0:0 -> k
    1:1:int commitInternal(boolean):0 -> k
    2:2:int commitInternal(boolean):0:0 -> k
    3:3:void android.support.v4.app.FragmentManagerImpl.enqueueAction(android.support.v4.app.FragmentManagerImpl$OpGenerator,boolean):0:0 -> k
    3:3:int commitInternal(boolean):0 -> k
    4:4:int commitInternal(boolean):0:0 -> k
    5:5:void android.support.v4.app.FragmentManagerImpl.enqueueAction(android.support.v4.app.FragmentManagerImpl$OpGenerator,boolean):0:0 -> k
    5:5:int commitInternal(boolean):0 -> k
    6:6:int commitInternal(boolean):0:0 -> k
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> l
    1:1:void android.support.v4.app.Fragment.setNextTransition(int,int):0:0 -> m
    1:1:void executeOps():0 -> m
    2:2:void executeOps():0:0 -> m
    3:3:void android.support.v4.app.FragmentManagerImpl.showFragment(android.support.v4.app.Fragment):0:0 -> m
    3:3:void executeOps():0 -> m
    4:4:void executeOps():0:0 -> m
    5:5:void android.support.v4.app.FragmentManagerImpl.hideFragment(android.support.v4.app.Fragment):0:0 -> m
    5:5:void executeOps():0 -> m
    6:6:void executeOps():0:0 -> m
    1:1:void android.support.v4.app.Fragment.setNextTransition(int,int):0:0 -> n
    1:1:void executePopOps(boolean):0 -> n
    2:2:void executePopOps(boolean):0:0 -> n
    3:3:void android.support.v4.app.FragmentManagerImpl.hideFragment(android.support.v4.app.Fragment):0:0 -> n
    3:3:void executePopOps(boolean):0 -> n
    4:4:void executePopOps(boolean):0:0 -> n
    5:5:void android.support.v4.app.FragmentManagerImpl.showFragment(android.support.v4.app.Fragment):0:0 -> n
    5:5:void executePopOps(boolean):0 -> n
    6:6:void executePopOps(boolean):0:0 -> n
    boolean interactsWith(int) -> o
    boolean interactsWith(java.util.ArrayList,int,int) -> p
android.support.v4.app.BackStackRecord$Op -> y.b$a:
    int popExitAnim -> f
    android.support.v4.app.Fragment fragment -> b
    int exitAnim -> d
    int popEnterAnim -> e
    int enterAnim -> c
    int cmd -> a
android.support.v4.app.BackStackState -> y.c:
    java.util.ArrayList mSharedElementTargetNames -> k
    java.util.ArrayList mSharedElementSourceNames -> j
    int mBreadCrumbShortTitleRes -> h
    boolean mReorderingAllowed -> l
    int mBreadCrumbTitleRes -> f
    int[] mOps -> a
    int mIndex -> e
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    java.lang.String mName -> d
android.support.v4.app.BackStackState$1 -> y.c$a:
    1:1:android.support.v4.app.BackStackState android.support.v4.app.BackStackState$1.createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:android.support.v4.app.BackStackState[] android.support.v4.app.BackStackState$1.newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
android.support.v4.app.CoreComponentFactory -> android.support.v4.app.CoreComponentFactory:
    java.lang.Object checkCompatWrapper(java.lang.Object) -> a
android.support.v4.app.CoreComponentFactory$CompatWrapped -> android.support.v4.app.CoreComponentFactory$a:
    java.lang.Object getWrapper() -> a
android.support.v4.app.Fragment -> y.d:
    android.support.v4.app.Fragment mTarget -> h
    boolean mFromLayout -> m
    java.lang.String mWho -> f
    boolean mRestored -> o
    android.os.Bundle mSavedFragmentState -> c
    int mTargetRequestCode -> j
    boolean mAdded -> k
    boolean mHiddenChanged -> L
    android.os.Bundle mArguments -> g
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> t
    java.lang.Object USE_DEFAULT_TRANSITION -> S
    android.support.v4.app.FragmentManagerNonConfig mChildNonConfig -> u
    int mState -> b
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> r
    android.arch.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData -> Q
    android.support.v4.util.SimpleArrayMap sClassMap -> R
    android.util.SparseArray mSavedViewState -> d
    java.lang.String mTag -> z
    int mContainerId -> y
    boolean mCalled -> E
    android.arch.lifecycle.LifecycleRegistry mViewLifecycleRegistry -> O
    boolean mHidden -> A
    android.support.v4.app.Fragment$AnimationInfo mAnimationInfo -> J
    android.arch.lifecycle.LifecycleOwner mViewLifecycleOwner -> P
    android.arch.lifecycle.ViewModelStore mViewModelStore -> v
    boolean mRetainInstance -> C
    int mBackStackNesting -> q
    android.support.v4.app.Fragment mParentFragment -> w
    boolean mIsCreated -> M
    boolean mInLayout -> n
    boolean mPerformedCreateView -> p
    boolean mUserVisibleHint -> I
    boolean mIsNewlyAdded -> K
    int mTargetIndex -> i
    boolean mRemoving -> l
    android.support.v4.app.FragmentHostCallback mHost -> s
    int mIndex -> e
    android.view.ViewGroup mContainer -> F
    int mFragmentId -> x
    boolean mDeferStart -> H
    boolean mDetached -> B
    android.view.View mInnerView -> G
    boolean mRetaining -> D
    android.arch.lifecycle.LifecycleRegistry mLifecycleRegistry -> N
    void onSaveInstanceState(android.os.Bundle) -> A
    void onStop() -> B
    void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> C
    1:1:android.view.LayoutInflater android.support.v4.app.Fragment.getLayoutInflater(android.os.Bundle):0:0 -> D
    1:1:android.view.LayoutInflater android.support.v4.app.Fragment.onGetLayoutInflater(android.os.Bundle):0 -> D
    1:1:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle):0 -> D
    2:2:android.view.LayoutInflater android.support.v4.app.FragmentActivity$HostCallbacks.onGetLayoutInflater():0:0 -> D
    2:2:android.view.LayoutInflater android.support.v4.app.Fragment.getLayoutInflater(android.os.Bundle):0 -> D
    2:2:android.view.LayoutInflater android.support.v4.app.Fragment.onGetLayoutInflater(android.os.Bundle):0 -> D
    2:2:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle):0 -> D
    3:3:android.view.LayoutInflater android.support.v4.app.Fragment.getLayoutInflater(android.os.Bundle):0:0 -> D
    3:3:android.view.LayoutInflater android.support.v4.app.Fragment.onGetLayoutInflater(android.os.Bundle):0 -> D
    3:3:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle):0 -> D
    4:4:void android.support.v4.view.LayoutInflaterCompat.setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2):0:0 -> D
    4:4:android.view.LayoutInflater android.support.v4.app.Fragment.getLayoutInflater(android.os.Bundle):0 -> D
    4:4:android.view.LayoutInflater android.support.v4.app.Fragment.onGetLayoutInflater(android.os.Bundle):0 -> D
    4:4:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle):0 -> D
    5:5:android.view.LayoutInflater android.support.v4.app.Fragment.getLayoutInflater(android.os.Bundle):0:0 -> D
    5:5:android.view.LayoutInflater android.support.v4.app.Fragment.onGetLayoutInflater(android.os.Bundle):0 -> D
    5:5:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle):0 -> D
    void restoreChildFragmentState(android.os.Bundle) -> E
    void setAnimatingAway(android.view.View) -> F
    void setAnimator(android.animation.Animator) -> G
    1:1:boolean android.support.v4.app.Fragment.isStateSaved():0:0 -> H
    1:1:void setArguments(android.os.Bundle):0 -> H
    2:2:void setArguments(android.os.Bundle):0:0 -> H
    void setHideReplaced(boolean) -> I
    void setIndex(int,android.support.v4.app.Fragment) -> J
    void setNextAnim(int) -> K
    1:1:void android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener.startListening():0:0 -> L
    1:1:void setOnStartEnterTransitionListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener):0 -> L
    android.arch.lifecycle.Lifecycle getLifecycle() -> a
    android.arch.lifecycle.ViewModelStore getViewModelStore() -> b
    android.support.v4.app.Fragment$AnimationInfo ensureAnimationInfo() -> c
    1:1:android.app.Activity android.support.v4.app.FragmentHostCallback.getActivity():0:0 -> d
    1:1:android.support.v4.app.FragmentActivity getActivity():0 -> d
    2:2:android.support.v4.app.FragmentActivity getActivity():0:0 -> d
    android.view.View getAnimatingAway() -> e
    android.animation.Animator getAnimator() -> f
    android.support.v4.app.FragmentManager getChildFragmentManager() -> g
    1:1:android.content.Context android.support.v4.app.FragmentHostCallback.getContext():0:0 -> h
    1:1:android.content.Context getContext():0 -> h
    java.lang.Object getEnterTransition() -> i
    android.support.v4.app.SharedElementCallback getEnterTransitionCallback() -> j
    java.lang.Object getExitTransition() -> k
    int getNextAnim() -> l
    int getNextTransition() -> m
    int getNextTransitionStyle() -> n
    java.lang.Object getReenterTransition() -> o
    java.lang.Object getReturnTransition() -> p
    java.lang.Object getSharedElementEnterTransition() -> q
    java.lang.Object getSharedElementReturnTransition() -> r
    int getStateAfterAnimating() -> s
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> t
    1:1:void android.support.v4.app.FragmentManagerImpl.attachController(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment):0:0 -> u
    1:1:void instantiateChildFragmentManager():0 -> u
    2:2:void instantiateChildFragmentManager():0:0 -> u
    boolean isInBackStack() -> v
    1:1:boolean android.support.v4.app.FragmentManagerImpl.isStateAtLeast(int):0:0 -> w
    1:1:void onCreate(android.os.Bundle):0 -> w
    2:2:void onCreate(android.os.Bundle):0:0 -> w
    void onDestroy() -> x
    1:1:android.app.Activity android.support.v4.app.FragmentHostCallback.getActivity():0:0 -> y
    1:1:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle):0 -> y
    2:2:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle):0:0 -> y
    3:3:void android.support.v4.app.Fragment.onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle):0:0 -> y
    3:3:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle):0 -> y
    void onPause() -> z
android.support.v4.app.Fragment$2 -> y.d$a:
    android.support.v4.app.Fragment this$0 -> a
    1:1:android.support.v4.app.Fragment android.support.v4.app.FragmentContainer.instantiate(android.content.Context,java.lang.String,android.os.Bundle):0:0 -> d
    1:1:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle):0 -> d
    android.view.View onFindViewById(int) -> e
    boolean onHasView() -> f
android.support.v4.app.Fragment$3 -> y.d$b:
    android.support.v4.app.Fragment this$0 -> b
    android.arch.lifecycle.Lifecycle getLifecycle() -> a
android.support.v4.app.Fragment$AnimationInfo -> y.d$c:
    java.lang.Object mReenterTransition -> h
    java.lang.Object mSharedElementReturnTransition -> i
    android.animation.Animator mAnimator -> b
    java.lang.Object mReturnTransition -> g
    boolean mIsHideReplaced -> k
    android.view.View mAnimatingAway -> a
    int mNextTransitionStyle -> f
    int mNextAnim -> d
    int mNextTransition -> e
    android.support.v4.app.Fragment$OnStartEnterTransitionListener mStartEnterTransitionListener -> j
    int mStateAfterAnimating -> c
android.support.v4.app.Fragment$InstantiationException -> y.d$d:
android.support.v4.app.Fragment$OnStartEnterTransitionListener -> y.d$e:
android.support.v4.app.FragmentActivity -> y.e:
    android.os.Handler mHandler -> c
    android.support.v4.app.FragmentController mFragments -> d
    int mNextCandidateRequestIndex -> i
    android.support.v4.util.SparseArrayCompat mPendingFragmentActivityResults -> j
    boolean mCreated -> f
    boolean mResumed -> g
    boolean mStopped -> h
    android.arch.lifecycle.ViewModelStore mViewModelStore -> e
    1:1:android.support.v4.app.FragmentController android.support.v4.app.FragmentController.createController(android.support.v4.app.FragmentHostCallback):0:0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:void <init>():0:0 -> <init>
    1:1:android.arch.lifecycle.Lifecycle android.support.v4.app.SupportActivity.getLifecycle():0:0 -> a
    1:1:android.arch.lifecycle.Lifecycle getLifecycle():0 -> a
    android.arch.lifecycle.ViewModelStore getViewModelStore() -> b
    void checkForValidRequestCode(int) -> g
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> h
    1:1:android.arch.lifecycle.Lifecycle android.support.v4.app.Fragment.getLifecycle():0:0 -> i
    1:1:boolean markState(android.support.v4.app.FragmentManager,android.arch.lifecycle.Lifecycle$State):0 -> i
    2:2:android.arch.lifecycle.Lifecycle$State android.arch.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> i
    2:2:boolean markState(android.support.v4.app.FragmentManager,android.arch.lifecycle.Lifecycle$State):0 -> i
    3:3:boolean markState(android.support.v4.app.FragmentManager,android.arch.lifecycle.Lifecycle$State):0:0 -> i
    4:4:boolean android.arch.lifecycle.Lifecycle$State.isAtLeast(android.arch.lifecycle.Lifecycle$State):0:0 -> i
    4:4:boolean markState(android.support.v4.app.FragmentManager,android.arch.lifecycle.Lifecycle$State):0 -> i
    5:5:boolean markState(android.support.v4.app.FragmentManager,android.arch.lifecycle.Lifecycle$State):0:0 -> i
    6:6:void android.arch.lifecycle.LifecycleRegistry.markState(android.arch.lifecycle.Lifecycle$State):0:0 -> i
    6:6:boolean markState(android.support.v4.app.FragmentManager,android.arch.lifecycle.Lifecycle$State):0 -> i
    7:7:android.support.v4.app.FragmentManager android.support.v4.app.Fragment.peekChildFragmentManager():0:0 -> i
    7:7:boolean markState(android.support.v4.app.FragmentManager,android.arch.lifecycle.Lifecycle$State):0 -> i
    8:8:boolean markState(android.support.v4.app.FragmentManager,android.arch.lifecycle.Lifecycle$State):0:0 -> i
    1:1:void android.support.v4.app.FragmentController.dispatchResume():0:0 -> j
    1:1:void onResumeFragments():0 -> j
    1:1:android.support.v4.app.Fragment android.support.v4.app.FragmentController.findFragmentByWho(java.lang.String):0:0 -> onActivityResult
    1:1:void onActivityResult(int,int,android.content.Intent):0 -> onActivityResult
    2:2:void onActivityResult(int,int,android.content.Intent):0:0 -> onActivityResult
    1:1:void android.support.v4.app.FragmentController.dispatchConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    1:1:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    1:1:void android.support.v4.app.FragmentController.attachHost(android.support.v4.app.Fragment):0:0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
    2:2:void android.support.v4.app.FragmentManagerImpl.attachController(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment):0:0 -> onCreate
    2:2:void android.support.v4.app.FragmentController.attachHost(android.support.v4.app.Fragment):0 -> onCreate
    2:2:void onCreate(android.os.Bundle):0 -> onCreate
    3:3:void onCreate(android.os.Bundle):0:0 -> onCreate
    4:4:void android.support.v4.app.FragmentController.restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig):0:0 -> onCreate
    4:4:void onCreate(android.os.Bundle):0 -> onCreate
    5:5:void onCreate(android.os.Bundle):0:0 -> onCreate
    6:6:void android.support.v4.util.SparseArrayCompat.<init>():0:0 -> onCreate
    6:6:void onCreate(android.os.Bundle):0 -> onCreate
    7:7:void onCreate(android.os.Bundle):0:0 -> onCreate
    8:8:void android.support.v4.app.FragmentController.dispatchCreate():0:0 -> onCreate
    8:8:void onCreate(android.os.Bundle):0 -> onCreate
    9:9:void android.support.v4.app.FragmentManagerImpl.attachController(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment):0:0 -> onCreate
    9:9:void android.support.v4.app.FragmentController.attachHost(android.support.v4.app.Fragment):0 -> onCreate
    9:9:void onCreate(android.os.Bundle):0 -> onCreate
    1:1:boolean android.support.v4.app.FragmentController.dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater):0:0 -> onCreatePanelMenu
    1:1:boolean onCreatePanelMenu(int,android.view.Menu):0 -> onCreatePanelMenu
    2:2:boolean onCreatePanelMenu(int,android.view.Menu):0:0 -> onCreatePanelMenu
    1:1:android.view.View android.support.v4.app.FragmentActivity.dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    1:1:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    2:2:android.view.View android.support.v4.app.FragmentController.onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    2:2:android.view.View android.support.v4.app.FragmentActivity.dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    2:2:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    3:3:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    4:4:android.view.View android.support.v4.app.FragmentActivity.dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    4:4:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    5:5:android.view.View android.support.v4.app.FragmentController.onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    5:5:android.view.View android.support.v4.app.FragmentActivity.dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    5:5:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    6:6:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    1:1:void android.support.v4.app.FragmentController.dispatchDestroy():0:0 -> onDestroy
    1:1:void onDestroy():0 -> onDestroy
    1:1:void android.support.v4.app.FragmentController.dispatchLowMemory():0:0 -> onLowMemory
    1:1:void onLowMemory():0 -> onLowMemory
    1:1:boolean android.support.v4.app.FragmentController.dispatchContextItemSelected(android.view.MenuItem):0:0 -> onMenuItemSelected
    1:1:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    2:2:boolean onMenuItemSelected(int,android.view.MenuItem):0:0 -> onMenuItemSelected
    3:3:boolean android.support.v4.app.FragmentController.dispatchOptionsItemSelected(android.view.MenuItem):0:0 -> onMenuItemSelected
    3:3:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    1:1:void android.support.v4.app.FragmentController.dispatchMultiWindowModeChanged(boolean):0:0 -> onMultiWindowModeChanged
    1:1:void onMultiWindowModeChanged(boolean):0 -> onMultiWindowModeChanged
    1:1:void android.support.v4.app.FragmentController.dispatchOptionsMenuClosed(android.view.Menu):0:0 -> onPanelClosed
    1:1:void onPanelClosed(int,android.view.Menu):0 -> onPanelClosed
    2:2:void onPanelClosed(int,android.view.Menu):0:0 -> onPanelClosed
    1:1:void android.support.v4.app.FragmentController.dispatchPause():0:0 -> onPause
    1:1:void onPause():0 -> onPause
    2:2:void android.support.v4.app.FragmentManagerImpl.dispatchPause():0:0 -> onPause
    2:2:void android.support.v4.app.FragmentController.dispatchPause():0 -> onPause
    2:2:void onPause():0 -> onPause
    1:1:void android.support.v4.app.FragmentController.dispatchPictureInPictureModeChanged(boolean):0:0 -> onPictureInPictureModeChanged
    1:1:void onPictureInPictureModeChanged(boolean):0 -> onPictureInPictureModeChanged
    1:1:boolean android.support.v4.app.FragmentActivity.onPrepareOptionsPanel(android.view.View,android.view.Menu):0:0 -> onPreparePanel
    1:1:boolean onPreparePanel(int,android.view.View,android.view.Menu):0 -> onPreparePanel
    2:2:boolean onPreparePanel(int,android.view.View,android.view.Menu):0:0 -> onPreparePanel
    3:3:boolean android.support.v4.app.FragmentController.dispatchPrepareOptionsMenu(android.view.Menu):0:0 -> onPreparePanel
    3:3:boolean onPreparePanel(int,android.view.View,android.view.Menu):0 -> onPreparePanel
    4:4:boolean onPreparePanel(int,android.view.View,android.view.Menu):0:0 -> onPreparePanel
    1:1:android.support.v4.app.Fragment android.support.v4.app.FragmentController.findFragmentByWho(java.lang.String):0:0 -> onRequestPermissionsResult
    1:1:void onRequestPermissionsResult(int,java.lang.String[],int[]):0 -> onRequestPermissionsResult
    2:2:void onRequestPermissionsResult(int,java.lang.String[],int[]):0:0 -> onRequestPermissionsResult
    1:1:android.support.v4.app.FragmentManagerNonConfig android.support.v4.app.FragmentController.retainNestedNonConfig():0:0 -> onRetainNonConfigurationInstance
    1:1:java.lang.Object onRetainNonConfigurationInstance():0 -> onRetainNonConfigurationInstance
    2:2:android.support.v4.app.FragmentManagerNonConfig android.support.v4.app.FragmentManagerImpl.retainNonConfig():0:0 -> onRetainNonConfigurationInstance
    2:2:android.support.v4.app.FragmentManagerNonConfig android.support.v4.app.FragmentController.retainNestedNonConfig():0 -> onRetainNonConfigurationInstance
    2:2:java.lang.Object onRetainNonConfigurationInstance():0 -> onRetainNonConfigurationInstance
    3:3:java.lang.Object onRetainNonConfigurationInstance():0:0 -> onRetainNonConfigurationInstance
    1:1:void android.support.v4.app.FragmentActivity.markFragmentsCreated():0:0 -> onSaveInstanceState
    1:1:void onSaveInstanceState(android.os.Bundle):0 -> onSaveInstanceState
    2:2:void onSaveInstanceState(android.os.Bundle):0:0 -> onSaveInstanceState
    3:3:android.os.Parcelable android.support.v4.app.FragmentController.saveAllState():0:0 -> onSaveInstanceState
    3:3:void onSaveInstanceState(android.os.Bundle):0 -> onSaveInstanceState
    4:4:void onSaveInstanceState(android.os.Bundle):0:0 -> onSaveInstanceState
    1:1:void android.support.v4.app.FragmentController.dispatchActivityCreated():0:0 -> onStart
    1:1:void onStart():0 -> onStart
    2:2:void onStart():0:0 -> onStart
    3:3:void android.support.v4.app.FragmentController.dispatchStart():0:0 -> onStart
    3:3:void onStart():0 -> onStart
    1:1:void android.support.v4.app.FragmentActivity.markFragmentsCreated():0:0 -> onStop
    1:1:void onStop():0 -> onStop
    2:2:void onStop():0:0 -> onStop
    3:3:void android.support.v4.app.FragmentController.dispatchStop():0:0 -> onStop
    3:3:void onStop():0 -> onStop
    4:4:void android.support.v4.app.FragmentManagerImpl.dispatchStop():0:0 -> onStop
    4:4:void android.support.v4.app.FragmentController.dispatchStop():0 -> onStop
    4:4:void onStop():0 -> onStop
android.support.v4.app.FragmentActivity$1 -> y.e$a:
    android.support.v4.app.FragmentActivity this$0 -> a
android.support.v4.app.FragmentActivity$HostCallbacks -> y.e$b:
    android.support.v4.app.FragmentActivity this$0 -> e
    android.view.View onFindViewById(int) -> e
    boolean onHasView() -> f
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> y.e$c:
    android.arch.lifecycle.ViewModelStore viewModelStore -> a
    android.support.v4.app.FragmentManagerNonConfig fragments -> b
android.support.v4.app.FragmentHostCallback -> y.f:
    android.content.Context mContext -> b
    android.os.Handler mHandler -> c
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> d
    android.app.Activity mActivity -> a
    1:1:void android.support.v4.app.FragmentHostCallback.<init>(android.app.Activity,android.content.Context,android.os.Handler,int):0:0 -> <init>
    1:1:void <init>(android.support.v4.app.FragmentActivity):0 -> <init>
    2:2:java.lang.Object android.support.v4.util.Preconditions.checkNotNull(java.lang.Object,java.lang.Object):0:0 -> <init>
    2:2:void android.support.v4.app.FragmentHostCallback.<init>(android.app.Activity,android.content.Context,android.os.Handler,int):0 -> <init>
    2:2:void <init>(android.support.v4.app.FragmentActivity):0 -> <init>
    3:3:void android.support.v4.app.FragmentHostCallback.<init>(android.app.Activity,android.content.Context,android.os.Handler,int):0:0 -> <init>
    3:3:void <init>(android.support.v4.app.FragmentActivity):0 -> <init>
android.support.v4.app.FragmentManager -> y.g:
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> b
    java.util.List getFragments() -> c
    boolean isStateSaved() -> d
    boolean popBackStackImmediate() -> e
android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks -> y.g$a:
    void onFragmentCreated(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.os.Bundle) -> a
    void onFragmentDestroyed(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment) -> b
    void onFragmentResumed(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment) -> c
    void onFragmentStarted(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment) -> d
android.support.v4.app.FragmentManagerImpl -> y.h:
    int mCurState -> l
    java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks -> k
    java.util.ArrayList mPostponedTransactions -> z
    android.support.v4.app.FragmentManagerNonConfig mSavedNonConfig -> A
    android.view.animation.Interpolator DECELERATE_QUINT -> C
    java.util.ArrayList mBackStack -> g
    int mNextFragmentIndex -> d
    java.util.ArrayList mAdded -> e
    android.support.v4.app.FragmentContainer mContainer -> n
    boolean mStateSaved -> q
    boolean mDestroyed -> s
    android.util.SparseArray mStateArray -> y
    java.lang.Runnable mExecCommit -> B
    java.util.ArrayList mBackStackIndices -> i
    java.util.ArrayList mTmpAddedFragments -> w
    java.util.ArrayList mTmpRecords -> u
    android.util.SparseArray mActive -> f
    android.os.Bundle mStateBundle -> x
    android.support.v4.app.Fragment mParent -> o
    android.view.animation.Interpolator DECELERATE_CUBIC -> D
    android.support.v4.app.FragmentHostCallback mHost -> m
    java.util.ArrayList mPendingActions -> b
    boolean mStopped -> r
    boolean mHavePendingDeferredStart -> t
    java.util.ArrayList mAvailBackStackIndices -> j
    java.util.ArrayList mCreatedMenus -> h
    android.support.v4.app.Fragment mPrimaryNav -> p
    java.util.ArrayList mTmpIsPop -> v
    boolean mExecutingActions -> c
    1:1:android.support.v4.app.FragmentManager android.support.v4.app.Fragment.getFragmentManager():0:0 -> A
    1:1:void dispatchOnFragmentPaused(android.support.v4.app.Fragment,boolean):0 -> A
    2:2:void dispatchOnFragmentPaused(android.support.v4.app.Fragment,boolean):0:0 -> A
    1:1:android.support.v4.app.FragmentManager android.support.v4.app.Fragment.getFragmentManager():0:0 -> B
    1:1:void dispatchOnFragmentPreAttached(android.support.v4.app.Fragment,android.content.Context,boolean):0 -> B
    2:2:void dispatchOnFragmentPreAttached(android.support.v4.app.Fragment,android.content.Context,boolean):0:0 -> B
    1:1:android.support.v4.app.FragmentManager android.support.v4.app.Fragment.getFragmentManager():0:0 -> C
    1:1:void dispatchOnFragmentPreCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean):0 -> C
    2:2:void dispatchOnFragmentPreCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean):0:0 -> C
    1:1:android.support.v4.app.FragmentManager android.support.v4.app.Fragment.getFragmentManager():0:0 -> D
    1:1:void dispatchOnFragmentResumed(android.support.v4.app.Fragment,boolean):0 -> D
    2:2:void dispatchOnFragmentResumed(android.support.v4.app.Fragment,boolean):0:0 -> D
    1:1:android.support.v4.app.FragmentManager android.support.v4.app.Fragment.getFragmentManager():0:0 -> E
    1:1:void dispatchOnFragmentSaveInstanceState(android.support.v4.app.Fragment,android.os.Bundle,boolean):0 -> E
    2:2:void dispatchOnFragmentSaveInstanceState(android.support.v4.app.Fragment,android.os.Bundle,boolean):0:0 -> E
    1:1:android.support.v4.app.FragmentManager android.support.v4.app.Fragment.getFragmentManager():0:0 -> F
    1:1:void dispatchOnFragmentStarted(android.support.v4.app.Fragment,boolean):0 -> F
    2:2:void dispatchOnFragmentStarted(android.support.v4.app.Fragment,boolean):0:0 -> F
    1:1:android.support.v4.app.FragmentManager android.support.v4.app.Fragment.getFragmentManager():0:0 -> G
    1:1:void dispatchOnFragmentStopped(android.support.v4.app.Fragment,boolean):0 -> G
    2:2:void dispatchOnFragmentStopped(android.support.v4.app.Fragment,boolean):0:0 -> G
    1:1:android.support.v4.app.FragmentManager android.support.v4.app.Fragment.getFragmentManager():0:0 -> H
    1:1:void dispatchOnFragmentViewDestroyed(android.support.v4.app.Fragment,boolean):0 -> H
    2:2:void dispatchOnFragmentViewDestroyed(android.support.v4.app.Fragment,boolean):0:0 -> H
    1:1:boolean android.support.v4.app.Fragment.performOptionsItemSelected(android.view.MenuItem):0:0 -> I
    1:1:boolean dispatchOptionsItemSelected(android.view.MenuItem):0 -> I
    1:1:void android.support.v4.app.Fragment.performOptionsMenuClosed(android.view.Menu):0:0 -> J
    1:1:void dispatchOptionsMenuClosed(android.view.Menu):0 -> J
    1:1:void android.support.v4.app.Fragment.performPictureInPictureModeChanged(boolean):0:0 -> K
    1:1:void dispatchPictureInPictureModeChanged(boolean):0 -> K
    1:1:boolean android.support.v4.app.Fragment.performPrepareOptionsMenu(android.view.Menu):0:0 -> L
    1:1:boolean dispatchPrepareOptionsMenu(android.view.Menu):0 -> L
    void dispatchResume() -> M
    void dispatchStart() -> N
    void dispatchStateChange(int) -> O
    1:1:android.os.Handler android.support.v4.app.FragmentHostCallback.getHandler():0:0 -> P
    1:1:void ensureExecReady(boolean):0 -> P
    2:2:void ensureExecReady(boolean):0:0 -> P
    1:1:boolean android.support.v4.app.FragmentManagerImpl.generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList):0:0 -> Q
    1:1:boolean execPendingActions():0 -> Q
    2:2:android.os.Handler android.support.v4.app.FragmentHostCallback.getHandler():0:0 -> Q
    2:2:boolean android.support.v4.app.FragmentManagerImpl.generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList):0 -> Q
    2:2:boolean execPendingActions():0 -> Q
    3:3:boolean android.support.v4.app.FragmentManagerImpl.generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList):0:0 -> Q
    3:3:boolean execPendingActions():0 -> Q
    4:4:boolean execPendingActions():0:0 -> Q
    5:5:void android.support.v4.app.FragmentManagerImpl.doPendingDeferredStart():0:0 -> Q
    5:5:boolean execPendingActions():0 -> Q
    6:6:boolean execPendingActions():0:0 -> Q
    7:7:boolean android.support.v4.app.FragmentManagerImpl.generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList):0:0 -> Q
    7:7:boolean execPendingActions():0 -> Q
    1:1:android.support.v4.app.Fragment android.support.v4.app.FragmentManagerImpl.getPrimaryNavigationFragment():0:0 -> R
    1:1:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> R
    2:2:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> R
    3:3:android.support.v4.app.Fragment android.support.v4.app.BackStackRecord.expandOps(java.util.ArrayList,android.support.v4.app.Fragment):0:0 -> R
    3:3:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> R
    4:4:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> R
    5:5:android.support.v4.app.Fragment android.support.v4.app.BackStackRecord.trackAddedFragmentsInPop(java.util.ArrayList,android.support.v4.app.Fragment):0:0 -> R
    5:5:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> R
    6:6:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> R
    7:7:void android.support.v4.app.FragmentManagerImpl.executeOps(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> R
    7:7:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> R
    8:8:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> R
    9:9:void android.support.v4.util.ArraySet.<init>():0:0 -> R
    9:9:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> R
    10:10:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> R
    11:11:int android.support.v4.util.ArraySet.size():0:0 -> R
    11:11:void android.support.v4.app.FragmentManagerImpl.makeRemovedFragmentsInvisible(android.support.v4.util.ArraySet):0 -> R
    11:11:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> R
    12:12:java.lang.Object android.support.v4.util.ArraySet.valueAt(int):0:0 -> R
    12:12:void android.support.v4.app.FragmentManagerImpl.makeRemovedFragmentsInvisible(android.support.v4.util.ArraySet):0 -> R
    12:12:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> R
    13:13:void android.support.v4.app.FragmentManagerImpl.makeRemovedFragmentsInvisible(android.support.v4.util.ArraySet):0:0 -> R
    13:13:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> R
    14:14:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> R
    15:15:void android.support.v4.app.FragmentManagerImpl.freeBackStackIndex(int):0:0 -> R
    15:15:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> R
    16:16:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> R
    17:17:void android.support.v4.app.FragmentManagerImpl.freeBackStackIndex(int):0:0 -> R
    17:17:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> R
    18:18:void android.support.v4.app.BackStackRecord.runOnCommitRunnables():0:0 -> R
    18:18:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> R
    1:1:boolean android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener.isReady():0:0 -> S
    1:1:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList):0 -> S
    2:2:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList):0:0 -> S
    3:3:void android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener.cancelTransaction():0:0 -> S
    3:3:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList):0 -> S
    4:4:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList):0:0 -> S
    android.support.v4.app.Fragment findFragmentById(int) -> T
    1:1:android.support.v4.app.Fragment android.support.v4.app.Fragment.findFragmentByWho(java.lang.String):0:0 -> U
    1:1:android.support.v4.app.Fragment findFragmentByWho(java.lang.String):0 -> U
    void makeActive(android.support.v4.app.Fragment) -> V
    1:1:void moveFragmentToExpectedState(android.support.v4.app.Fragment):0:0 -> W
    2:2:void android.support.v4.app.FragmentManagerImpl.completeShowHideFragment(android.support.v4.app.Fragment):0:0 -> W
    2:2:void moveFragmentToExpectedState(android.support.v4.app.Fragment):0 -> W
    void moveToState(int,boolean) -> X
    1:1:android.content.Context android.support.v4.app.FragmentHostCallback.getContext():0:0 -> Y
    1:1:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    2:2:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    3:3:android.support.v4.app.Fragment android.support.v4.app.FragmentManagerImpl.getFragment(android.os.Bundle,java.lang.String):0:0 -> Y
    3:3:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    4:4:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    5:5:android.support.v4.app.Fragment android.support.v4.app.FragmentManagerImpl.getFragment(android.os.Bundle,java.lang.String):0:0 -> Y
    5:5:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    6:6:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    7:7:android.support.v4.app.FragmentManagerImpl android.support.v4.app.FragmentHostCallback.getFragmentManagerImpl():0:0 -> Y
    7:7:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    8:8:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    9:9:android.content.Context android.support.v4.app.FragmentHostCallback.getContext():0:0 -> Y
    9:9:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    10:10:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    11:11:void android.support.v4.app.Fragment.onAttach(android.content.Context):0:0 -> Y
    11:11:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    12:12:android.app.Activity android.support.v4.app.FragmentHostCallback.getActivity():0:0 -> Y
    12:12:void android.support.v4.app.Fragment.onAttach(android.content.Context):0 -> Y
    12:12:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    13:13:void android.support.v4.app.Fragment.onAttach(android.content.Context):0:0 -> Y
    13:13:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    14:14:void android.support.v4.app.Fragment.onAttach(android.app.Activity):0:0 -> Y
    14:14:void android.support.v4.app.Fragment.onAttach(android.content.Context):0 -> Y
    14:14:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    15:15:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    16:16:void android.support.v4.app.FragmentActivity$HostCallbacks.onAttachFragment(android.support.v4.app.Fragment):0:0 -> Y
    16:16:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    17:17:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    18:18:android.content.Context android.support.v4.app.FragmentHostCallback.getContext():0:0 -> Y
    18:18:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    19:19:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    20:20:void android.support.v4.app.Fragment.performCreate(android.os.Bundle):0:0 -> Y
    20:20:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    21:21:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    22:22:void android.support.v4.app.Fragment.performCreate(android.os.Bundle):0:0 -> Y
    22:22:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    23:23:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    24:24:void android.support.v4.app.FragmentManagerImpl.ensureInflatedFragmentView(android.support.v4.app.Fragment):0:0 -> Y
    24:24:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    25:25:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    26:26:android.content.Context android.support.v4.app.Fragment.requireContext():0:0 -> Y
    26:26:android.content.res.Resources android.support.v4.app.Fragment.getResources():0 -> Y
    26:26:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    27:27:android.content.res.Resources android.support.v4.app.Fragment.getResources():0:0 -> Y
    27:27:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    28:28:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    29:29:android.content.Context android.support.v4.app.Fragment.requireContext():0:0 -> Y
    29:29:android.content.res.Resources android.support.v4.app.Fragment.getResources():0 -> Y
    29:29:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    30:30:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    31:31:void android.support.v4.app.Fragment.performActivityCreated(android.os.Bundle):0:0 -> Y
    31:31:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    32:32:void android.support.v4.app.Fragment.onActivityCreated(android.os.Bundle):0:0 -> Y
    32:32:void android.support.v4.app.Fragment.performActivityCreated(android.os.Bundle):0 -> Y
    32:32:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    33:33:void android.support.v4.app.Fragment.performActivityCreated(android.os.Bundle):0:0 -> Y
    33:33:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    34:34:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    35:35:void android.support.v4.app.Fragment.performStart():0:0 -> Y
    35:35:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    36:36:void android.support.v4.app.Fragment.onStart():0:0 -> Y
    36:36:void android.support.v4.app.Fragment.performStart():0 -> Y
    36:36:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    37:37:void android.support.v4.app.Fragment.performStart():0:0 -> Y
    37:37:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    38:38:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    39:39:void android.support.v4.app.Fragment.performResume():0:0 -> Y
    39:39:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    40:40:void android.support.v4.app.Fragment.onResume():0:0 -> Y
    40:40:void android.support.v4.app.Fragment.performResume():0 -> Y
    40:40:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    41:41:void android.support.v4.app.Fragment.performResume():0:0 -> Y
    41:41:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    42:42:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    43:43:void android.support.v4.app.Fragment.performPause():0:0 -> Y
    43:43:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    44:44:void android.support.v4.app.FragmentManagerImpl.dispatchPause():0:0 -> Y
    44:44:void android.support.v4.app.Fragment.performPause():0 -> Y
    44:44:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    45:45:void android.support.v4.app.Fragment.performPause():0:0 -> Y
    45:45:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    46:46:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    47:47:void android.support.v4.app.Fragment.performPause():0:0 -> Y
    47:47:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    48:48:void android.support.v4.app.Fragment.performStop():0:0 -> Y
    48:48:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    49:49:void android.support.v4.app.FragmentManagerImpl.dispatchStop():0:0 -> Y
    49:49:void android.support.v4.app.Fragment.performStop():0 -> Y
    49:49:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    50:50:void android.support.v4.app.Fragment.performStop():0:0 -> Y
    50:50:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    51:51:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    52:52:void android.support.v4.app.Fragment.performStop():0:0 -> Y
    52:52:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    53:53:void android.support.v4.app.Fragment.performDestroyView():0:0 -> Y
    53:53:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    54:54:void android.support.v4.app.FragmentManagerImpl.dispatchDestroyView():0:0 -> Y
    54:54:void android.support.v4.app.Fragment.performDestroyView():0 -> Y
    54:54:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    55:55:void android.support.v4.app.Fragment.performDestroyView():0:0 -> Y
    55:55:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    56:56:void android.support.v4.app.Fragment.onDestroyView():0:0 -> Y
    56:56:void android.support.v4.app.Fragment.performDestroyView():0 -> Y
    56:56:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    57:57:void android.support.v4.app.Fragment.performDestroyView():0:0 -> Y
    57:57:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    58:58:void android.support.v4.app.LoaderManagerImpl.markForRedelivery():0:0 -> Y
    58:58:void android.support.v4.app.Fragment.performDestroyView():0 -> Y
    58:58:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    59:59:void android.support.v4.app.LoaderManagerImpl$LoaderViewModel.markForRedelivery():0:0 -> Y
    59:59:void android.support.v4.app.LoaderManagerImpl.markForRedelivery():0 -> Y
    59:59:void android.support.v4.app.Fragment.performDestroyView():0 -> Y
    59:59:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    60:60:void android.support.v4.app.Fragment.performDestroyView():0:0 -> Y
    60:60:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    61:61:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    62:62:void android.support.v4.app.Fragment.performDestroy():0:0 -> Y
    62:62:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    63:63:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    64:64:void android.support.v4.app.Fragment.performDestroy():0:0 -> Y
    64:64:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    65:65:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    66:66:void android.support.v4.app.Fragment.performDetach():0:0 -> Y
    66:66:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    67:67:void android.support.v4.app.Fragment.onDetach():0:0 -> Y
    67:67:void android.support.v4.app.Fragment.performDetach():0 -> Y
    67:67:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    68:68:void android.support.v4.app.Fragment.performDetach():0:0 -> Y
    68:68:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    69:69:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    70:70:void android.support.v4.app.FragmentManagerImpl.makeInactive(android.support.v4.app.Fragment):0:0 -> Y
    70:70:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    71:71:void android.support.v4.app.Fragment.initState():0:0 -> Y
    71:71:void android.support.v4.app.FragmentManagerImpl.makeInactive(android.support.v4.app.Fragment):0 -> Y
    71:71:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    72:72:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    73:73:void android.support.v4.app.Fragment.setStateAfterAnimating(int):0:0 -> Y
    73:73:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0 -> Y
    74:74:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean):0:0 -> Y
    1:1:void android.support.v4.app.Fragment.noteStateNotSaved():0:0 -> Z
    1:1:void noteStateNotSaved():0 -> Z
    1:1:void android.support.v4.app.Fragment.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> a
    1:1:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
    2:2:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> a
    3:3:void android.support.v4.app.BackStackRecord.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> a
    3:3:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
    4:4:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> a
    1:1:boolean android.support.v4.app.BackStackRecord.isPostponed():0:0 -> a0
    1:1:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,android.support.v4.util.ArraySet):0 -> a0
    2:2:boolean android.support.v4.app.BackStackRecord.isFragmentPostponed(android.support.v4.app.BackStackRecord$Op):0:0 -> a0
    2:2:boolean android.support.v4.app.BackStackRecord.isPostponed():0 -> a0
    2:2:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,android.support.v4.util.ArraySet):0 -> a0
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> b
    void removeFragment(android.support.v4.app.Fragment) -> b0
    java.util.List getFragments() -> c
    void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> c0
    boolean isStateSaved() -> d
    1:1:java.util.List android.support.v4.app.FragmentManagerNonConfig.getFragments():0:0 -> d0
    1:1:void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig):0 -> d0
    2:2:java.util.List android.support.v4.app.FragmentManagerNonConfig.getChildNonConfigs():0:0 -> d0
    2:2:void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig):0 -> d0
    3:3:java.util.List android.support.v4.app.FragmentManagerNonConfig.getViewModelStores():0:0 -> d0
    3:3:void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig):0 -> d0
    4:4:void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig):0:0 -> d0
    5:5:android.content.Context android.support.v4.app.FragmentHostCallback.getContext():0:0 -> d0
    5:5:void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig):0 -> d0
    6:6:void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig):0:0 -> d0
    7:7:android.support.v4.app.Fragment android.support.v4.app.FragmentState.instantiate(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment,android.support.v4.app.FragmentManagerNonConfig,android.arch.lifecycle.ViewModelStore):0:0 -> d0
    7:7:void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig):0 -> d0
    8:8:android.content.Context android.support.v4.app.FragmentHostCallback.getContext():0:0 -> d0
    8:8:android.support.v4.app.Fragment android.support.v4.app.FragmentState.instantiate(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment,android.support.v4.app.FragmentManagerNonConfig,android.arch.lifecycle.ViewModelStore):0 -> d0
    8:8:void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig):0 -> d0
    9:9:android.support.v4.app.Fragment android.support.v4.app.FragmentState.instantiate(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment,android.support.v4.app.FragmentManagerNonConfig,android.arch.lifecycle.ViewModelStore):0:0 -> d0
    9:9:void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig):0 -> d0
    10:10:void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig):0:0 -> d0
    11:11:java.util.List android.support.v4.app.FragmentManagerNonConfig.getFragments():0:0 -> d0
    11:11:void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig):0 -> d0
    12:12:void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig):0:0 -> d0
    13:13:android.support.v4.app.BackStackRecord android.support.v4.app.BackStackState.instantiate(android.support.v4.app.FragmentManagerImpl):0:0 -> d0
    13:13:void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig):0 -> d0
    14:14:void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig):0:0 -> d0
    15:15:void android.support.v4.app.FragmentManagerImpl.setBackStackIndex(int,android.support.v4.app.BackStackRecord):0:0 -> d0
    15:15:void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig):0 -> d0
    16:16:void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig):0:0 -> d0
    1:1:boolean android.support.v4.app.FragmentManagerImpl.popBackStackImmediate(java.lang.String,int,int):0:0 -> e
    1:1:boolean popBackStackImmediate():0 -> e
    2:2:android.support.v4.app.FragmentManager android.support.v4.app.Fragment.peekChildFragmentManager():0:0 -> e
    2:2:boolean android.support.v4.app.FragmentManagerImpl.popBackStackImmediate(java.lang.String,int,int):0 -> e
    2:2:boolean popBackStackImmediate():0 -> e
    3:3:boolean android.support.v4.app.FragmentManagerImpl.popBackStackImmediate(java.lang.String,int,int):0:0 -> e
    3:3:boolean popBackStackImmediate():0 -> e
    4:4:boolean android.support.v4.app.FragmentManagerImpl.popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int):0:0 -> e
    4:4:boolean android.support.v4.app.FragmentManagerImpl.popBackStackImmediate(java.lang.String,int,int):0 -> e
    4:4:boolean popBackStackImmediate():0 -> e
    5:5:boolean android.support.v4.app.FragmentManagerImpl.popBackStackImmediate(java.lang.String,int,int):0:0 -> e
    5:5:boolean popBackStackImmediate():0 -> e
    6:6:void android.support.v4.app.FragmentManagerImpl.doPendingDeferredStart():0:0 -> e
    6:6:boolean android.support.v4.app.FragmentManagerImpl.popBackStackImmediate(java.lang.String,int,int):0 -> e
    6:6:boolean popBackStackImmediate():0 -> e
    7:7:boolean android.support.v4.app.FragmentManagerImpl.popBackStackImmediate(java.lang.String,int,int):0:0 -> e
    7:7:boolean popBackStackImmediate():0 -> e
    1:1:void android.support.v4.app.FragmentManagerImpl.forcePostponedTransactions():0:0 -> e0
    1:1:android.os.Parcelable saveAllState():0 -> e0
    2:2:void android.support.v4.app.FragmentManagerImpl.endAnimatingAwayFragments():0:0 -> e0
    2:2:android.os.Parcelable saveAllState():0 -> e0
    3:3:android.os.Parcelable saveAllState():0:0 -> e0
    4:4:android.os.Bundle android.support.v4.app.FragmentManagerImpl.saveFragmentBasicState(android.support.v4.app.Fragment):0:0 -> e0
    4:4:android.os.Parcelable saveAllState():0 -> e0
    5:5:void android.support.v4.app.Fragment.performSaveInstanceState(android.os.Bundle):0:0 -> e0
    5:5:android.os.Bundle android.support.v4.app.FragmentManagerImpl.saveFragmentBasicState(android.support.v4.app.Fragment):0 -> e0
    5:5:android.os.Parcelable saveAllState():0 -> e0
    6:6:android.os.Bundle android.support.v4.app.FragmentManagerImpl.saveFragmentBasicState(android.support.v4.app.Fragment):0:0 -> e0
    6:6:android.os.Parcelable saveAllState():0 -> e0
    7:7:android.os.Parcelable saveAllState():0:0 -> e0
    8:8:void android.support.v4.app.FragmentManagerImpl.putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment):0:0 -> e0
    8:8:android.os.Parcelable saveAllState():0 -> e0
    9:9:android.os.Parcelable saveAllState():0:0 -> e0
    10:10:void android.support.v4.app.FragmentManagerImpl.putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment):0:0 -> e0
    10:10:android.os.Parcelable saveAllState():0 -> e0
    11:11:android.os.Parcelable saveAllState():0:0 -> e0
    void addAddedFragments(android.support.v4.util.ArraySet) -> f
    void saveNonConfig() -> f0
    1:1:void android.support.v4.app.FragmentManagerImpl.moveToState(android.support.v4.app.Fragment):0:0 -> g
    1:1:void addFragment(android.support.v4.app.Fragment,boolean):0 -> g
    2:2:void addFragment(android.support.v4.app.Fragment,boolean):0:0 -> g
    1:1:android.os.Handler android.support.v4.app.FragmentHostCallback.getHandler():0:0 -> g0
    1:1:void scheduleCommit():0 -> g0
    2:2:void scheduleCommit():0:0 -> g0
    3:3:android.os.Handler android.support.v4.app.FragmentHostCallback.getHandler():0:0 -> g0
    3:3:void scheduleCommit():0 -> g0
    4:4:void scheduleCommit():0:0 -> g0
    void attachFragment(android.support.v4.app.Fragment) -> h
    1:1:android.support.v4.app.FragmentManager android.support.v4.app.Fragment.getFragmentManager():0:0 -> h0
    1:1:void setPrimaryNavigationFragment(android.support.v4.app.Fragment):0 -> h0
    2:2:void setPrimaryNavigationFragment(android.support.v4.app.Fragment):0:0 -> h0
    void burpActive() -> i
    1:1:java.util.List android.support.v4.app.FragmentManagerNonConfig.getFragments():0:0 -> i0
    1:1:void setRetaining(android.support.v4.app.FragmentManagerNonConfig):0 -> i0
    2:2:void setRetaining(android.support.v4.app.FragmentManagerNonConfig):0:0 -> i0
    3:3:java.util.List android.support.v4.app.FragmentManagerNonConfig.getChildNonConfigs():0:0 -> i0
    3:3:void setRetaining(android.support.v4.app.FragmentManagerNonConfig):0 -> i0
    4:4:void setRetaining(android.support.v4.app.FragmentManagerNonConfig):0:0 -> i0
    void checkStateLoss() -> j
    1:1:void android.support.v4.app.FragmentManagerImpl.performPendingDeferredStart(android.support.v4.app.Fragment):0:0 -> j0
    1:1:void startPendingDeferredFragments():0 -> j0
    void cleanupExec() -> k
    1:1:void android.support.v4.app.FragmentActivity$HostCallbacks.onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> k0
    1:1:void throwException(java.lang.RuntimeException):0 -> k0
    2:2:void throwException(java.lang.RuntimeException):0:0 -> k0
    void completeExecute(android.support.v4.app.BackStackRecord,boolean,boolean,boolean) -> l
    void detachFragment(android.support.v4.app.Fragment) -> m
    void dispatchActivityCreated() -> n
    1:1:void android.support.v4.app.Fragment.onConfigurationChanged(android.content.res.Configuration):0:0 -> o
    1:1:void android.support.v4.app.Fragment.performConfigurationChanged(android.content.res.Configuration):0 -> o
    1:1:void dispatchConfigurationChanged(android.content.res.Configuration):0 -> o
    2:2:void android.support.v4.app.Fragment.performConfigurationChanged(android.content.res.Configuration):0:0 -> o
    2:2:void dispatchConfigurationChanged(android.content.res.Configuration):0 -> o
    1:1:android.content.Context android.support.v4.app.FragmentHostCallback.getContext():0:0 -> onCreateView
    1:1:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    2:2:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    3:3:boolean android.support.v4.app.Fragment.isSupportFragmentClass(android.content.Context,java.lang.String):0:0 -> onCreateView
    3:3:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    4:4:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    5:5:void android.support.v4.app.FragmentManagerImpl.moveToState(android.support.v4.app.Fragment):0:0 -> onCreateView
    5:5:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    6:6:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    1:1:boolean android.support.v4.app.Fragment.performContextItemSelected(android.view.MenuItem):0:0 -> p
    1:1:boolean dispatchContextItemSelected(android.view.MenuItem):0 -> p
    void dispatchCreate() -> q
    1:1:boolean android.support.v4.app.Fragment.performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater):0:0 -> r
    1:1:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater):0 -> r
    2:2:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater):0:0 -> r
    void dispatchDestroy() -> s
    1:1:void android.support.v4.app.Fragment.onLowMemory():0:0 -> t
    1:1:void android.support.v4.app.Fragment.performLowMemory():0 -> t
    1:1:void dispatchLowMemory():0 -> t
    2:2:void android.support.v4.app.Fragment.performLowMemory():0:0 -> t
    2:2:void dispatchLowMemory():0 -> t
    1:1:void android.support.v4.app.Fragment.performMultiWindowModeChanged(boolean):0:0 -> u
    1:1:void dispatchMultiWindowModeChanged(boolean):0 -> u
    1:1:android.support.v4.app.FragmentManager android.support.v4.app.Fragment.getFragmentManager():0:0 -> v
    1:1:void dispatchOnFragmentActivityCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean):0 -> v
    2:2:void dispatchOnFragmentActivityCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean):0:0 -> v
    1:1:android.support.v4.app.FragmentManager android.support.v4.app.Fragment.getFragmentManager():0:0 -> w
    1:1:void dispatchOnFragmentAttached(android.support.v4.app.Fragment,android.content.Context,boolean):0 -> w
    2:2:void dispatchOnFragmentAttached(android.support.v4.app.Fragment,android.content.Context,boolean):0:0 -> w
    1:1:android.support.v4.app.FragmentManager android.support.v4.app.Fragment.getFragmentManager():0:0 -> x
    1:1:void dispatchOnFragmentCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean):0 -> x
    2:2:void dispatchOnFragmentCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean):0:0 -> x
    1:1:android.support.v4.app.FragmentManager android.support.v4.app.Fragment.getFragmentManager():0:0 -> y
    1:1:void dispatchOnFragmentDestroyed(android.support.v4.app.Fragment,boolean):0 -> y
    2:2:void dispatchOnFragmentDestroyed(android.support.v4.app.Fragment,boolean):0:0 -> y
    1:1:android.support.v4.app.FragmentManager android.support.v4.app.Fragment.getFragmentManager():0:0 -> z
    1:1:void dispatchOnFragmentDetached(android.support.v4.app.Fragment,boolean):0 -> z
    2:2:void dispatchOnFragmentDetached(android.support.v4.app.Fragment,boolean):0:0 -> z
android.support.v4.app.FragmentManagerImpl$1 -> y.h$a:
    android.support.v4.app.FragmentManagerImpl this$0 -> b
android.support.v4.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder -> y.h$b:
    boolean mRecursive -> b
    android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks mCallback -> a
android.support.v4.app.FragmentManagerImpl$FragmentTag -> y.h$c:
    int[] Fragment -> a
android.support.v4.app.FragmentManagerImpl$OpGenerator -> y.h$d:
    boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> a
android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener -> y.h$e:
    android.support.v4.app.BackStackRecord mRecord -> b
    boolean mIsBack -> a
    int mNumPostponed -> c
    void completeTransaction() -> a
android.support.v4.app.FragmentManagerNonConfig -> y.i:
    java.util.List mChildNonConfigs -> b
    java.util.List mFragments -> a
    java.util.List mViewModelStores -> c
android.support.v4.app.FragmentManagerState -> y.j:
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    int mPrimaryNavActiveIndex -> d
    int mNextFragmentIndex -> e
    android.support.v4.app.FragmentState[] mActive -> a
android.support.v4.app.FragmentManagerState$1 -> y.j$a:
    1:1:android.support.v4.app.FragmentManagerState android.support.v4.app.FragmentManagerState$1.createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:android.support.v4.app.FragmentManagerState[] android.support.v4.app.FragmentManagerState$1.newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
android.support.v4.app.FragmentState -> y.k:
    java.lang.String mTag -> f
    android.support.v4.app.Fragment mInstance -> l
    boolean mHidden -> j
    java.lang.String mClassName -> a
    int mFragmentId -> d
    boolean mRetainInstance -> g
    android.os.Bundle mArguments -> i
    int mContainerId -> e
    boolean mDetached -> h
    int mIndex -> b
    android.os.Bundle mSavedFragmentState -> k
    boolean mFromLayout -> c
android.support.v4.app.FragmentState$1 -> y.k$a:
    1:1:android.support.v4.app.FragmentState android.support.v4.app.FragmentState$1.createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:android.support.v4.app.FragmentState[] android.support.v4.app.FragmentState$1.newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
android.support.v4.app.FragmentTransition -> y.p:
    android.support.v4.app.FragmentTransitionImpl PLATFORM_IMPL -> b
    android.support.v4.app.FragmentTransitionImpl SUPPORT_IMPL -> c
    int[] INVERSE_OPS -> a
    1:1:android.support.v4.app.FragmentTransitionImpl android.support.v4.app.FragmentTransition.resolveSupportImpl():0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    1:1:int android.support.v4.util.SimpleArrayMap.size():0:0 -> a
    1:1:void addSharedElementsWithMatchingNames(java.util.ArrayList,android.support.v4.util.ArrayMap,java.util.Collection):0 -> a
    2:2:void addSharedElementsWithMatchingNames(java.util.ArrayList,android.support.v4.util.ArrayMap,java.util.Collection):0:0 -> a
    3:3:java.lang.String android.support.v4.view.ViewCompat.getTransitionName(android.view.View):0:0 -> a
    3:3:void addSharedElementsWithMatchingNames(java.util.ArrayList,android.support.v4.util.ArrayMap,java.util.Collection):0 -> a
    4:4:void addSharedElementsWithMatchingNames(java.util.ArrayList,android.support.v4.util.ArrayMap,java.util.Collection):0:0 -> a
    1:1:android.support.v4.app.FragmentTransition$FragmentContainerTransition android.support.v4.app.FragmentTransition.ensureContainer(android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int):0:0 -> b
    1:1:void addToFirstInLastOut(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$Op,android.util.SparseArray,boolean,boolean):0 -> b
    2:2:void addToFirstInLastOut(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$Op,android.util.SparseArray,boolean,boolean):0:0 -> b
    3:3:android.support.v4.app.FragmentTransition$FragmentContainerTransition android.support.v4.app.FragmentTransition.ensureContainer(android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int):0:0 -> b
    3:3:void addToFirstInLastOut(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$Op,android.util.SparseArray,boolean,boolean):0 -> b
    4:4:void addToFirstInLastOut(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$Op,android.util.SparseArray,boolean,boolean):0:0 -> b
    void callSharedElementStartEnd(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap,boolean) -> c
    boolean canHandleAll(android.support.v4.app.FragmentTransitionImpl,java.util.List) -> d
    1:1:android.view.View android.support.v4.app.Fragment.getView():0:0 -> e
    1:1:android.support.v4.util.ArrayMap captureInSharedElements(android.support.v4.app.FragmentTransitionImpl,android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition):0 -> e
    2:2:android.support.v4.util.ArrayMap captureInSharedElements(android.support.v4.app.FragmentTransitionImpl,android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition):0:0 -> e
    1:1:android.view.View android.support.v4.app.Fragment.getView():0:0 -> f
    1:1:android.support.v4.util.ArrayMap captureOutSharedElements(android.support.v4.app.FragmentTransitionImpl,android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition):0 -> f
    2:2:android.support.v4.util.ArrayMap captureOutSharedElements(android.support.v4.app.FragmentTransitionImpl,android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition):0:0 -> f
    android.support.v4.app.FragmentTransitionImpl chooseImpl(android.support.v4.app.Fragment,android.support.v4.app.Fragment) -> g
    1:1:android.view.View android.support.v4.app.Fragment.getView():0:0 -> h
    1:1:java.util.ArrayList configureEnteringExitingViews(android.support.v4.app.FragmentTransitionImpl,java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.view.View):0 -> h
    2:2:java.util.ArrayList configureEnteringExitingViews(android.support.v4.app.FragmentTransitionImpl,java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.view.View):0:0 -> h
    java.lang.Object getEnterTransition(android.support.v4.app.FragmentTransitionImpl,android.support.v4.app.Fragment,boolean) -> i
    java.lang.Object getExitTransition(android.support.v4.app.FragmentTransitionImpl,android.support.v4.app.Fragment,boolean) -> j
    android.view.View getInEpicenterView(android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> k
    java.lang.Object getSharedElementTransition(android.support.v4.app.FragmentTransitionImpl,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean) -> l
    void setOutEpicenter(android.support.v4.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,android.support.v4.util.ArrayMap,boolean,android.support.v4.app.BackStackRecord) -> m
    void setViewVisibility(java.util.ArrayList,int) -> n
    1:1:void android.support.v4.app.FragmentTransition.calculatePopFragments(android.support.v4.app.BackStackRecord,android.util.SparseArray,boolean):0:0 -> o
    1:1:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    2:2:void android.support.v4.app.FragmentTransition.calculateFragments(android.support.v4.app.BackStackRecord,android.util.SparseArray,boolean):0:0 -> o
    2:2:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    3:3:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0:0 -> o
    4:4:android.content.Context android.support.v4.app.FragmentHostCallback.getContext():0:0 -> o
    4:4:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    5:5:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0:0 -> o
    6:6:android.support.v4.util.ArrayMap android.support.v4.app.FragmentTransition.calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> o
    6:6:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    7:7:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0:0 -> o
    8:8:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0:0 -> o
    8:8:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    9:9:java.lang.Object android.support.v4.app.FragmentTransition.configureSharedElementsReordered(android.support.v4.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object):0:0 -> o
    9:9:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    9:9:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    10:10:android.support.v4.util.ArrayMap android.support.v4.app.FragmentTransition.captureInSharedElements(android.support.v4.app.FragmentTransitionImpl,android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition):0:0 -> o
    10:10:java.lang.Object android.support.v4.app.FragmentTransition.configureSharedElementsReordered(android.support.v4.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object):0 -> o
    10:10:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    10:10:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    11:11:android.view.View android.support.v4.app.Fragment.getView():0:0 -> o
    11:11:android.support.v4.util.ArrayMap android.support.v4.app.FragmentTransition.captureInSharedElements(android.support.v4.app.FragmentTransitionImpl,android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition):0 -> o
    11:11:java.lang.Object android.support.v4.app.FragmentTransition.configureSharedElementsReordered(android.support.v4.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object):0 -> o
    11:11:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    11:11:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    12:12:android.support.v4.util.ArrayMap android.support.v4.app.FragmentTransition.captureInSharedElements(android.support.v4.app.FragmentTransitionImpl,android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition):0:0 -> o
    12:12:java.lang.Object android.support.v4.app.FragmentTransition.configureSharedElementsReordered(android.support.v4.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object):0 -> o
    12:12:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    12:12:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    13:13:java.lang.Object android.support.v4.app.FragmentTransition.configureSharedElementsReordered(android.support.v4.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object):0:0 -> o
    13:13:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    13:13:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    14:14:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0:0 -> o
    14:14:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    15:15:java.lang.Object android.support.v4.app.FragmentTransition.mergeTransitions(android.support.v4.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,android.support.v4.app.Fragment,boolean):0:0 -> o
    15:15:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    15:15:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    16:16:void android.support.v4.app.FragmentTransition.replaceHide(android.support.v4.app.FragmentTransitionImpl,java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList):0:0 -> o
    16:16:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    16:16:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    17:17:java.util.ArrayList android.support.v4.app.FragmentTransitionImpl.prepareSetNameOverridesReordered(java.util.ArrayList):0:0 -> o
    17:17:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    17:17:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    18:18:java.lang.String android.support.v4.view.ViewCompat.getTransitionName(android.view.View):0:0 -> o
    18:18:java.util.ArrayList android.support.v4.app.FragmentTransitionImpl.prepareSetNameOverridesReordered(java.util.ArrayList):0 -> o
    18:18:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    18:18:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    19:19:java.util.ArrayList android.support.v4.app.FragmentTransitionImpl.prepareSetNameOverridesReordered(java.util.ArrayList):0:0 -> o
    19:19:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    19:19:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    20:20:void android.support.v4.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> o
    20:20:java.util.ArrayList android.support.v4.app.FragmentTransitionImpl.prepareSetNameOverridesReordered(java.util.ArrayList):0 -> o
    20:20:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    20:20:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    21:21:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0:0 -> o
    21:21:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    22:22:void android.support.v4.app.FragmentTransitionImpl.setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0:0 -> o
    22:22:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    22:22:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    23:23:java.lang.String android.support.v4.view.ViewCompat.getTransitionName(android.view.View):0:0 -> o
    23:23:void android.support.v4.app.FragmentTransitionImpl.setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0 -> o
    23:23:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    23:23:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    24:24:void android.support.v4.app.FragmentTransitionImpl.setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0:0 -> o
    24:24:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    24:24:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    25:25:void android.support.v4.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> o
    25:25:void android.support.v4.app.FragmentTransitionImpl.setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0 -> o
    25:25:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    25:25:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    26:26:void android.support.v4.app.FragmentTransitionImpl.setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0:0 -> o
    26:26:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    26:26:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    27:27:void android.support.v4.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> o
    27:27:void android.support.v4.app.FragmentTransitionImpl.setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0 -> o
    27:27:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    27:27:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    28:28:void android.support.v4.app.FragmentTransitionImpl.setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0:0 -> o
    28:28:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    28:28:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    29:29:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0:0 -> o
    29:29:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    30:30:java.lang.Object android.support.v4.app.FragmentTransition.configureSharedElementsReordered(android.support.v4.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object):0:0 -> o
    30:30:void android.support.v4.app.FragmentTransition.configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    30:30:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    31:31:void android.support.v4.app.FragmentTransition.configureTransitionsOrdered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0:0 -> o
    31:31:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    32:32:java.lang.Object android.support.v4.app.FragmentTransition.configureSharedElementsOrdered(android.support.v4.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object):0:0 -> o
    32:32:void android.support.v4.app.FragmentTransition.configureTransitionsOrdered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    32:32:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    33:33:void android.support.v4.app.FragmentTransition.configureTransitionsOrdered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0:0 -> o
    33:33:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    34:34:java.lang.Object android.support.v4.app.FragmentTransition.mergeTransitions(android.support.v4.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,android.support.v4.app.Fragment,boolean):0:0 -> o
    34:34:void android.support.v4.app.FragmentTransition.configureTransitionsOrdered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    34:34:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    35:35:void android.support.v4.app.FragmentTransition.configureTransitionsOrdered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0:0 -> o
    35:35:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    36:36:void android.support.v4.app.FragmentTransition.scheduleTargetChange(android.support.v4.app.FragmentTransitionImpl,android.view.ViewGroup,android.support.v4.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList):0:0 -> o
    36:36:void android.support.v4.app.FragmentTransition.configureTransitionsOrdered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    36:36:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    37:37:void android.support.v4.app.FragmentTransitionImpl.setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map):0:0 -> o
    37:37:void android.support.v4.app.FragmentTransition.configureTransitionsOrdered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    37:37:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    38:38:void android.support.v4.app.FragmentTransition.configureTransitionsOrdered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0:0 -> o
    38:38:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
    39:39:void android.support.v4.app.FragmentTransitionImpl.scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map):0:0 -> o
    39:39:void android.support.v4.app.FragmentTransition.configureTransitionsOrdered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap):0 -> o
    39:39:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> o
android.support.v4.app.FragmentTransition$1 -> y.l:
    java.util.ArrayList val$exitingViews -> b
android.support.v4.app.FragmentTransition$2 -> y.m:
    java.lang.Object val$exitTransition -> i
    android.support.v4.app.FragmentTransitionImpl val$impl -> c
    java.util.ArrayList val$exitingViews -> h
    java.lang.Object val$enterTransition -> b
    java.util.ArrayList val$enteringViews -> g
    java.util.ArrayList val$sharedElementsIn -> f
    android.view.View val$nonExistentView -> d
    android.support.v4.app.Fragment val$inFragment -> e
android.support.v4.app.FragmentTransition$3 -> y.n:
    android.support.v4.util.ArrayMap val$inSharedElements -> e
    android.graphics.Rect val$epicenter -> h
    android.support.v4.app.Fragment val$inFragment -> b
    android.support.v4.app.FragmentTransitionImpl val$impl -> g
    android.support.v4.app.Fragment val$outFragment -> c
    boolean val$inIsPop -> d
    android.view.View val$epicenterView -> f
android.support.v4.app.FragmentTransition$4 -> y.o:
    android.support.v4.app.Fragment val$inFragment -> h
    android.support.v4.app.Fragment val$outFragment -> i
    android.support.v4.util.ArrayMap val$nameOverrides -> c
    android.graphics.Rect val$inEpicenter -> m
    java.util.ArrayList val$sharedElementsOut -> k
    android.support.v4.app.FragmentTransitionImpl val$impl -> b
    android.support.v4.app.FragmentTransition$FragmentContainerTransition val$fragments -> e
    boolean val$inIsPop -> j
    java.lang.Object val$finalSharedElementTransition -> d
    java.util.ArrayList val$sharedElementsIn -> f
    android.view.View val$nonExistentView -> g
    java.lang.Object val$enterTransition -> l
android.support.v4.app.FragmentTransition$FragmentContainerTransition -> y.p$a:
    android.support.v4.app.BackStackRecord firstOutTransaction -> f
    boolean firstOutIsPop -> e
    android.support.v4.app.Fragment lastIn -> a
    android.support.v4.app.BackStackRecord lastInTransaction -> c
    android.support.v4.app.Fragment firstOut -> d
    boolean lastInIsPop -> b
android.support.v4.app.FragmentTransitionCompat21 -> y.q:
    void addTarget(java.lang.Object,android.view.View) -> a
    void addTargets(java.lang.Object,java.util.ArrayList) -> b
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> c
    boolean canHandle(java.lang.Object) -> e
    java.lang.Object cloneTransition(java.lang.Object) -> f
    java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> k
    void removeTarget(java.lang.Object,android.view.View) -> l
    void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> m
    void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> n
    void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> o
    void setEpicenter(java.lang.Object,android.graphics.Rect) -> p
    void setEpicenter(java.lang.Object,android.view.View) -> q
    void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> r
    void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> s
    java.lang.Object wrapTransitionInSet(java.lang.Object) -> t
    boolean hasSimpleTarget(android.transition.Transition) -> u
android.support.v4.app.FragmentTransitionCompat21$1 -> y.q$a:
    android.graphics.Rect val$epicenter -> a
android.support.v4.app.FragmentTransitionCompat21$2 -> y.q$b:
    android.view.View val$fragmentView -> a
    java.util.ArrayList val$exitingViews -> b
android.support.v4.app.FragmentTransitionCompat21$3 -> y.q$c:
    android.support.v4.app.FragmentTransitionCompat21 this$0 -> g
    java.lang.Object val$sharedElementTransition -> e
    java.lang.Object val$exitTransition -> c
    java.util.ArrayList val$sharedElementsIn -> f
    java.lang.Object val$enterTransition -> a
    java.util.ArrayList val$exitingViews -> d
    java.util.ArrayList val$enteringViews -> b
android.support.v4.app.FragmentTransitionCompat21$4 -> y.q$d:
    android.graphics.Rect val$epicenter -> a
android.support.v4.app.FragmentTransitionImpl -> y.u:
    void addTarget(java.lang.Object,android.view.View) -> a
    void addTargets(java.lang.Object,java.util.ArrayList) -> b
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> c
    void bfsAddViewChildren(java.util.List,android.view.View) -> d
    boolean canHandle(java.lang.Object) -> e
    java.lang.Object cloneTransition(java.lang.Object) -> f
    boolean containedBeforeIndex(java.util.List,android.view.View,int) -> g
    1:1:java.lang.String android.support.v4.view.ViewCompat.getTransitionName(android.view.View):0:0 -> h
    1:1:void findNamedViews(java.util.Map,android.view.View):0 -> h
    2:2:void findNamedViews(java.util.Map,android.view.View):0:0 -> h
    void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> i
    boolean isNullOrEmpty(java.util.List) -> j
    java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> k
    void removeTarget(java.lang.Object,android.view.View) -> l
    void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> m
    void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> n
    void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> o
    void setEpicenter(java.lang.Object,android.graphics.Rect) -> p
    void setEpicenter(java.lang.Object,android.view.View) -> q
    void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> r
    void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> s
    java.lang.Object wrapTransitionInSet(java.lang.Object) -> t
android.support.v4.app.FragmentTransitionImpl$1 -> y.r:
    java.util.ArrayList val$outNames -> f
    java.util.ArrayList val$sharedElementsOut -> e
    java.util.ArrayList val$inNames -> d
    int val$numSharedElements -> b
    java.util.ArrayList val$sharedElementsIn -> c
    1:1:void android.support.v4.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:void android.support.v4.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> run
    3:3:void run():0 -> run
android.support.v4.app.FragmentTransitionImpl$2 -> y.s:
    java.util.Map val$nameOverrides -> c
    java.util.ArrayList val$sharedElementsIn -> b
    1:1:java.lang.String android.support.v4.view.ViewCompat.getTransitionName(android.view.View):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:java.lang.String android.support.v4.app.FragmentTransitionImpl.findKeyForValue(java.util.Map,java.lang.String):0:0 -> run
    3:3:void run():0 -> run
    4:4:void android.support.v4.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> run
    4:4:void run():0 -> run
android.support.v4.app.FragmentTransitionImpl$3 -> y.t:
    java.util.Map val$nameOverrides -> c
    java.util.ArrayList val$sharedElementsIn -> b
    1:1:java.lang.String android.support.v4.view.ViewCompat.getTransitionName(android.view.View):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:void android.support.v4.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> run
    3:3:void run():0 -> run
android.support.v4.app.LoaderManager -> y.v:
    1:1:void android.support.v4.app.LoaderManager.<init>():0:0 -> <init>
    1:1:void $r8$init$bridge():0 -> <init>
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> b
    android.support.v4.app.LoaderManager getInstance(android.arch.lifecycle.LifecycleOwner) -> c
    android.support.v4.app.Fragment android.support.v4.app.FragmentContainer.instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> d
    android.view.View android.support.v4.app.FragmentContainer.onFindViewById(int) -> e
    boolean android.support.v4.app.FragmentContainer.onHasView() -> f
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    android.support.v4.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel -> b
    android.arch.lifecycle.LifecycleOwner mLifecycleOwner -> a
    1:1:android.support.v4.app.LoaderManagerImpl$LoaderViewModel android.support.v4.app.LoaderManagerImpl$LoaderViewModel.getInstance(android.arch.lifecycle.ViewModelStore):0:0 -> <init>
    1:1:void <init>(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.ViewModelStore):0 -> <init>
    2:2:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.Class):0:0 -> <init>
    2:2:android.support.v4.app.LoaderManagerImpl$LoaderViewModel android.support.v4.app.LoaderManagerImpl$LoaderViewModel.getInstance(android.arch.lifecycle.ViewModelStore):0 -> <init>
    2:2:void <init>(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.ViewModelStore):0 -> <init>
    3:3:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelStore.get(java.lang.String):0:0 -> <init>
    3:3:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0 -> <init>
    3:3:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> <init>
    3:3:android.support.v4.app.LoaderManagerImpl$LoaderViewModel android.support.v4.app.LoaderManagerImpl$LoaderViewModel.getInstance(android.arch.lifecycle.ViewModelStore):0 -> <init>
    3:3:void <init>(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.ViewModelStore):0 -> <init>
    4:4:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0:0 -> <init>
    4:4:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> <init>
    4:4:android.support.v4.app.LoaderManagerImpl$LoaderViewModel android.support.v4.app.LoaderManagerImpl$LoaderViewModel.getInstance(android.arch.lifecycle.ViewModelStore):0 -> <init>
    4:4:void <init>(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.ViewModelStore):0 -> <init>
    5:5:android.arch.lifecycle.ViewModel android.support.v4.app.LoaderManagerImpl$LoaderViewModel$1.create(java.lang.Class):0:0 -> <init>
    5:5:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0 -> <init>
    5:5:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> <init>
    5:5:android.support.v4.app.LoaderManagerImpl$LoaderViewModel android.support.v4.app.LoaderManagerImpl$LoaderViewModel.getInstance(android.arch.lifecycle.ViewModelStore):0 -> <init>
    5:5:void <init>(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.ViewModelStore):0 -> <init>
    6:6:void android.arch.lifecycle.ViewModelStore.put(java.lang.String,android.arch.lifecycle.ViewModel):0:0 -> <init>
    6:6:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0 -> <init>
    6:6:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> <init>
    6:6:android.support.v4.app.LoaderManagerImpl$LoaderViewModel android.support.v4.app.LoaderManagerImpl$LoaderViewModel.getInstance(android.arch.lifecycle.ViewModelStore):0 -> <init>
    6:6:void <init>(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.ViewModelStore):0 -> <init>
    7:7:android.support.v4.app.LoaderManagerImpl$LoaderViewModel android.support.v4.app.LoaderManagerImpl$LoaderViewModel.getInstance(android.arch.lifecycle.ViewModelStore):0:0 -> <init>
    7:7:void <init>(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.ViewModelStore):0 -> <init>
    8:8:void <init>(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.ViewModelStore):0:0 -> <init>
    9:9:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.Class):0:0 -> <init>
    9:9:android.support.v4.app.LoaderManagerImpl$LoaderViewModel android.support.v4.app.LoaderManagerImpl$LoaderViewModel.getInstance(android.arch.lifecycle.ViewModelStore):0 -> <init>
    9:9:void <init>(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.ViewModelStore):0 -> <init>
    1:1:void android.support.v4.app.LoaderManagerImpl$LoaderViewModel.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> b
    1:1:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> b
    2:2:void android.support.v4.app.LoaderManagerImpl$LoaderInfo.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> b
    2:2:void android.support.v4.app.LoaderManagerImpl$LoaderViewModel.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> b
    2:2:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> b
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$a:
    void onActive() -> e
    void onInactive() -> f
    void removeObserver(android.arch.lifecycle.Observer) -> h
    void setValue(java.lang.Object) -> i
android.support.v4.app.LoaderManagerImpl$LoaderViewModel -> android.support.v4.app.LoaderManagerImpl$LoaderViewModel:
    android.arch.lifecycle.ViewModelProvider$Factory FACTORY -> b
    android.support.v4.util.SparseArrayCompat mLoaders -> a
    1:1:void android.support.v4.util.SparseArrayCompat.<init>():0:0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:void <init>():0:0 -> <init>
    1:1:void android.support.v4.util.SparseArrayCompat.clear():0:0 -> a
    1:1:void onCleared():0 -> a
    2:2:void onCleared():0:0 -> a
    3:3:android.support.v4.content.Loader android.support.v4.app.LoaderManagerImpl$LoaderInfo.destroy(boolean):0:0 -> a
    3:3:void onCleared():0 -> a
android.support.v4.app.LoaderManagerImpl$LoaderViewModel$1 -> android.support.v4.app.LoaderManagerImpl$LoaderViewModel$a:
android.support.v4.app.NavUtils -> y.w:
    1:1:java.lang.String android.support.v4.app.NavUtils.getParentActivityName(android.app.Activity):0:0 -> a
    1:1:android.content.Intent getParentActivityIntent(android.app.Activity):0 -> a
    2:2:android.content.Intent getParentActivityIntent(android.app.Activity):0:0 -> a
    3:3:java.lang.String android.support.v4.app.NavUtils.getParentActivityName(android.app.Activity):0:0 -> a
    3:3:android.content.Intent getParentActivityIntent(android.app.Activity):0 -> a
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> c
android.support.v4.app.OneShotPreDrawListener -> y.x:
    java.lang.Runnable mRunnable -> d
    android.view.ViewTreeObserver mViewTreeObserver -> c
    android.view.View mView -> b
    android.support.v4.app.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> a
    void removeListener() -> b
android.support.v4.app.SuperNotCalledException -> y.y:
android.support.v4.app.SupportActivity -> y.z:
    android.arch.lifecycle.LifecycleRegistry mLifecycleRegistry -> b
    boolean superDispatchKeyEvent(android.view.KeyEvent) -> f
    1:1:void android.arch.lifecycle.LifecycleRegistry.markState(android.arch.lifecycle.Lifecycle$State):0:0 -> onSaveInstanceState
    1:1:void onSaveInstanceState(android.os.Bundle):0 -> onSaveInstanceState
    2:2:void onSaveInstanceState(android.os.Bundle):0:0 -> onSaveInstanceState
android.support.v4.content.ContextCompat -> z.a:
    java.lang.Object sLock -> a
    int getColor(android.content.Context,int) -> a
android.support.v4.content.res.ColorStateListInflaterCompat -> a0.a:
    1:1:android.content.res.ColorStateList android.support.v4.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    1:1:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    2:2:android.content.res.TypedArray android.support.v4.content.res.ColorStateListInflaterCompat.obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]):0:0 -> a
    2:2:android.content.res.ColorStateList android.support.v4.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    2:2:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    3:3:android.content.res.ColorStateList android.support.v4.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    3:3:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    4:4:int android.support.v4.content.res.ColorStateListInflaterCompat.modulateColorAlpha(int,float):0:0 -> a
    4:4:android.content.res.ColorStateList android.support.v4.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    4:4:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    5:5:android.content.res.ColorStateList android.support.v4.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    5:5:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    6:6:int[] android.support.v4.content.res.GrowingArrayUtils.append(int[],int,int):0:0 -> a
    6:6:android.content.res.ColorStateList android.support.v4.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    6:6:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    7:7:java.lang.Object[] android.support.v4.content.res.GrowingArrayUtils.append(java.lang.Object[],int,java.lang.Object):0:0 -> a
    7:7:android.content.res.ColorStateList android.support.v4.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    7:7:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    8:8:android.content.res.ColorStateList android.support.v4.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    8:8:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    9:9:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
android.support.v4.content.res.ComplexColorCompat -> a0.b:
    android.content.res.ColorStateList mColorStateList -> b
    android.graphics.Shader mShader -> a
    int mColor -> c
    1:1:android.support.v4.content.res.ComplexColorCompat android.support.v4.content.res.ComplexColorCompat.from(android.content.res.ColorStateList):0:0 -> a
    1:1:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    2:2:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> a
    3:3:android.graphics.Shader android.support.v4.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    3:3:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    4:4:float android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> a
    4:4:android.graphics.Shader android.support.v4.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    4:4:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    5:5:int android.support.v4.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> a
    5:5:android.graphics.Shader android.support.v4.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    5:5:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    6:6:int android.support.v4.content.res.TypedArrayUtils.getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> a
    6:6:android.graphics.Shader android.support.v4.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    6:6:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    7:7:android.graphics.Shader android.support.v4.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    7:7:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    8:8:int android.support.v4.content.res.TypedArrayUtils.getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> a
    8:8:android.graphics.Shader android.support.v4.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    8:8:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    9:9:int android.support.v4.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int):0:0 -> a
    9:9:android.graphics.Shader android.support.v4.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    9:9:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    10:10:float android.support.v4.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float):0:0 -> a
    10:10:android.graphics.Shader android.support.v4.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    10:10:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    11:11:android.graphics.Shader android.support.v4.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    11:11:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    12:12:android.support.v4.content.res.GradientColorInflaterCompat$ColorStops android.support.v4.content.res.GradientColorInflaterCompat.inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    12:12:android.graphics.Shader android.support.v4.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    12:12:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    13:13:android.support.v4.content.res.GradientColorInflaterCompat$ColorStops android.support.v4.content.res.GradientColorInflaterCompat.checkColors(android.support.v4.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int):0:0 -> a
    13:13:android.graphics.Shader android.support.v4.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    13:13:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    14:14:android.graphics.Shader android.support.v4.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    14:14:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    15:15:android.graphics.Shader$TileMode android.support.v4.content.res.GradientColorInflaterCompat.parseTileMode(int):0:0 -> a
    15:15:android.graphics.Shader android.support.v4.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    15:15:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    16:16:android.graphics.Shader android.support.v4.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    16:16:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    17:17:android.graphics.Shader$TileMode android.support.v4.content.res.GradientColorInflaterCompat.parseTileMode(int):0:0 -> a
    17:17:android.graphics.Shader android.support.v4.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    17:17:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    18:18:android.graphics.Shader android.support.v4.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    18:18:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    19:19:android.support.v4.content.res.ComplexColorCompat android.support.v4.content.res.ComplexColorCompat.from(android.graphics.Shader):0:0 -> a
    19:19:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    20:20:android.graphics.Shader android.support.v4.content.res.GradientColorInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    20:20:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0 -> a
    21:21:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> a
    boolean isGradient() -> b
    boolean isStateful() -> c
    boolean onStateChanged(int[]) -> d
android.support.v4.content.res.FontResourcesParserCompat -> a0.c:
    1:1:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry android.support.v4.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> a
    1:1:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> a
    2:2:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry android.support.v4.content.res.FontResourcesParserCompat.readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> a
    2:2:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry android.support.v4.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> a
    2:2:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> a
    3:3:android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry android.support.v4.content.res.FontResourcesParserCompat.readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> a
    3:3:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry android.support.v4.content.res.FontResourcesParserCompat.readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> a
    3:3:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry android.support.v4.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> a
    3:3:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> a
    4:4:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry android.support.v4.content.res.FontResourcesParserCompat.readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> a
    4:4:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry android.support.v4.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> a
    4:4:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> a
    5:5:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry android.support.v4.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> a
    5:5:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> a
    6:6:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> a
    1:1:int android.support.v4.content.res.FontResourcesParserCompat.getType(android.content.res.TypedArray,int):0:0 -> b
    1:1:java.util.List readCerts(android.content.res.Resources,int):0 -> b
    2:2:java.util.List readCerts(android.content.res.Resources,int):0:0 -> b
    void skip(org.xmlpull.v1.XmlPullParser) -> c
    java.util.List toByteArrayList(java.lang.String[]) -> d
android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry -> a0.c$a:
android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> a0.c$b:
    android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[] mEntries -> a
android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry -> a0.c$c:
    int mResourceId -> f
    java.lang.String mFileName -> a
    int mTtcIndex -> e
    int mWeight -> b
    boolean mItalic -> c
    java.lang.String mVariationSettings -> d
android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry -> a0.c$d:
    android.support.v4.provider.FontRequest mRequest -> a
    int mTimeoutMs -> b
    int mStrategy -> c
android.support.v4.content.res.GradientColorInflaterCompat$ColorStops -> a0.d:
    int[] mColors -> a
    float[] mOffsets -> b
android.support.v4.content.res.ResourcesCompat$FontCallback -> a0.e:
    void callbackFailAsync(int,android.os.Handler) -> a
    void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> b
    void onFontRetrieved(android.graphics.Typeface) -> c
android.support.v4.content.res.ResourcesCompat$FontCallback$1 -> a0.e$a:
    android.graphics.Typeface val$typeface -> b
    android.support.v4.content.res.ResourcesCompat$FontCallback this$0 -> c
android.support.v4.content.res.ResourcesCompat$FontCallback$2 -> a0.e$b:
    android.support.v4.content.res.ResourcesCompat$FontCallback this$0 -> b
android.support.v4.content.res.TypedArrayUtils -> a0.f:
    1:1:android.support.v4.content.res.ComplexColorCompat android.support.v4.content.res.ComplexColorCompat.from(int):0:0 -> a
    1:1:android.support.v4.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int):0 -> a
    2:2:android.support.v4.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int):0:0 -> a
    3:3:android.support.v4.content.res.ComplexColorCompat android.support.v4.content.res.ComplexColorCompat.inflate(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> a
    3:3:android.support.v4.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int):0 -> a
    4:4:android.support.v4.content.res.ComplexColorCompat android.support.v4.content.res.ComplexColorCompat.from(int):0:0 -> a
    4:4:android.support.v4.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int):0 -> a
    java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> b
    boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> c
    android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> d
android.support.v4.graphics.ColorUtils -> b0.a:
    1:1:int android.support.v4.graphics.ColorUtils.compositeAlpha(int,int):0:0 -> a
    1:1:int compositeColors(int,int):0 -> a
    2:2:int compositeColors(int,int):0:0 -> a
    int compositeComponent(int,int,int,int,int) -> b
    int setAlphaComponent(int,int) -> c
android.support.v4.graphics.PathParser -> b0.b:
    boolean canMorph(android.support.v4.graphics.PathParser$PathDataNode[],android.support.v4.graphics.PathParser$PathDataNode[]) -> a
    float[] copyOfRange(float[],int,int) -> b
    1:1:int android.support.v4.graphics.PathParser.nextStart(java.lang.String,int):0:0 -> c
    1:1:android.support.v4.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String):0 -> c
    2:2:android.support.v4.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String):0:0 -> c
    3:3:float[] android.support.v4.graphics.PathParser.getFloats(java.lang.String):0:0 -> c
    3:3:android.support.v4.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String):0 -> c
    4:4:void android.support.v4.graphics.PathParser.extract(java.lang.String,int,android.support.v4.graphics.PathParser$ExtractFloatResult):0:0 -> c
    4:4:float[] android.support.v4.graphics.PathParser.getFloats(java.lang.String):0 -> c
    4:4:android.support.v4.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String):0 -> c
    5:5:float[] android.support.v4.graphics.PathParser.getFloats(java.lang.String):0:0 -> c
    5:5:android.support.v4.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String):0 -> c
    6:6:android.support.v4.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String):0:0 -> c
    7:7:void android.support.v4.graphics.PathParser.addNode(java.util.ArrayList,char,float[]):0:0 -> c
    7:7:android.support.v4.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String):0 -> c
    8:8:android.support.v4.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String):0:0 -> c
    9:9:void android.support.v4.graphics.PathParser.addNode(java.util.ArrayList,char,float[]):0:0 -> c
    9:9:android.support.v4.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String):0 -> c
    10:10:android.support.v4.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String):0:0 -> c
    android.graphics.Path createPathFromPathData(java.lang.String) -> d
    android.support.v4.graphics.PathParser$PathDataNode[] deepCopyNodes(android.support.v4.graphics.PathParser$PathDataNode[]) -> e
android.support.v4.graphics.PathParser$PathDataNode -> b0.b$a:
    char mType -> a
    float[] mParams -> b
    1:1:void android.support.v4.graphics.PathParser$PathDataNode.arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double):0:0 -> a
    1:1:void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean):0 -> a
    1:1:void android.support.v4.graphics.PathParser$PathDataNode.addCommand(android.graphics.Path,float[],char,char,float[]):0:0 -> b
    1:1:void nodesToPath(android.support.v4.graphics.PathParser$PathDataNode[],android.graphics.Path):0 -> b
    2:2:void nodesToPath(android.support.v4.graphics.PathParser$PathDataNode[],android.graphics.Path):0:0 -> b
android.support.v4.graphics.TypefaceCompat -> b0.c:
    android.support.v4.util.LruCache sTypefaceCache -> b
    android.support.v4.graphics.TypefaceCompatBaseImpl sTypefaceCompatImpl -> a
    1:1:boolean android.support.v4.graphics.TypefaceCompatApi24Impl.isUsable():0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:4:void <clinit>():0:0 -> <clinit>
    1:1:int android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry.getFetchStrategy():0:0 -> a
    1:1:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    2:2:int android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry.getTimeout():0:0 -> a
    2:2:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    3:3:android.support.v4.provider.FontRequest android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry.getRequest():0:0 -> a
    3:3:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    4:4:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0:0 -> a
    5:5:android.graphics.Typeface android.support.v4.provider.FontsContractCompat.getFontSync(android.content.Context,android.support.v4.provider.FontRequest,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int):0:0 -> a
    5:5:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    6:6:java.lang.String android.support.v4.provider.FontRequest.getIdentifier():0:0 -> a
    6:6:android.graphics.Typeface android.support.v4.provider.FontsContractCompat.getFontSync(android.content.Context,android.support.v4.provider.FontRequest,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int):0 -> a
    6:6:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    7:7:android.graphics.Typeface android.support.v4.provider.FontsContractCompat.getFontSync(android.content.Context,android.support.v4.provider.FontRequest,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int):0:0 -> a
    7:7:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    8:8:boolean android.support.v4.util.SimpleArrayMap.containsKey(java.lang.Object):0:0 -> a
    8:8:android.graphics.Typeface android.support.v4.provider.FontsContractCompat.getFontSync(android.content.Context,android.support.v4.provider.FontRequest,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int):0 -> a
    8:8:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    9:9:android.graphics.Typeface android.support.v4.provider.FontsContractCompat.getFontSync(android.content.Context,android.support.v4.provider.FontRequest,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int):0:0 -> a
    9:9:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    10:10:void android.support.v4.provider.SelfDestructiveThread.postAndReply(java.util.concurrent.Callable,android.support.v4.provider.SelfDestructiveThread$ReplyCallback):0:0 -> a
    10:10:android.graphics.Typeface android.support.v4.provider.FontsContractCompat.getFontSync(android.content.Context,android.support.v4.provider.FontRequest,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int):0 -> a
    10:10:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    11:11:android.graphics.Typeface android.support.v4.provider.FontsContractCompat.getFontSync(android.content.Context,android.support.v4.provider.FontRequest,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int):0:0 -> a
    11:11:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    12:12:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0:0 -> a
    android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> b
    java.lang.String createResourceUid(android.content.res.Resources,int,int) -> c
android.support.v4.graphics.TypefaceCompatApi21Impl -> b0.d:
    1:1:android.net.Uri android.support.v4.provider.FontsContractCompat$FontInfo.getUri():0:0 -> b
    1:1:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> b
    2:2:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0:0 -> b
    3:3:java.io.File android.support.v4.graphics.TypefaceCompatApi21Impl.getFile(android.os.ParcelFileDescriptor):0:0 -> b
    3:3:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> b
    4:4:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0:0 -> b
android.support.v4.graphics.TypefaceCompatApi24Impl -> b0.e:
    java.lang.reflect.Method sAddFontWeightStyle -> c
    java.lang.reflect.Method sCreateFromFamiliesWithDefault -> d
    java.lang.reflect.Constructor sFontFamilyCtor -> b
    java.lang.Class sFontFamily -> a
    1:1:android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[] android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry.getEntries():0:0 -> a
    1:1:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    2:2:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> a
    3:3:int android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry.getResourceId():0:0 -> a
    3:3:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    4:4:java.nio.ByteBuffer android.support.v4.graphics.TypefaceCompatUtil.copyToDirectBuffer(android.content.Context,android.content.res.Resources,int):0:0 -> a
    4:4:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    5:5:java.nio.ByteBuffer android.support.v4.graphics.TypefaceCompatUtil.mmap(java.io.File):0:0 -> a
    5:5:java.nio.ByteBuffer android.support.v4.graphics.TypefaceCompatUtil.copyToDirectBuffer(android.content.Context,android.content.res.Resources,int):0 -> a
    5:5:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    6:6:java.nio.ByteBuffer android.support.v4.graphics.TypefaceCompatUtil.copyToDirectBuffer(android.content.Context,android.content.res.Resources,int):0:0 -> a
    6:6:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    7:7:int android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry.getTtcIndex():0:0 -> a
    7:7:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    8:8:int android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry.getWeight():0:0 -> a
    8:8:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    9:9:boolean android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry.isItalic():0:0 -> a
    9:9:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    10:10:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> a
    11:11:java.nio.ByteBuffer android.support.v4.graphics.TypefaceCompatUtil.copyToDirectBuffer(android.content.Context,android.content.res.Resources,int):0:0 -> a
    11:11:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    12:12:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> a
    1:1:android.net.Uri android.support.v4.provider.FontsContractCompat$FontInfo.getUri():0:0 -> b
    1:1:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> b
    2:2:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0:0 -> b
    3:3:int android.support.v4.provider.FontsContractCompat$FontInfo.getTtcIndex():0:0 -> b
    3:3:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> b
    4:4:int android.support.v4.provider.FontsContractCompat$FontInfo.getWeight():0:0 -> b
    4:4:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> b
    5:5:boolean android.support.v4.provider.FontsContractCompat$FontInfo.isItalic():0:0 -> b
    5:5:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> b
    6:6:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0:0 -> b
    boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> f
    android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> g
    java.lang.Object newFamily() -> h
android.support.v4.graphics.TypefaceCompatApi26Impl -> b0.f:
    java.lang.reflect.Method mCreateFromFamiliesWithDefault -> g
    java.lang.reflect.Method mAddFontFromAssetManager -> c
    java.lang.reflect.Method mAddFontFromBuffer -> d
    java.lang.reflect.Method mFreeze -> e
    java.lang.reflect.Constructor mFontFamilyCtor -> b
    java.lang.reflect.Method mAbortCreation -> f
    java.lang.Class mFontFamily -> a
    1:1:java.lang.Class android.support.v4.graphics.TypefaceCompatApi26Impl.obtainFontFamily():0:0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:java.lang.reflect.Constructor android.support.v4.graphics.TypefaceCompatApi26Impl.obtainFontFamilyCtor(java.lang.Class):0:0 -> <init>
    2:2:void <init>():0 -> <init>
    3:3:void <init>():0:0 -> <init>
    4:4:java.lang.reflect.Method android.support.v4.graphics.TypefaceCompatApi26Impl.obtainFreezeMethod(java.lang.Class):0:0 -> <init>
    4:4:void <init>():0 -> <init>
    5:5:java.lang.reflect.Method android.support.v4.graphics.TypefaceCompatApi26Impl.obtainAbortCreationMethod(java.lang.Class):0:0 -> <init>
    5:5:void <init>():0 -> <init>
    6:6:void <init>():0:0 -> <init>
    1:1:android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[] android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry.getEntries():0:0 -> a
    1:1:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    2:2:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> a
    3:3:java.lang.String android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry.getFileName():0:0 -> a
    3:3:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    4:4:int android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry.getTtcIndex():0:0 -> a
    4:4:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    5:5:int android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry.getWeight():0:0 -> a
    5:5:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    6:6:boolean android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry.isItalic():0:0 -> a
    6:6:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    7:7:java.lang.String android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry.getVariationSettings():0:0 -> a
    7:7:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    8:8:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> a
    1:1:android.net.Uri android.support.v4.provider.FontsContractCompat$FontInfo.getUri():0:0 -> b
    1:1:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> b
    2:2:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0:0 -> b
    3:3:int android.support.v4.provider.FontsContractCompat$FontInfo.getWeight():0:0 -> b
    3:3:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> b
    4:4:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0:0 -> b
    5:5:boolean android.support.v4.provider.FontsContractCompat$FontInfo.isItalic():0:0 -> b
    5:5:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> b
    6:6:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0:0 -> b
    7:7:java.util.Map android.support.v4.provider.FontsContractCompat.prepareFontData(android.content.Context,android.support.v4.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal):0:0 -> b
    7:7:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> b
    8:8:int android.support.v4.provider.FontsContractCompat$FontInfo.getResultCode():0:0 -> b
    8:8:java.util.Map android.support.v4.provider.FontsContractCompat.prepareFontData(android.content.Context,android.support.v4.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal):0 -> b
    8:8:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> b
    9:9:android.net.Uri android.support.v4.provider.FontsContractCompat$FontInfo.getUri():0:0 -> b
    9:9:java.util.Map android.support.v4.provider.FontsContractCompat.prepareFontData(android.content.Context,android.support.v4.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal):0 -> b
    9:9:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> b
    10:10:java.util.Map android.support.v4.provider.FontsContractCompat.prepareFontData(android.content.Context,android.support.v4.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal):0:0 -> b
    10:10:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> b
    11:11:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0:0 -> b
    12:12:android.net.Uri android.support.v4.provider.FontsContractCompat$FontInfo.getUri():0:0 -> b
    12:12:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> b
    13:13:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0:0 -> b
    14:14:int android.support.v4.provider.FontsContractCompat$FontInfo.getTtcIndex():0:0 -> b
    14:14:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> b
    15:15:int android.support.v4.provider.FontsContractCompat$FontInfo.getWeight():0:0 -> b
    15:15:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> b
    16:16:boolean android.support.v4.provider.FontsContractCompat$FontInfo.isItalic():0:0 -> b
    16:16:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> b
    17:17:boolean android.support.v4.graphics.TypefaceCompatApi26Impl.addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int):0:0 -> b
    17:17:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> b
    18:18:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0:0 -> b
    19:19:boolean android.support.v4.graphics.TypefaceCompatApi26Impl.addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int):0:0 -> b
    19:19:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> b
    20:20:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0:0 -> b
    android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> d
    void abortCreation(java.lang.Object) -> f
    boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> g
    android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> h
    boolean freeze(java.lang.Object) -> i
    boolean isFontFamilyPrivateAPIAvailable() -> j
    java.lang.Object newFamily() -> k
    java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> l
    java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> m
    java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> n
android.support.v4.graphics.TypefaceCompatApi28Impl -> b0.g:
    android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> h
    java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> n
android.support.v4.graphics.TypefaceCompatBaseImpl -> b0.h:
    1:1:android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[] android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry.getEntries():0:0 -> a
    1:1:android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry android.support.v4.graphics.TypefaceCompatBaseImpl.findBestEntry(android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int):0 -> a
    1:1:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    2:2:java.lang.Object android.support.v4.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,android.support.v4.graphics.TypefaceCompatBaseImpl$StyleExtractor):0:0 -> a
    2:2:android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry android.support.v4.graphics.TypefaceCompatBaseImpl.findBestEntry(android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int):0 -> a
    2:2:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    3:3:int android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry.getWeight():0:0 -> a
    3:3:int android.support.v4.graphics.TypefaceCompatBaseImpl$2.getWeight(android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry):0 -> a
    3:3:int android.support.v4.graphics.TypefaceCompatBaseImpl$2.getWeight(java.lang.Object):0 -> a
    3:3:java.lang.Object android.support.v4.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,android.support.v4.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> a
    3:3:android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry android.support.v4.graphics.TypefaceCompatBaseImpl.findBestEntry(android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int):0 -> a
    3:3:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    4:4:java.lang.Object android.support.v4.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,android.support.v4.graphics.TypefaceCompatBaseImpl$StyleExtractor):0:0 -> a
    4:4:android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry android.support.v4.graphics.TypefaceCompatBaseImpl.findBestEntry(android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int):0 -> a
    4:4:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    5:5:boolean android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry.isItalic():0:0 -> a
    5:5:boolean android.support.v4.graphics.TypefaceCompatBaseImpl$2.isItalic(android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry):0 -> a
    5:5:boolean android.support.v4.graphics.TypefaceCompatBaseImpl$2.isItalic(java.lang.Object):0 -> a
    5:5:java.lang.Object android.support.v4.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,android.support.v4.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> a
    5:5:android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry android.support.v4.graphics.TypefaceCompatBaseImpl.findBestEntry(android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int):0 -> a
    5:5:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    6:6:int android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry.getResourceId():0:0 -> a
    6:6:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    7:7:java.lang.String android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry.getFileName():0:0 -> a
    7:7:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    8:8:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> a
    android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> b
    android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> c
    android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> d
    1:1:java.lang.Object android.support.v4.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,android.support.v4.graphics.TypefaceCompatBaseImpl$StyleExtractor):0:0 -> e
    1:1:android.support.v4.provider.FontsContractCompat$FontInfo findBestInfo(android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> e
    2:2:int android.support.v4.provider.FontsContractCompat$FontInfo.getWeight():0:0 -> e
    2:2:int android.support.v4.graphics.TypefaceCompatBaseImpl$1.getWeight(android.support.v4.provider.FontsContractCompat$FontInfo):0 -> e
    2:2:int android.support.v4.graphics.TypefaceCompatBaseImpl$1.getWeight(java.lang.Object):0 -> e
    2:2:java.lang.Object android.support.v4.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,android.support.v4.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> e
    2:2:android.support.v4.provider.FontsContractCompat$FontInfo findBestInfo(android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> e
    3:3:java.lang.Object android.support.v4.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,android.support.v4.graphics.TypefaceCompatBaseImpl$StyleExtractor):0:0 -> e
    3:3:android.support.v4.provider.FontsContractCompat$FontInfo findBestInfo(android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> e
    4:4:boolean android.support.v4.provider.FontsContractCompat$FontInfo.isItalic():0:0 -> e
    4:4:boolean android.support.v4.graphics.TypefaceCompatBaseImpl$1.isItalic(android.support.v4.provider.FontsContractCompat$FontInfo):0 -> e
    4:4:boolean android.support.v4.graphics.TypefaceCompatBaseImpl$1.isItalic(java.lang.Object):0 -> e
    4:4:java.lang.Object android.support.v4.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,android.support.v4.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> e
    4:4:android.support.v4.provider.FontsContractCompat$FontInfo findBestInfo(android.support.v4.provider.FontsContractCompat$FontInfo[],int):0 -> e
android.support.v4.graphics.TypefaceCompatUtil -> b0.i:
    1:1:void android.support.v4.graphics.TypefaceCompatUtil.closeQuietly(java.io.Closeable):0:0 -> a
    1:1:boolean copyToFile(java.io.File,android.content.res.Resources,int):0 -> a
    2:2:boolean copyToFile(java.io.File,android.content.res.Resources,int):0:0 -> a
    1:1:void android.support.v4.graphics.TypefaceCompatUtil.closeQuietly(java.io.Closeable):0:0 -> b
    1:1:boolean copyToFile(java.io.File,java.io.InputStream):0 -> b
    2:2:boolean copyToFile(java.io.File,java.io.InputStream):0:0 -> b
    3:3:void android.support.v4.graphics.TypefaceCompatUtil.closeQuietly(java.io.Closeable):0:0 -> b
    3:3:boolean copyToFile(java.io.File,java.io.InputStream):0 -> b
    4:4:boolean copyToFile(java.io.File,java.io.InputStream):0:0 -> b
    5:5:void android.support.v4.graphics.TypefaceCompatUtil.closeQuietly(java.io.Closeable):0:0 -> b
    5:5:boolean copyToFile(java.io.File,java.io.InputStream):0 -> b
    6:6:boolean copyToFile(java.io.File,java.io.InputStream):0:0 -> b
    java.io.File getTempFile(android.content.Context) -> c
    java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> d
android.support.v4.graphics.drawable.DrawableCompat -> c0.a:
    java.lang.reflect.Method sGetLayoutDirectionMethod -> c
    boolean sSetLayoutDirectionMethodFetched -> b
    java.lang.reflect.Method sSetLayoutDirectionMethod -> a
    boolean sGetLayoutDirectionMethodFetched -> d
    void clearColorFilter(android.graphics.drawable.Drawable) -> a
    boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> b
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> c
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> d
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> e
android.support.v4.graphics.drawable.IconCompat -> android.support.v4.graphics.drawable.IconCompat:
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> j
    java.lang.String mTintModeStr -> i
    android.graphics.PorterDuff$Mode mTintMode -> h
    android.os.Parcelable mParcelable -> d
    java.lang.Object mObj1 -> b
    int mInt2 -> f
    android.content.res.ColorStateList mTintList -> g
    int mInt1 -> e
    byte[] mData -> c
    int mType -> a
    1:1:java.lang.String getResPackage():0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String getResPackage(android.graphics.drawable.Icon):0:0 -> toString
    2:2:java.lang.String getResPackage():0 -> toString
    2:2:java.lang.String toString():0 -> toString
    3:3:java.lang.String getResPackage():0:0 -> toString
    3:3:java.lang.String toString():0 -> toString
    4:4:java.lang.String toString():0:0 -> toString
    5:5:int getResId():0:0 -> toString
    5:5:java.lang.String toString():0 -> toString
    6:6:int getResId(android.graphics.drawable.Icon):0:0 -> toString
    6:6:int getResId():0 -> toString
    6:6:java.lang.String toString():0 -> toString
    7:7:int getResId():0:0 -> toString
    7:7:java.lang.String toString():0 -> toString
    8:8:java.lang.String toString():0:0 -> toString
    9:9:int getResId():0:0 -> toString
    9:9:java.lang.String toString():0 -> toString
    10:10:java.lang.String getResPackage():0:0 -> toString
    10:10:java.lang.String toString():0 -> toString
    11:11:java.lang.String toString():0:0 -> toString
android.support.v4.graphics.drawable.TintAwareDrawable -> c0.b:
android.support.v4.graphics.drawable.WrappedDrawable -> c0.c:
    android.graphics.drawable.Drawable getWrappedDrawable() -> a
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> b
android.support.v4.graphics.drawable.WrappedDrawableApi14 -> c0.d:
    android.graphics.drawable.Drawable mDrawable -> g
    android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState mState -> e
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> h
    boolean mMutated -> f
    android.graphics.PorterDuff$Mode mCurrentMode -> c
    int mCurrentColor -> b
    boolean mColorFilterSet -> d
    1:1:void android.support.v4.graphics.drawable.WrappedDrawableApi14.updateLocalState(android.content.res.Resources):0:0 -> <init>
    1:1:void <init>(android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState,android.content.res.Resources):0 -> <init>
    android.graphics.drawable.Drawable getWrappedDrawable() -> a
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> b
    boolean isCompatTintEnabled() -> c
    android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState mutateConstantState() -> d
    boolean updateTint(int[]) -> e
    1:1:boolean android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState.canConstantState():0:0 -> getConstantState
    1:1:android.graphics.drawable.Drawable$ConstantState getConstantState():0 -> getConstantState
    2:2:android.graphics.drawable.Drawable$ConstantState getConstantState():0:0 -> getConstantState
android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState -> c0.d$a:
    android.graphics.drawable.Drawable$ConstantState mDrawableState -> b
    android.content.res.ColorStateList mTint -> c
    android.graphics.PorterDuff$Mode mTintMode -> d
    int mChangingConfigurations -> a
android.support.v4.graphics.drawable.WrappedDrawableApi21 -> c0.e:
    java.lang.reflect.Method sIsProjectedDrawableMethod -> i
    boolean isCompatTintEnabled() -> c
    android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState mutateConstantState() -> d
    void findAndCacheIsProjectedDrawableMethod() -> f
    1:1:void android.support.v4.graphics.drawable.WrappedDrawableApi14.setTintList(android.content.res.ColorStateList):0:0 -> setTintList
    1:1:void setTintList(android.content.res.ColorStateList):0 -> setTintList
    2:2:void setTintList(android.content.res.ColorStateList):0:0 -> setTintList
    1:1:void android.support.v4.graphics.drawable.WrappedDrawableApi14.setTintMode(android.graphics.PorterDuff$Mode):0:0 -> setTintMode
    1:1:void setTintMode(android.graphics.PorterDuff$Mode):0 -> setTintMode
    2:2:void setTintMode(android.graphics.PorterDuff$Mode):0:0 -> setTintMode
android.support.v4.graphics.drawable.WrappedDrawableApi21$DrawableWrapperStateLollipop -> c0.e$a:
android.support.v4.internal.view.SupportMenu -> d0.a:
android.support.v4.internal.view.SupportMenuItem -> d0.b:
    android.support.v4.view.ActionProvider getSupportActionProvider() -> b
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> c
android.support.v4.internal.view.SupportSubMenu -> d0.c:
android.support.v4.provider.FontRequest -> e0.a:
    java.util.List mCertificates -> d
    java.lang.String mProviderAuthority -> a
    java.lang.String mQuery -> c
    java.lang.String mProviderPackage -> b
    java.lang.String mIdentifier -> e
    1:1:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List):0:0 -> <init>
    2:2:java.lang.Object android.support.v4.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List):0 -> <init>
    3:3:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List):0:0 -> <init>
android.support.v4.provider.FontsContractCompat -> e0.e:
    android.support.v4.provider.SelfDestructiveThread sBackgroundThread -> b
    android.support.v4.util.SimpleArrayMap sPendingReplies -> d
    java.lang.Object sLock -> c
    java.util.Comparator sByteArrayComparator -> e
    android.support.v4.util.LruCache sTypefaceCache -> a
    1:1:java.lang.String android.support.v4.provider.FontRequest.getProviderAuthority():0:0 -> a
    1:1:android.content.pm.ProviderInfo android.support.v4.provider.FontsContractCompat.getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources):0 -> a
    1:1:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest):0 -> a
    2:2:android.content.pm.ProviderInfo android.support.v4.provider.FontsContractCompat.getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources):0:0 -> a
    2:2:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest):0 -> a
    3:3:java.lang.String android.support.v4.provider.FontRequest.getProviderPackage():0:0 -> a
    3:3:android.content.pm.ProviderInfo android.support.v4.provider.FontsContractCompat.getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources):0 -> a
    3:3:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest):0 -> a
    4:4:android.content.pm.ProviderInfo android.support.v4.provider.FontsContractCompat.getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources):0:0 -> a
    4:4:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest):0 -> a
    5:5:java.util.List android.support.v4.provider.FontsContractCompat.convertToByteArrayList(android.content.pm.Signature[]):0:0 -> a
    5:5:android.content.pm.ProviderInfo android.support.v4.provider.FontsContractCompat.getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources):0 -> a
    5:5:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest):0 -> a
    6:6:android.content.pm.ProviderInfo android.support.v4.provider.FontsContractCompat.getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources):0:0 -> a
    6:6:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest):0 -> a
    7:7:java.util.List android.support.v4.provider.FontRequest.getCertificates():0:0 -> a
    7:7:java.util.List android.support.v4.provider.FontsContractCompat.getCertificates(android.support.v4.provider.FontRequest,android.content.res.Resources):0 -> a
    7:7:android.content.pm.ProviderInfo android.support.v4.provider.FontsContractCompat.getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources):0 -> a
    7:7:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest):0 -> a
    8:8:java.util.List android.support.v4.provider.FontsContractCompat.getCertificates(android.support.v4.provider.FontRequest,android.content.res.Resources):0:0 -> a
    8:8:android.content.pm.ProviderInfo android.support.v4.provider.FontsContractCompat.getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources):0 -> a
    8:8:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest):0 -> a
    9:9:android.content.pm.ProviderInfo android.support.v4.provider.FontsContractCompat.getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources):0:0 -> a
    9:9:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest):0 -> a
    10:10:boolean android.support.v4.provider.FontsContractCompat.equalsByteArrayList(java.util.List,java.util.List):0:0 -> a
    10:10:android.content.pm.ProviderInfo android.support.v4.provider.FontsContractCompat.getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources):0 -> a
    10:10:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest):0 -> a
    11:11:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest):0:0 -> a
    12:12:android.support.v4.provider.FontsContractCompat$FontInfo[] android.support.v4.provider.FontsContractCompat.getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0:0 -> a
    12:12:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest):0 -> a
    13:13:java.lang.String android.support.v4.provider.FontRequest.getQuery():0:0 -> a
    13:13:android.support.v4.provider.FontsContractCompat$FontInfo[] android.support.v4.provider.FontsContractCompat.getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0 -> a
    13:13:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest):0 -> a
    14:14:android.support.v4.provider.FontsContractCompat$FontInfo[] android.support.v4.provider.FontsContractCompat.getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0:0 -> a
    14:14:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest):0 -> a
    15:15:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest):0:0 -> a
    16:16:android.support.v4.provider.FontsContractCompat$FontInfo[] android.support.v4.provider.FontsContractCompat.getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0:0 -> a
    16:16:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest):0 -> a
    17:17:android.content.pm.ProviderInfo android.support.v4.provider.FontsContractCompat.getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources):0:0 -> a
    17:17:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest):0 -> a
    18:18:java.lang.String android.support.v4.provider.FontRequest.getProviderPackage():0:0 -> a
    18:18:android.content.pm.ProviderInfo android.support.v4.provider.FontsContractCompat.getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources):0 -> a
    18:18:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest):0 -> a
    19:19:android.content.pm.ProviderInfo android.support.v4.provider.FontsContractCompat.getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources):0:0 -> a
    19:19:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest):0 -> a
    1:1:int android.support.v4.provider.FontsContractCompat$FontFamilyResult.getStatusCode():0:0 -> b
    1:1:android.support.v4.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,android.support.v4.provider.FontRequest,int):0 -> b
    2:2:android.support.v4.provider.FontsContractCompat$FontInfo[] android.support.v4.provider.FontsContractCompat$FontFamilyResult.getFonts():0:0 -> b
    2:2:android.support.v4.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,android.support.v4.provider.FontRequest,int):0 -> b
    3:3:android.graphics.Typeface android.support.v4.graphics.TypefaceCompat.createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int):0:0 -> b
    3:3:android.support.v4.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,android.support.v4.provider.FontRequest,int):0 -> b
    4:4:android.support.v4.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,android.support.v4.provider.FontRequest,int):0:0 -> b
android.support.v4.provider.FontsContractCompat$1 -> e0.b:
    android.content.Context val$context -> a
    android.support.v4.provider.FontRequest val$request -> b
    int val$style -> c
    java.lang.String val$id -> d
    1:1:android.support.v4.provider.FontsContractCompat$TypefaceResult android.support.v4.provider.FontsContractCompat$1.call():0:0 -> call
    1:1:java.lang.Object call():0 -> call
android.support.v4.provider.FontsContractCompat$2 -> e0.c:
    android.os.Handler val$handler -> b
    android.support.v4.content.res.ResourcesCompat$FontCallback val$fontCallback -> a
    1:1:void android.support.v4.provider.FontsContractCompat$2.onReply(android.support.v4.provider.FontsContractCompat$TypefaceResult):0:0 -> a
    1:1:void onReply(java.lang.Object):0 -> a
android.support.v4.provider.FontsContractCompat$3 -> e0.d:
    java.lang.String val$id -> a
    void onReply(java.lang.Object) -> a
    void onReply(android.support.v4.provider.FontsContractCompat$TypefaceResult) -> b
android.support.v4.provider.FontsContractCompat$5 -> e0.e$a:
    1:1:int android.support.v4.provider.FontsContractCompat$5.compare(byte[],byte[]):0:0 -> compare
    1:1:int compare(java.lang.Object,java.lang.Object):0 -> compare
android.support.v4.provider.FontsContractCompat$FontFamilyResult -> e0.e$b:
    android.support.v4.provider.FontsContractCompat$FontInfo[] mFonts -> b
    int mStatusCode -> a
android.support.v4.provider.FontsContractCompat$FontInfo -> e0.e$c:
    int mResultCode -> e
    int mTtcIndex -> b
    int mWeight -> c
    android.net.Uri mUri -> a
    boolean mItalic -> d
    1:1:java.lang.Object android.support.v4.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> <init>
    1:1:void <init>(android.net.Uri,int,int,boolean,int):0 -> <init>
    2:2:void <init>(android.net.Uri,int,int,boolean,int):0:0 -> <init>
android.support.v4.provider.FontsContractCompat$TypefaceResult -> e0.e$d:
    android.graphics.Typeface mTypeface -> a
    int mResult -> b
android.support.v4.provider.SelfDestructiveThread -> e0.f:
    android.os.Handler mHandler -> c
    android.os.Handler$Callback mCallback -> e
    int mGeneration -> d
    java.lang.Object mLock -> a
    android.os.HandlerThread mThread -> b
    void post(java.lang.Runnable) -> a
    java.lang.Object postAndWait(java.util.concurrent.Callable,int) -> b
android.support.v4.provider.SelfDestructiveThread$1 -> e0.f$a:
    android.support.v4.provider.SelfDestructiveThread this$0 -> a
    1:1:void android.support.v4.provider.SelfDestructiveThread.onInvokeRunnable(java.lang.Runnable):0:0 -> handleMessage
    1:1:boolean handleMessage(android.os.Message):0 -> handleMessage
    2:2:boolean handleMessage(android.os.Message):0:0 -> handleMessage
    3:3:void android.support.v4.provider.SelfDestructiveThread.onDestruction():0:0 -> handleMessage
    3:3:boolean handleMessage(android.os.Message):0 -> handleMessage
android.support.v4.provider.SelfDestructiveThread$2 -> e0.g:
    android.support.v4.provider.SelfDestructiveThread$ReplyCallback val$reply -> d
    android.os.Handler val$callingHandler -> c
    java.util.concurrent.Callable val$callable -> b
android.support.v4.provider.SelfDestructiveThread$2$1 -> e0.g$a:
    java.lang.Object val$result -> b
    android.support.v4.provider.SelfDestructiveThread$2 this$1 -> c
android.support.v4.provider.SelfDestructiveThread$3 -> e0.f$b:
    java.util.concurrent.atomic.AtomicBoolean val$running -> e
    java.util.concurrent.locks.Condition val$cond -> f
    java.util.concurrent.locks.ReentrantLock val$lock -> d
    java.util.concurrent.Callable val$callable -> c
    java.util.concurrent.atomic.AtomicReference val$holder -> b
android.support.v4.provider.SelfDestructiveThread$ReplyCallback -> e0.f$c:
    void onReply(java.lang.Object) -> a
android.support.v4.text.PrecomputedTextCompat -> f0.a:
android.support.v4.text.PrecomputedTextCompat$Params -> f0.a$a:
    android.text.TextPaint mPaint -> a
    android.text.PrecomputedText$Params mWrapped -> e
    int mHyphenationFrequency -> d
    android.text.TextDirectionHeuristic mTextDir -> b
    int mBreakStrategy -> c
    1:1:int android.support.v4.text.PrecomputedTextCompat$Params.getBreakStrategy():0:0 -> equals
    1:1:boolean equals(java.lang.Object):0 -> equals
    2:2:boolean equals(java.lang.Object):0:0 -> equals
    3:3:int android.support.v4.text.PrecomputedTextCompat$Params.getHyphenationFrequency():0:0 -> equals
    3:3:boolean equals(java.lang.Object):0 -> equals
    4:4:boolean equals(java.lang.Object):0:0 -> equals
    5:5:android.text.TextDirectionHeuristic android.support.v4.text.PrecomputedTextCompat$Params.getTextDirection():0:0 -> equals
    5:5:boolean equals(java.lang.Object):0 -> equals
    6:6:boolean equals(java.lang.Object):0:0 -> equals
    7:7:android.text.TextPaint android.support.v4.text.PrecomputedTextCompat$Params.getTextPaint():0:0 -> equals
    7:7:boolean equals(java.lang.Object):0 -> equals
    8:8:boolean equals(java.lang.Object):0:0 -> equals
    9:9:android.text.TextPaint android.support.v4.text.PrecomputedTextCompat$Params.getTextPaint():0:0 -> equals
    9:9:boolean equals(java.lang.Object):0 -> equals
    10:10:boolean equals(java.lang.Object):0:0 -> equals
    11:11:android.text.TextPaint android.support.v4.text.PrecomputedTextCompat$Params.getTextPaint():0:0 -> equals
    11:11:boolean equals(java.lang.Object):0 -> equals
    12:12:boolean equals(java.lang.Object):0:0 -> equals
    13:13:android.text.TextPaint android.support.v4.text.PrecomputedTextCompat$Params.getTextPaint():0:0 -> equals
    13:13:boolean equals(java.lang.Object):0 -> equals
    14:14:boolean equals(java.lang.Object):0:0 -> equals
    15:15:android.text.TextPaint android.support.v4.text.PrecomputedTextCompat$Params.getTextPaint():0:0 -> equals
    15:15:boolean equals(java.lang.Object):0 -> equals
    16:16:boolean equals(java.lang.Object):0:0 -> equals
    17:17:android.text.TextPaint android.support.v4.text.PrecomputedTextCompat$Params.getTextPaint():0:0 -> equals
    17:17:boolean equals(java.lang.Object):0 -> equals
    18:18:boolean equals(java.lang.Object):0:0 -> equals
    19:19:android.text.TextPaint android.support.v4.text.PrecomputedTextCompat$Params.getTextPaint():0:0 -> equals
    19:19:boolean equals(java.lang.Object):0 -> equals
    20:20:boolean equals(java.lang.Object):0:0 -> equals
    21:21:android.text.TextPaint android.support.v4.text.PrecomputedTextCompat$Params.getTextPaint():0:0 -> equals
    21:21:boolean equals(java.lang.Object):0 -> equals
    22:22:boolean equals(java.lang.Object):0:0 -> equals
    23:23:android.text.TextPaint android.support.v4.text.PrecomputedTextCompat$Params.getTextPaint():0:0 -> equals
    23:23:boolean equals(java.lang.Object):0 -> equals
    24:24:boolean equals(java.lang.Object):0:0 -> equals
    25:25:android.text.TextPaint android.support.v4.text.PrecomputedTextCompat$Params.getTextPaint():0:0 -> equals
    25:25:boolean equals(java.lang.Object):0 -> equals
    26:26:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int android.support.v4.util.ObjectsCompat.hash(java.lang.Object[]):0:0 -> hashCode
    1:1:int hashCode():0 -> hashCode
    2:2:int hashCode():0:0 -> hashCode
    3:3:int android.support.v4.util.ObjectsCompat.hash(java.lang.Object[]):0:0 -> hashCode
    3:3:int hashCode():0 -> hashCode
android.support.v4.util.ArrayMap -> g0.a:
    android.support.v4.util.MapCollections mCollections -> h
    1:1:void android.support.v4.util.SimpleArrayMap.<init>(android.support.v4.util.SimpleArrayMap):0:0 -> <init>
    1:1:void <init>(android.support.v4.util.SimpleArrayMap):0 -> <init>
    2:2:void android.support.v4.util.SimpleArrayMap.putAll(android.support.v4.util.SimpleArrayMap):0:0 -> <init>
    2:2:void android.support.v4.util.SimpleArrayMap.<init>(android.support.v4.util.SimpleArrayMap):0 -> <init>
    2:2:void <init>(android.support.v4.util.SimpleArrayMap):0 -> <init>
    1:1:java.util.Set android.support.v4.util.MapCollections.getEntrySet():0:0 -> entrySet
    1:1:java.util.Set entrySet():0 -> entrySet
    android.support.v4.util.MapCollections getCollection() -> k
    1:1:java.util.Set android.support.v4.util.MapCollections.getKeySet():0:0 -> keySet
    1:1:java.util.Set keySet():0 -> keySet
    1:1:java.util.Collection android.support.v4.util.MapCollections.getValues():0:0 -> values
    1:1:java.util.Collection values():0 -> values
android.support.v4.util.ArrayMap$1 -> g0.a$a:
    android.support.v4.util.ArrayMap this$0 -> d
    void colClear() -> a
    java.lang.Object colGetEntry(int,int) -> b
    java.util.Map colGetMap() -> c
    int colGetSize() -> d
    int colIndexOfKey(java.lang.Object) -> e
    int colIndexOfValue(java.lang.Object) -> f
    void colPut(java.lang.Object,java.lang.Object) -> g
    void colRemoveAt(int) -> h
    1:1:java.lang.Object android.support.v4.util.SimpleArrayMap.setValueAt(int,java.lang.Object):0:0 -> i
    1:1:java.lang.Object colSetValue(int,java.lang.Object):0 -> i
android.support.v4.util.ArraySet -> g0.c:
    android.support.v4.util.MapCollections mCollections -> d
    java.lang.Object[] mArray -> b
    int sTwiceBaseCacheSize -> j
    int sBaseCacheSize -> h
    int[] INT -> e
    int[] mHashes -> a
    int mSize -> c
    java.lang.Object[] sTwiceBaseCache -> i
    java.lang.Object[] OBJECT -> f
    java.lang.Object[] sBaseCache -> g
    void allocArrays(int) -> a
    1:1:void android.support.v4.util.ArraySet.ensureCapacity(int):0:0 -> addAll
    1:1:boolean addAll(java.util.Collection):0 -> addAll
    2:2:boolean addAll(java.util.Collection):0:0 -> addAll
    void freeArrays(int[],java.lang.Object[],int) -> b
    int indexOf(java.lang.Object) -> c
    int indexOf(java.lang.Object,int) -> d
    int indexOfNull() -> e
    1:1:int android.support.v4.util.ArraySet.size():0:0 -> equals
    1:1:boolean equals(java.lang.Object):0 -> equals
    2:2:boolean equals(java.lang.Object):0:0 -> equals
    3:3:java.lang.Object android.support.v4.util.ArraySet.valueAt(int):0:0 -> equals
    3:3:boolean equals(java.lang.Object):0 -> equals
    4:4:boolean equals(java.lang.Object):0:0 -> equals
    java.lang.Object removeAt(int) -> f
    1:1:android.support.v4.util.MapCollections android.support.v4.util.ArraySet.getCollection():0:0 -> iterator
    1:1:java.util.Iterator iterator():0 -> iterator
    2:2:java.util.Set android.support.v4.util.MapCollections.getKeySet():0:0 -> iterator
    2:2:java.util.Iterator iterator():0 -> iterator
    3:3:java.util.Iterator iterator():0:0 -> iterator
    1:1:java.lang.Object android.support.v4.util.ArraySet.valueAt(int):0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
android.support.v4.util.ArraySet$1 -> g0.b:
    android.support.v4.util.ArraySet this$0 -> d
    void colClear() -> a
    java.lang.Object colGetEntry(int,int) -> b
    java.util.Map colGetMap() -> c
    int colGetSize() -> d
    int colIndexOfKey(java.lang.Object) -> e
    int colIndexOfValue(java.lang.Object) -> f
    void colPut(java.lang.Object,java.lang.Object) -> g
    void colRemoveAt(int) -> h
    java.lang.Object colSetValue(int,java.lang.Object) -> i
android.support.v4.util.ContainerHelpers -> g0.d:
    java.lang.Object[] EMPTY_OBJECTS -> c
    long[] EMPTY_LONGS -> b
    int[] EMPTY_INTS -> a
    int binarySearch(int[],int,int) -> a
    int binarySearch(long[],int,long) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> c
    int idealByteArraySize(int) -> d
    int idealIntArraySize(int) -> e
    int idealLongArraySize(int) -> f
android.support.v4.util.LogWriter -> g0.e:
    java.lang.StringBuilder mBuilder -> b
    java.lang.String mTag -> a
    void flushBuilder() -> a
android.support.v4.util.LongSparseArray -> g0.f:
    java.lang.Object[] mValues -> c
    long[] mKeys -> b
    java.lang.Object DELETED -> e
    int mSize -> d
    boolean mGarbage -> a
    1:1:void android.support.v4.util.LongSparseArray.<init>(int):0:0 -> <init>
    1:1:void <init>():0 -> <init>
    void append(long,java.lang.Object) -> a
    void clear() -> b
    android.support.v4.util.LongSparseArray clone() -> c
    void gc() -> d
    java.lang.Object get(long) -> e
    java.lang.Object get(long,java.lang.Object) -> f
    void put(long,java.lang.Object) -> g
    int size() -> h
    java.lang.Object valueAt(int) -> i
    1:1:long android.support.v4.util.LongSparseArray.keyAt(int):0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
android.support.v4.util.LruCache -> g0.g:
    java.util.LinkedHashMap map -> a
    int hitCount -> f
    int missCount -> g
    int putCount -> d
    int evictionCount -> e
    int size -> b
    int maxSize -> c
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> b
    void trimToSize(int) -> c
android.support.v4.util.MapCollections -> g0.h:
    android.support.v4.util.MapCollections$KeySet mKeySet -> b
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> a
    android.support.v4.util.MapCollections$ValuesCollection mValues -> c
    void colClear() -> a
    java.lang.Object colGetEntry(int,int) -> b
    java.util.Map colGetMap() -> c
    int colGetSize() -> d
    int colIndexOfKey(java.lang.Object) -> e
    int colIndexOfValue(java.lang.Object) -> f
    void colPut(java.lang.Object,java.lang.Object) -> g
    void colRemoveAt(int) -> h
    java.lang.Object colSetValue(int,java.lang.Object) -> i
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> j
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> k
    java.lang.Object[] toArrayHelper(int) -> l
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> m
android.support.v4.util.MapCollections$ArrayIterator -> g0.h$a:
    android.support.v4.util.MapCollections this$0 -> e
    int mSize -> b
    int mIndex -> c
    int mOffset -> a
    boolean mCanRemove -> d
android.support.v4.util.MapCollections$EntrySet -> g0.h$b:
    android.support.v4.util.MapCollections this$0 -> a
    1:1:boolean android.support.v4.util.MapCollections$EntrySet.add(java.util.Map$Entry):0:0 -> add
    1:1:boolean add(java.lang.Object):0 -> add
android.support.v4.util.MapCollections$KeySet -> g0.h$c:
    android.support.v4.util.MapCollections this$0 -> a
    1:1:boolean android.support.v4.util.MapCollections.containsAllHelper(java.util.Map,java.util.Collection):0:0 -> containsAll
    1:1:boolean containsAll(java.util.Collection):0 -> containsAll
    1:1:boolean android.support.v4.util.MapCollections.removeAllHelper(java.util.Map,java.util.Collection):0:0 -> removeAll
    1:1:boolean removeAll(java.util.Collection):0 -> removeAll
android.support.v4.util.MapCollections$MapIterator -> g0.h$d:
    android.support.v4.util.MapCollections this$0 -> d
    int mIndex -> b
    boolean mEntryValid -> c
    int mEnd -> a
    1:1:java.util.Map$Entry android.support.v4.util.MapCollections$MapIterator.next():0:0 -> next
    1:1:java.lang.Object next():0 -> next
android.support.v4.util.MapCollections$ValuesCollection -> g0.h$e:
    android.support.v4.util.MapCollections this$0 -> a
android.support.v4.util.Pools$SimplePool -> g0.i:
    java.lang.Object[] mPool -> a
    int mPoolSize -> b
    1:1:void android.support.v4.util.Pools$SimplePool.<init>(int):0:0 -> <init>
    1:1:void $r8$init$bridge(int):0 -> <init>
    2:2:void android.support.v4.view.NestedScrollingParentHelper.<init>(android.view.ViewGroup):0:0 -> <init>
    2:2:void android.support.v4.view.NestedScrollingParentHelper.$r8$init$bridge(android.view.ViewGroup):0 -> <init>
    java.lang.Object acquire() -> a
    1:1:boolean android.support.v4.util.Pools$SimplePool.isInPool(java.lang.Object):0:0 -> b
    1:1:boolean release(java.lang.Object):0 -> b
    2:2:boolean release(java.lang.Object):0:0 -> b
android.support.v4.util.Pools$SynchronizedPool -> g0.j:
    java.lang.Object mLock -> c
    java.lang.Object acquire() -> a
    boolean release(java.lang.Object) -> b
android.support.v4.util.SimpleArrayMap -> g0.k:
    java.lang.Object[] mBaseCache -> d
    java.lang.Object[] mArray -> b
    int mTwiceBaseCacheSize -> g
    int[] mHashes -> a
    int mBaseCacheSize -> e
    int mSize -> c
    java.lang.Object[] mTwiceBaseCache -> f
    void allocArrays(int) -> a
    void ensureCapacity(int) -> b
    void freeArrays(int[],java.lang.Object[],int) -> c
    1:1:int android.support.v4.util.SimpleArrayMap.binarySearchHashes(int[],int,int):0:0 -> d
    1:1:int indexOf(java.lang.Object,int):0 -> d
    2:2:int indexOf(java.lang.Object,int):0:0 -> d
    3:3:int android.support.v4.util.SimpleArrayMap.binarySearchHashes(int[],int,int):0:0 -> d
    3:3:int indexOf(java.lang.Object,int):0 -> d
    int indexOfKey(java.lang.Object) -> e
    1:1:int android.support.v4.util.SimpleArrayMap.size():0:0 -> equals
    1:1:boolean equals(java.lang.Object):0 -> equals
    2:2:boolean equals(java.lang.Object):0:0 -> equals
    3:3:int android.support.v4.util.SimpleArrayMap.size():0:0 -> equals
    3:3:boolean equals(java.lang.Object):0 -> equals
    4:4:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int android.support.v4.util.SimpleArrayMap.binarySearchHashes(int[],int,int):0:0 -> f
    1:1:int indexOfNull():0 -> f
    2:2:int indexOfNull():0:0 -> f
    3:3:int android.support.v4.util.SimpleArrayMap.binarySearchHashes(int[],int,int):0:0 -> f
    3:3:int indexOfNull():0 -> f
    int indexOfValue(java.lang.Object) -> g
    java.lang.Object keyAt(int) -> h
    java.lang.Object removeAt(int) -> i
    java.lang.Object valueAt(int) -> j
android.support.v4.util.SparseArrayCompat -> g0.l:
    java.lang.Object[] mValues -> c
    int[] mKeys -> b
    java.lang.Object DELETED -> e
    int mSize -> d
    boolean mGarbage -> a
    void append(int,java.lang.Object) -> a
    android.support.v4.util.SparseArrayCompat clone() -> b
    void gc() -> c
    java.lang.Object get(int) -> d
    java.lang.Object get(int,java.lang.Object) -> e
    int keyAt(int) -> f
    void put(int,java.lang.Object) -> g
    1:1:void android.support.v4.util.SparseArrayCompat.delete(int):0:0 -> h
    1:1:void remove(int):0 -> h
    int size() -> i
    java.lang.Object valueAt(int) -> j
android.support.v4.view.AbsSavedState -> h0.a:
    android.os.Parcelable mSuperState -> a
    android.support.v4.view.AbsSavedState EMPTY_STATE -> b
    1:1:void android.support.v4.view.AbsSavedState.<init>():0:0 -> <init>
    1:1:void <init>(android.support.v4.view.AbsSavedState$1):0 -> <init>
android.support.v4.view.AbsSavedState$1 -> h0.a$a:
android.support.v4.view.AbsSavedState$2 -> h0.a$b:
    1:1:android.support.v4.view.AbsSavedState android.support.v4.view.AbsSavedState$2.createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    1:1:android.support.v4.view.AbsSavedState android.support.v4.view.AbsSavedState$2.createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    2:2:android.support.v4.view.AbsSavedState android.support.v4.view.AbsSavedState$2.createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    2:2:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    1:1:android.support.v4.view.AbsSavedState[] android.support.v4.view.AbsSavedState$2.newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
android.support.v4.view.AccessibilityDelegateCompat -> h0.b:
    android.view.View$AccessibilityDelegate mBridge -> a
    android.view.View$AccessibilityDelegate DEFAULT_DELEGATE -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    1:1:android.view.accessibility.AccessibilityNodeInfo android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.unwrap():0:0 -> b
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    2:2:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> c
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> h0.b$a:
    android.support.v4.view.AccessibilityDelegateCompat mCompat -> a
    1:1:boolean android.support.v4.view.AccessibilityDelegateCompat.dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> dispatchPopulateAccessibilityEvent
    1:1:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> dispatchPopulateAccessibilityEvent
    1:1:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat android.support.v4.view.AccessibilityDelegateCompat.getAccessibilityNodeProvider(android.view.View):0:0 -> getAccessibilityNodeProvider
    1:1:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View):0 -> getAccessibilityNodeProvider
    2:2:java.lang.Object android.support.v4.view.accessibility.AccessibilityNodeProviderCompat.getProvider():0:0 -> getAccessibilityNodeProvider
    2:2:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View):0 -> getAccessibilityNodeProvider
    3:3:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View):0:0 -> getAccessibilityNodeProvider
    1:1:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.wrap(android.view.accessibility.AccessibilityNodeInfo):0:0 -> onInitializeAccessibilityNodeInfo
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    2:2:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0:0 -> onInitializeAccessibilityNodeInfo
    1:1:void android.support.v4.view.AccessibilityDelegateCompat.onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> onPopulateAccessibilityEvent
    1:1:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> onPopulateAccessibilityEvent
    1:1:boolean android.support.v4.view.AccessibilityDelegateCompat.onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> onRequestSendAccessibilityEvent
    1:1:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent):0 -> onRequestSendAccessibilityEvent
    1:1:void android.support.v4.view.AccessibilityDelegateCompat.sendAccessibilityEvent(android.view.View,int):0:0 -> sendAccessibilityEvent
    1:1:void sendAccessibilityEvent(android.view.View,int):0 -> sendAccessibilityEvent
    1:1:void android.support.v4.view.AccessibilityDelegateCompat.sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> sendAccessibilityEventUnchecked
    1:1:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> sendAccessibilityEventUnchecked
android.support.v4.view.ActionProvider -> h0.c:
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> a
    boolean hasSubMenu() -> a
    boolean isVisible() -> b
    android.view.View onCreateActionView() -> c
    android.view.View onCreateActionView(android.view.MenuItem) -> d
    boolean onPerformDefaultAction() -> e
    void onPrepareSubMenu(android.view.SubMenu) -> f
    boolean overridesItemVisibility() -> g
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> h
android.support.v4.view.ActionProvider$VisibilityListener -> h0.c$a:
android.support.v4.view.KeyEventDispatcher -> h0.d:
    java.lang.reflect.Field sDialogKeyListenerField -> d
    boolean sActionBarFieldsFetched -> a
    boolean sDialogFieldsFetched -> c
    java.lang.reflect.Method sActionBarOnMenuKeyMethod -> b
    1:1:boolean android.support.v4.view.ViewCompat.dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent):0:0 -> a
    1:1:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    2:2:android.support.v4.view.ViewCompat$UnhandledKeyEventManager android.support.v4.view.ViewCompat$UnhandledKeyEventManager.at(android.view.View):0:0 -> a
    2:2:boolean android.support.v4.view.ViewCompat.dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    2:2:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    3:3:boolean android.support.v4.view.ViewCompat$UnhandledKeyEventManager.preDispatch(android.view.KeyEvent):0:0 -> a
    3:3:boolean android.support.v4.view.ViewCompat.dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    3:3:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    4:4:android.util.SparseArray android.support.v4.view.ViewCompat$UnhandledKeyEventManager.getCapturedKeys():0:0 -> a
    4:4:boolean android.support.v4.view.ViewCompat$UnhandledKeyEventManager.preDispatch(android.view.KeyEvent):0 -> a
    4:4:boolean android.support.v4.view.ViewCompat.dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    4:4:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    5:5:boolean android.support.v4.view.ViewCompat$UnhandledKeyEventManager.preDispatch(android.view.KeyEvent):0:0 -> a
    5:5:boolean android.support.v4.view.ViewCompat.dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    5:5:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    6:6:boolean android.support.v4.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> a
    6:6:boolean android.support.v4.view.ViewCompat$UnhandledKeyEventManager.preDispatch(android.view.KeyEvent):0 -> a
    6:6:boolean android.support.v4.view.ViewCompat.dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    6:6:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    7:7:boolean android.support.v4.view.ViewCompat$UnhandledKeyEventManager.preDispatch(android.view.KeyEvent):0:0 -> a
    7:7:boolean android.support.v4.view.ViewCompat.dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    7:7:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> a
    1:1:boolean android.support.v4.view.KeyEventDispatcher.activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent):0:0 -> b
    1:1:boolean dispatchKeyEvent(android.support.v4.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0 -> b
    2:2:boolean android.support.v4.view.KeyEventDispatcher.actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent):0:0 -> b
    2:2:boolean android.support.v4.view.KeyEventDispatcher.activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent):0 -> b
    2:2:boolean dispatchKeyEvent(android.support.v4.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0 -> b
    3:3:boolean android.support.v4.view.KeyEventDispatcher.activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent):0:0 -> b
    3:3:boolean dispatchKeyEvent(android.support.v4.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0 -> b
    4:4:boolean dispatchKeyEvent(android.support.v4.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0:0 -> b
    5:5:android.content.DialogInterface$OnKeyListener android.support.v4.view.KeyEventDispatcher.getDialogKeyListenerPre28(android.app.Dialog):0:0 -> b
    5:5:boolean android.support.v4.view.KeyEventDispatcher.dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent):0 -> b
    5:5:boolean dispatchKeyEvent(android.support.v4.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0 -> b
    6:6:boolean android.support.v4.view.KeyEventDispatcher.dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent):0:0 -> b
    6:6:boolean dispatchKeyEvent(android.support.v4.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0 -> b
    7:7:boolean dispatchKeyEvent(android.support.v4.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0:0 -> b
android.support.v4.view.KeyEventDispatcher$Component -> h0.d$a:
    boolean superDispatchKeyEvent(android.view.KeyEvent) -> f
android.support.v4.view.NestedScrollingChild -> h0.f:
android.support.v4.view.NestedScrollingChild2 -> h0.e:
    void stopNestedScroll(int) -> f
android.support.v4.view.NestedScrollingChildHelper -> h0.g:
    android.view.ViewParent mNestedScrollingParentTouch -> a
    int[] mTempNestedScrollConsumed -> e
    android.view.View mView -> c
    android.view.ViewParent mNestedScrollingParentNonTouch -> b
    boolean mIsNestedScrollingEnabled -> d
    1:1:boolean android.support.v4.view.NestedScrollingChildHelper.isNestedScrollingEnabled():0:0 -> a
    1:1:boolean dispatchNestedFling(float,float,boolean):0 -> a
    2:2:boolean dispatchNestedFling(float,float,boolean):0:0 -> a
    3:3:boolean android.support.v4.view.ViewParentCompat.onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean):0:0 -> a
    3:3:boolean dispatchNestedFling(float,float,boolean):0 -> a
    1:1:boolean android.support.v4.view.NestedScrollingChildHelper.isNestedScrollingEnabled():0:0 -> b
    1:1:boolean dispatchNestedPreFling(float,float):0 -> b
    2:2:boolean dispatchNestedPreFling(float,float):0:0 -> b
    3:3:boolean android.support.v4.view.ViewParentCompat.onNestedPreFling(android.view.ViewParent,android.view.View,float,float):0:0 -> b
    3:3:boolean dispatchNestedPreFling(float,float):0 -> b
    1:1:boolean android.support.v4.view.NestedScrollingChildHelper.isNestedScrollingEnabled():0:0 -> c
    1:1:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0 -> c
    2:2:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0:0 -> c
    3:3:void android.support.v4.view.ViewParentCompat.onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int):0:0 -> c
    3:3:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0 -> c
    4:4:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0:0 -> c
    1:1:boolean android.support.v4.view.NestedScrollingChildHelper.isNestedScrollingEnabled():0:0 -> d
    1:1:boolean dispatchNestedScroll(int,int,int,int,int[],int):0 -> d
    2:2:boolean dispatchNestedScroll(int,int,int,int,int[],int):0:0 -> d
    3:3:void android.support.v4.view.ViewParentCompat.onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int):0:0 -> d
    3:3:boolean dispatchNestedScroll(int,int,int,int,int[],int):0 -> d
    4:4:boolean dispatchNestedScroll(int,int,int,int,int[],int):0:0 -> d
    android.view.ViewParent getNestedScrollingParentForType(int) -> e
    boolean hasNestedScrollingParent(int) -> f
    1:1:boolean android.support.v4.view.NestedScrollingChildHelper.hasNestedScrollingParent(int):0:0 -> g
    1:1:boolean startNestedScroll(int,int):0 -> g
    2:2:boolean android.support.v4.view.NestedScrollingChildHelper.isNestedScrollingEnabled():0:0 -> g
    2:2:boolean startNestedScroll(int,int):0 -> g
    3:3:boolean startNestedScroll(int,int):0:0 -> g
    4:4:boolean android.support.v4.view.ViewParentCompat.onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int):0:0 -> g
    4:4:boolean startNestedScroll(int,int):0 -> g
    5:5:void android.support.v4.view.NestedScrollingChildHelper.setNestedScrollingParentForType(int,android.view.ViewParent):0:0 -> g
    5:5:boolean startNestedScroll(int,int):0 -> g
    6:6:boolean startNestedScroll(int,int):0:0 -> g
    7:7:void android.support.v4.view.ViewParentCompat.onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int):0:0 -> g
    7:7:boolean startNestedScroll(int,int):0 -> g
    8:8:boolean startNestedScroll(int,int):0:0 -> g
    1:1:void android.support.v4.view.ViewParentCompat.onStopNestedScroll(android.view.ViewParent,android.view.View,int):0:0 -> h
    1:1:void stopNestedScroll(int):0 -> h
    2:2:void android.support.v4.view.NestedScrollingChildHelper.setNestedScrollingParentForType(int,android.view.ViewParent):0:0 -> h
    2:2:void stopNestedScroll(int):0 -> h
android.support.v4.view.NestedScrollingParent2 -> h0.h:
    void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> a
    void onNestedScroll(android.view.View,int,int,int,int,int) -> b
    void onStopNestedScroll(android.view.View,int) -> c
    void onNestedPreScroll(android.view.View,int,int,int[],int) -> d
    boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> e
android.support.v4.view.OnApplyWindowInsetsListener -> h0.i:
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> a
android.support.v4.view.ViewCompat -> h0.j:
    java.lang.ThreadLocal sThreadLocalRect -> d
    java.lang.reflect.Field sAccessibilityDelegateField -> b
    java.util.WeakHashMap sViewPropertyAnimatorMap -> a
    boolean sAccessibilityDelegateCheckFailed -> c
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> a
    1:1:void android.support.v4.view.ViewCompat.tickleInvalidationFlag(android.view.View):0:0 -> b
    1:1:void compatOffsetLeftAndRight(android.view.View,int):0 -> b
    2:2:void compatOffsetLeftAndRight(android.view.View,int):0:0 -> b
    1:1:void android.support.v4.view.ViewCompat.tickleInvalidationFlag(android.view.View):0:0 -> c
    1:1:void compatOffsetTopAndBottom(android.view.View,int):0 -> c
    2:2:void compatOffsetTopAndBottom(android.view.View,int):0:0 -> c
    1:1:android.support.v4.view.ViewCompat$UnhandledKeyEventManager android.support.v4.view.ViewCompat$UnhandledKeyEventManager.at(android.view.View):0:0 -> d
    1:1:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent):0 -> d
    2:2:boolean android.support.v4.view.ViewCompat$UnhandledKeyEventManager.dispatch(android.view.View,android.view.KeyEvent):0:0 -> d
    2:2:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent):0 -> d
    3:3:void android.support.v4.view.ViewCompat$UnhandledKeyEventManager.recalcViewsWithUnhandled():0:0 -> d
    3:3:boolean android.support.v4.view.ViewCompat$UnhandledKeyEventManager.dispatch(android.view.View,android.view.KeyEvent):0 -> d
    3:3:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent):0 -> d
    4:4:boolean android.support.v4.view.ViewCompat$UnhandledKeyEventManager.dispatch(android.view.View,android.view.KeyEvent):0:0 -> d
    4:4:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent):0 -> d
    5:5:android.util.SparseArray android.support.v4.view.ViewCompat$UnhandledKeyEventManager.getCapturedKeys():0:0 -> d
    5:5:boolean android.support.v4.view.ViewCompat$UnhandledKeyEventManager.dispatch(android.view.View,android.view.KeyEvent):0 -> d
    5:5:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent):0 -> d
    6:6:boolean android.support.v4.view.ViewCompat$UnhandledKeyEventManager.dispatch(android.view.View,android.view.KeyEvent):0:0 -> d
    6:6:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent):0 -> d
    android.graphics.Rect getEmptyTempRect() -> e
    void offsetLeftAndRight(android.view.View,int) -> f
    void offsetTopAndBottom(android.view.View,int) -> g
    1:1:android.view.View$AccessibilityDelegate android.support.v4.view.AccessibilityDelegateCompat.getBridge():0:0 -> h
    1:1:void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat):0 -> h
    2:2:void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat):0:0 -> h
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> i
    void tickleInvalidationFlag(android.view.View) -> j
android.support.v4.view.ViewCompat$1 -> h0.j$a:
    android.support.v4.view.OnApplyWindowInsetsListener val$listener -> a
    1:1:android.support.v4.view.WindowInsetsCompat android.support.v4.view.WindowInsetsCompat.wrap(java.lang.Object):0:0 -> onApplyWindowInsets
    1:1:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets):0 -> onApplyWindowInsets
    2:2:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets):0:0 -> onApplyWindowInsets
    3:3:java.lang.Object android.support.v4.view.WindowInsetsCompat.unwrap(android.support.v4.view.WindowInsetsCompat):0:0 -> onApplyWindowInsets
    3:3:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets):0 -> onApplyWindowInsets
    4:4:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets):0:0 -> onApplyWindowInsets
android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerCompat -> h0.j$b:
    boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> a
android.support.v4.view.ViewCompat$UnhandledKeyEventManager -> h0.j$c:
    android.util.SparseArray mCapturedKeys -> b
    java.lang.ref.WeakReference mLastDispatchedPreViewKeyEvent -> c
    java.util.ArrayList sViewsWithListeners -> d
    java.util.WeakHashMap mViewsContainingListeners -> a
    android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> a
    boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> b
android.support.v4.view.ViewConfigurationCompat -> h0.k:
    java.lang.reflect.Method sGetScaledScrollFactorMethod -> a
    float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context) -> a
android.support.v4.view.ViewPropertyAnimatorCompat -> h0.l:
    java.lang.ref.WeakReference mView -> a
    android.support.v4.view.ViewPropertyAnimatorCompat alpha(float) -> a
    void cancel() -> b
    android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> c
    android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> d
    void setListenerInternal(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> e
    android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> f
    android.support.v4.view.ViewPropertyAnimatorCompat translationY(float) -> g
android.support.v4.view.ViewPropertyAnimatorCompat$1 -> h0.l$a:
    android.view.View val$view -> b
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> a
android.support.v4.view.ViewPropertyAnimatorCompat$2 -> h0.l$b:
    android.support.v4.view.ViewPropertyAnimatorUpdateListener val$listener -> a
    1:1:void android.support.v7.app.WindowDecorActionBar$3.onAnimationUpdate(android.view.View):0:0 -> onAnimationUpdate
    1:1:void onAnimationUpdate(android.animation.ValueAnimator):0 -> onAnimationUpdate
android.support.v4.view.ViewPropertyAnimatorListener -> h0.m:
    void onAnimationEnd(android.view.View) -> a
    void onAnimationStart(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v4.view.ViewPropertyAnimatorListenerAdapter -> h0.n:
    void onAnimationStart(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v4.view.ViewPropertyAnimatorUpdateListener -> h0.o:
android.support.v4.view.WindowInsetsCompat -> h0.p:
    java.lang.Object mInsets -> a
    int getSystemWindowInsetBottom() -> a
    int getSystemWindowInsetLeft() -> b
    int getSystemWindowInsetRight() -> c
    int getSystemWindowInsetTop() -> d
android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener -> i0.a:
android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper -> i0.b:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener mListener -> a
    1:1:void android.support.design.widget.BaseTransientBottomBar$SnackbarBaseLayout$1.onTouchExplorationStateChanged(boolean):0:0 -> onTouchExplorationStateChanged
    1:1:void onTouchExplorationStateChanged(boolean):0 -> onTouchExplorationStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> i0.c:
    android.view.accessibility.AccessibilityNodeInfo mInfo -> a
    void setCollectionItemInfo(java.lang.Object) -> a
    1:1:void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getBoundsInParent(android.graphics.Rect):0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
    3:3:void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getBoundsInScreen(android.graphics.Rect):0:0 -> toString
    3:3:java.lang.String toString():0 -> toString
    4:4:java.lang.String toString():0:0 -> toString
    5:5:java.lang.CharSequence android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getPackageName():0:0 -> toString
    5:5:java.lang.String toString():0 -> toString
    6:6:java.lang.String toString():0:0 -> toString
    7:7:java.lang.CharSequence android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getClassName():0:0 -> toString
    7:7:java.lang.String toString():0 -> toString
    8:8:java.lang.String toString():0:0 -> toString
    9:9:java.lang.CharSequence android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getText():0:0 -> toString
    9:9:java.lang.String toString():0 -> toString
    10:10:java.lang.String toString():0:0 -> toString
    11:11:java.lang.CharSequence android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getContentDescription():0:0 -> toString
    11:11:java.lang.String toString():0 -> toString
    12:12:java.lang.String toString():0:0 -> toString
    13:13:java.lang.String android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getViewIdResourceName():0:0 -> toString
    13:13:java.lang.String toString():0 -> toString
    14:14:java.lang.String toString():0:0 -> toString
    15:15:boolean android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isCheckable():0:0 -> toString
    15:15:java.lang.String toString():0 -> toString
    16:16:java.lang.String toString():0:0 -> toString
    17:17:boolean android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isChecked():0:0 -> toString
    17:17:java.lang.String toString():0 -> toString
    18:18:java.lang.String toString():0:0 -> toString
    19:19:boolean android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isFocusable():0:0 -> toString
    19:19:java.lang.String toString():0 -> toString
    20:20:java.lang.String toString():0:0 -> toString
    21:21:boolean android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isFocused():0:0 -> toString
    21:21:java.lang.String toString():0 -> toString
    22:22:java.lang.String toString():0:0 -> toString
    23:23:boolean android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isSelected():0:0 -> toString
    23:23:java.lang.String toString():0 -> toString
    24:24:java.lang.String toString():0:0 -> toString
    25:25:boolean android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isClickable():0:0 -> toString
    25:25:java.lang.String toString():0 -> toString
    26:26:java.lang.String toString():0:0 -> toString
    27:27:boolean android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isLongClickable():0:0 -> toString
    27:27:java.lang.String toString():0 -> toString
    28:28:java.lang.String toString():0:0 -> toString
    29:29:boolean android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isEnabled():0:0 -> toString
    29:29:java.lang.String toString():0 -> toString
    30:30:java.lang.String toString():0:0 -> toString
    31:31:boolean android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isPassword():0:0 -> toString
    31:31:java.lang.String toString():0 -> toString
    32:32:java.lang.String toString():0:0 -> toString
    33:33:boolean android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isScrollable():0:0 -> toString
    33:33:java.lang.String toString():0 -> toString
    34:34:java.lang.String toString():0:0 -> toString
    35:35:int android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getActions():0:0 -> toString
    35:35:java.lang.String toString():0 -> toString
    36:36:java.lang.String toString():0:0 -> toString
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> i0.c$a:
    java.lang.Object mInfo -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> i0.d:
    java.lang.Object mProvider -> a
android.support.v4.view.animation.FastOutLinearInInterpolator -> j0.a:
    float[] VALUES -> c
android.support.v4.view.animation.FastOutSlowInInterpolator -> j0.b:
    float[] VALUES -> c
android.support.v4.view.animation.LinearOutSlowInInterpolator -> j0.c:
    float[] VALUES -> c
android.support.v4.view.animation.LookupTableInterpolator -> j0.d:
    float mStepSize -> b
    float[] mValues -> a
android.support.v4.widget.AutoScrollHelper -> k0.a:
    boolean mAlreadyDelayed -> m
    boolean mNeedsReset -> n
    float[] mMinimumVelocity -> k
    boolean mNeedsCancel -> o
    float[] mMaximumVelocity -> l
    boolean mAnimating -> p
    float[] mRelativeVelocity -> j
    android.view.animation.Interpolator mEdgeInterpolator -> c
    float[] mMaximumEdges -> g
    int mEdgeType -> h
    int mActivationDelay -> i
    float[] mRelativeEdges -> f
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> b
    boolean mEnabled -> q
    java.lang.Runnable mRunnable -> e
    int DEFAULT_ACTIVATION_DELAY -> r
    android.view.View mTarget -> d
    1:1:android.support.v4.widget.AutoScrollHelper android.support.v4.widget.AutoScrollHelper.setMaximumVelocity(float,float):0:0 -> <init>
    1:1:void <init>(android.view.View):0 -> <init>
    2:2:android.support.v4.widget.AutoScrollHelper android.support.v4.widget.AutoScrollHelper.setMinimumVelocity(float,float):0:0 -> <init>
    2:2:void <init>(android.view.View):0 -> <init>
    3:3:android.support.v4.widget.AutoScrollHelper android.support.v4.widget.AutoScrollHelper.setEdgeType(int):0:0 -> <init>
    3:3:void <init>(android.view.View):0 -> <init>
    4:4:android.support.v4.widget.AutoScrollHelper android.support.v4.widget.AutoScrollHelper.setMaximumEdges(float,float):0:0 -> <init>
    4:4:void <init>(android.view.View):0 -> <init>
    5:5:android.support.v4.widget.AutoScrollHelper android.support.v4.widget.AutoScrollHelper.setRelativeEdges(float,float):0:0 -> <init>
    5:5:void <init>(android.view.View):0 -> <init>
    6:6:android.support.v4.widget.AutoScrollHelper android.support.v4.widget.AutoScrollHelper.setRelativeVelocity(float,float):0:0 -> <init>
    6:6:void <init>(android.view.View):0 -> <init>
    7:7:void <init>(android.view.View):0:0 -> <init>
    8:8:android.support.v4.widget.AutoScrollHelper android.support.v4.widget.AutoScrollHelper.setActivationDelay(int):0:0 -> <init>
    8:8:void <init>(android.view.View):0 -> <init>
    9:9:void android.support.v4.widget.AutoScrollHelper$ClampedScroller.setRampUpDuration(int):0:0 -> <init>
    9:9:android.support.v4.widget.AutoScrollHelper android.support.v4.widget.AutoScrollHelper.setRampUpDuration(int):0 -> <init>
    9:9:void <init>(android.view.View):0 -> <init>
    10:10:void android.support.v4.widget.AutoScrollHelper$ClampedScroller.setRampDownDuration(int):0:0 -> <init>
    10:10:android.support.v4.widget.AutoScrollHelper android.support.v4.widget.AutoScrollHelper.setRampDownDuration(int):0 -> <init>
    10:10:void <init>(android.view.View):0 -> <init>
    1:1:float android.support.v4.widget.AutoScrollHelper.getEdgeValue(float,float,float,float):0:0 -> a
    1:1:float computeTargetVelocity(int,float,float,float):0 -> a
    2:2:float computeTargetVelocity(int,float,float,float):0:0 -> a
    float constrain(float,float,float) -> b
    float constrainEdgeValue(float,float) -> c
    1:1:void android.support.v4.widget.AutoScrollHelper$ClampedScroller.requestStop():0:0 -> d
    1:1:void requestStop():0 -> d
    1:1:int android.support.v4.widget.AutoScrollHelper$ClampedScroller.getVerticalDirection():0:0 -> e
    1:1:boolean shouldAnimate():0 -> e
    2:2:int android.support.v4.widget.AutoScrollHelper$ClampedScroller.getHorizontalDirection():0:0 -> e
    2:2:boolean shouldAnimate():0 -> e
    3:3:boolean shouldAnimate():0:0 -> e
    4:4:boolean android.support.v4.widget.ListViewAutoScrollHelper.canTargetScrollVertically(int):0:0 -> e
    4:4:boolean shouldAnimate():0 -> e
    1:1:void android.support.v4.widget.AutoScrollHelper$ClampedScroller.setTargetVelocity(float,float):0:0 -> onTouch
    1:1:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    2:2:boolean onTouch(android.view.View,android.view.MotionEvent):0:0 -> onTouch
    3:3:void android.support.v4.widget.AutoScrollHelper.startAnimating():0:0 -> onTouch
    3:3:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    4:4:void android.support.v4.view.ViewCompat.postOnAnimationDelayed(android.view.View,java.lang.Runnable,long):0:0 -> onTouch
    4:4:void android.support.v4.widget.AutoScrollHelper.startAnimating():0 -> onTouch
    4:4:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    5:5:void android.support.v4.widget.AutoScrollHelper.startAnimating():0:0 -> onTouch
    5:5:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> k0.a$a:
    long mStopTime -> i
    float mStopValue -> j
    long mDeltaTime -> f
    long mStartTime -> e
    int mEffectiveRampDown -> k
    int mDeltaY -> h
    float mTargetVelocityY -> d
    float mTargetVelocityX -> c
    int mDeltaX -> g
    int mRampDownDuration -> b
    int mRampUpDuration -> a
    float getValueAt(long) -> a
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> k0.a$b:
    android.support.v4.widget.AutoScrollHelper this$0 -> b
    1:1:void android.support.v4.widget.AutoScrollHelper$ClampedScroller.start():0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:boolean android.support.v4.widget.AutoScrollHelper$ClampedScroller.isFinished():0:0 -> run
    3:3:void run():0 -> run
    4:4:void run():0:0 -> run
    5:5:void android.support.v4.widget.AutoScrollHelper.cancelTargetTouch():0:0 -> run
    5:5:void run():0 -> run
    6:6:void android.support.v4.widget.AutoScrollHelper$ClampedScroller.computeScrollDelta():0:0 -> run
    6:6:void run():0 -> run
    7:7:void run():0:0 -> run
    8:8:void android.support.v4.widget.ListViewAutoScrollHelper.scrollTargetBy(int,int):0:0 -> run
    8:8:void run():0 -> run
    9:9:void android.support.v4.widget.ListViewCompat.scrollListBy(android.widget.ListView,int):0:0 -> run
    9:9:void android.support.v4.widget.ListViewAutoScrollHelper.scrollTargetBy(int,int):0 -> run
    9:9:void run():0 -> run
    10:10:void run():0:0 -> run
    11:11:void android.support.v4.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> run
    11:11:void run():0 -> run
    12:12:void android.support.v4.widget.AutoScrollHelper$ClampedScroller.computeScrollDelta():0:0 -> run
    12:12:void run():0 -> run
    13:13:void run():0:0 -> run
android.support.v4.widget.AutoSizeableTextView -> k0.b:
    boolean PLATFORM_SUPPORTS_AUTOSIZE -> a
android.support.v4.widget.CompoundButtonCompat -> k0.c:
    java.lang.reflect.Field sButtonDrawableField -> a
    boolean sButtonDrawableFieldFetched -> b
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> a
android.support.v4.widget.CursorAdapter -> k0.d:
    android.database.Cursor mCursor -> d
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> g
    android.database.DataSetObserver mDataSetObserver -> h
    int mRowIDColumn -> f
    android.content.Context mContext -> e
    boolean mDataValid -> b
    boolean mAutoRequery -> c
    android.support.v4.widget.CursorFilter mCursorFilter -> i
    1:1:void android.support.v4.widget.CursorAdapter.init(android.content.Context,android.database.Cursor,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.database.Cursor,boolean):0 -> <init>
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    1:1:android.database.Cursor android.support.v4.widget.CursorAdapter.swapCursor(android.database.Cursor):0:0 -> b
    1:1:void changeCursor(android.database.Cursor):0 -> b
    2:2:void changeCursor(android.database.Cursor):0:0 -> b
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> d
    1:1:android.view.View android.support.v4.widget.ResourceCursorAdapter.newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup):0:0 -> getDropDownView
    1:1:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup):0 -> getDropDownView
    2:2:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup):0:0 -> getDropDownView
android.support.v4.widget.CursorAdapter$ChangeObserver -> k0.d$a:
    android.support.v4.widget.CursorAdapter this$0 -> a
    1:1:void android.support.v4.widget.CursorAdapter.onContentChanged():0:0 -> onChange
    1:1:void onChange(boolean):0 -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> k0.d$b:
    android.support.v4.widget.CursorAdapter this$0 -> a
android.support.v4.widget.CursorFilter -> k0.e:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    1:1:android.database.Cursor android.support.v7.widget.SuggestionsAdapter.runQueryOnBackgroundThread(java.lang.CharSequence):0:0 -> performFiltering
    1:1:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence):0 -> performFiltering
    2:2:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence):0:0 -> performFiltering
    1:1:android.database.Cursor android.support.v4.widget.CursorAdapter.getCursor():0:0 -> publishResults
    1:1:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults):0 -> publishResults
    2:2:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults):0:0 -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> k0.e$a:
android.support.v4.widget.ListViewAutoScrollHelper -> k0.f:
    android.widget.ListView mTarget -> s
android.support.v4.widget.NestedScrollView -> android.support.v4.widget.NestedScrollView:
    boolean mFillViewport -> m
    boolean mIsLaidOut -> i
    int[] mScrollOffset -> s
    boolean mIsBeingDragged -> k
    android.support.v4.widget.NestedScrollView$SavedState mSavedState -> w
    android.graphics.Rect mTempRect -> c
    android.widget.OverScroller mScroller -> d
    android.support.v4.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener -> A
    int[] SCROLLVIEW_STYLEABLE -> C
    android.widget.EdgeEffect mEdgeGlowTop -> e
    boolean mIsLayoutDirty -> h
    int mNestedYOffset -> u
    int mMaximumVelocity -> q
    boolean mSmoothScrollingEnabled -> n
    int mTouchSlop -> o
    android.support.v4.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE -> B
    android.view.VelocityTracker mVelocityTracker -> l
    int[] mScrollConsumed -> t
    long mLastScroll -> b
    int mLastMotionY -> g
    android.support.v4.view.NestedScrollingChildHelper mChildHelper -> y
    android.widget.EdgeEffect mEdgeGlowBottom -> f
    float mVerticalScrollFactor -> z
    android.view.View mChildToScrollTo -> j
    android.support.v4.view.NestedScrollingParentHelper mParentHelper -> x
    int mLastScrollerY -> v
    int mActivePointerId -> r
    int mMinimumVelocity -> p
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void initScrollView():0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    4:4:android.view.View$AccessibilityDelegate android.support.v4.view.AccessibilityDelegateCompat.getBridge():0:0 -> <init>
    4:4:void android.support.v4.view.ViewCompat.setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    5:5:void android.support.v4.view.ViewCompat.setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    boolean startNestedScroll(int,int) -> A
    1:1:void android.support.v4.view.NestedScrollingParentHelper.onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> a
    1:1:void onNestedScrollAccepted(android.view.View,android.view.View,int,int):0 -> a
    2:2:void onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> a
    void onNestedScroll(android.view.View,int,int,int,int,int) -> b
    1:1:void android.support.v4.view.NestedScrollingParentHelper.onStopNestedScroll(android.view.View,int):0:0 -> c
    1:1:void onStopNestedScroll(android.view.View,int):0 -> c
    2:2:void stopNestedScroll(int):0:0 -> c
    2:2:void onStopNestedScroll(android.view.View,int):0 -> c
    1:1:void android.support.v4.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> computeScroll
    1:1:void computeScroll():0 -> computeScroll
    2:2:void computeScroll():0:0 -> computeScroll
    3:3:void stopNestedScroll(int):0:0 -> computeScroll
    3:3:void computeScroll():0 -> computeScroll
    4:4:void computeScroll():0:0 -> computeScroll
    void onNestedPreScroll(android.view.View,int,int,int[],int) -> d
    1:1:void android.support.v4.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> draw
    1:1:void draw(android.graphics.Canvas):0 -> draw
    2:2:void draw(android.graphics.Canvas):0:0 -> draw
    3:3:void android.support.v4.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> draw
    3:3:void draw(android.graphics.Canvas):0 -> draw
    4:4:void draw(android.graphics.Canvas):0:0 -> draw
    boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> e
    void stopNestedScroll(int) -> f
    1:1:boolean isOffScreen(android.view.View):0:0 -> g
    1:1:boolean arrowScroll(int):0 -> g
    2:2:boolean arrowScroll(int):0:0 -> g
    1:1:int android.support.v4.view.NestedScrollingParentHelper.getNestedScrollAxes():0:0 -> getNestedScrollAxes
    1:1:int getNestedScrollAxes():0 -> getNestedScrollAxes
    int clamp(int,int,int) -> h
    int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> i
    1:1:boolean android.support.v4.view.NestedScrollingChildHelper.isNestedScrollingEnabled():0:0 -> isNestedScrollingEnabled
    1:1:boolean isNestedScrollingEnabled():0 -> isNestedScrollingEnabled
    boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> j
    boolean dispatchNestedScroll(int,int,int,int,int[],int) -> k
    void doScrollY(int) -> l
    1:1:void stopNestedScroll(int):0:0 -> m
    1:1:void endDrag():0 -> m
    2:2:void endDrag():0:0 -> m
    void ensureGlows() -> n
    1:1:boolean canScroll():0:0 -> o
    1:1:boolean executeKeyEvent(android.view.KeyEvent):0 -> o
    2:2:boolean executeKeyEvent(android.view.KeyEvent):0:0 -> o
    3:3:boolean pageScroll(int):0:0 -> o
    3:3:boolean executeKeyEvent(android.view.KeyEvent):0 -> o
    4:4:boolean executeKeyEvent(android.view.KeyEvent):0:0 -> o
    1:1:void initVelocityTrackerIfNotExists():0:0 -> onInterceptTouchEvent
    1:1:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    2:2:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    3:3:void android.support.v4.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> onInterceptTouchEvent
    3:3:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    4:4:void stopNestedScroll(int):0:0 -> onInterceptTouchEvent
    4:4:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    5:5:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    6:6:boolean inChild(int,int):0:0 -> onInterceptTouchEvent
    6:6:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    7:7:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    8:8:void initOrResetVelocityTracker():0:0 -> onInterceptTouchEvent
    8:8:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    9:9:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    1:1:void onNestedPreScroll(android.view.View,int,int,int[],int):0:0 -> onNestedPreScroll
    1:1:void onNestedPreScroll(android.view.View,int,int,int[]):0 -> onNestedPreScroll
    1:1:void onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> onNestedScrollAccepted
    1:1:void onNestedScrollAccepted(android.view.View,android.view.View,int):0 -> onNestedScrollAccepted
    2:2:void android.support.v4.view.NestedScrollingParentHelper.onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> onNestedScrollAccepted
    2:2:void onNestedScrollAccepted(android.view.View,android.view.View,int,int):0 -> onNestedScrollAccepted
    2:2:void onNestedScrollAccepted(android.view.View,android.view.View,int):0 -> onNestedScrollAccepted
    3:3:void onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> onNestedScrollAccepted
    3:3:void onNestedScrollAccepted(android.view.View,android.view.View,int):0 -> onNestedScrollAccepted
    1:1:boolean isOffScreen(android.view.View):0:0 -> onRequestFocusInDescendants
    1:1:boolean onRequestFocusInDescendants(int,android.graphics.Rect):0 -> onRequestFocusInDescendants
    2:2:boolean onRequestFocusInDescendants(int,android.graphics.Rect):0:0 -> onRequestFocusInDescendants
    1:1:void android.support.v7.app.AlertController$2.onScrollChange(android.support.v4.widget.NestedScrollView,int,int,int,int):0:0 -> onScrollChanged
    1:1:void onScrollChanged(int,int,int,int):0 -> onScrollChanged
    1:1:void onStopNestedScroll(android.view.View,int):0:0 -> onStopNestedScroll
    1:1:void onStopNestedScroll(android.view.View):0 -> onStopNestedScroll
    2:2:void android.support.v4.view.NestedScrollingParentHelper.onStopNestedScroll(android.view.View,int):0:0 -> onStopNestedScroll
    2:2:void onStopNestedScroll(android.view.View,int):0 -> onStopNestedScroll
    2:2:void onStopNestedScroll(android.view.View):0 -> onStopNestedScroll
    3:3:void stopNestedScroll(int):0:0 -> onStopNestedScroll
    3:3:void onStopNestedScroll(android.view.View,int):0 -> onStopNestedScroll
    3:3:void onStopNestedScroll(android.view.View):0 -> onStopNestedScroll
    1:1:void initVelocityTrackerIfNotExists():0:0 -> onTouchEvent
    1:1:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    2:2:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    3:3:void android.support.v4.widget.EdgeEffectCompat.onPull(android.widget.EdgeEffect,float,float):0:0 -> onTouchEvent
    3:3:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    4:4:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    5:5:void android.support.v4.widget.EdgeEffectCompat.onPull(android.widget.EdgeEffect,float,float):0:0 -> onTouchEvent
    5:5:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    6:6:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    7:7:void android.support.v4.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> onTouchEvent
    7:7:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    8:8:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    9:9:void android.support.v4.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> onTouchEvent
    9:9:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    10:10:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    1:1:void fling(int):0:0 -> p
    1:1:void flingWithNestedDispatch(int):0 -> p
    2:2:void android.support.v4.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> p
    2:2:void fling(int):0 -> p
    2:2:void flingWithNestedDispatch(int):0 -> p
    boolean fullScroll(int) -> q
    1:1:boolean android.support.v4.view.NestedScrollingChildHelper.hasNestedScrollingParent(int):0:0 -> r
    1:1:boolean hasNestedScrollingParent(int):0 -> r
    1:1:boolean scrollToChildRect(android.graphics.Rect,boolean):0:0 -> requestChildRectangleOnScreen
    1:1:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean):0 -> requestChildRectangleOnScreen
    boolean isViewDescendantOf(android.view.View,android.view.View) -> s
    1:1:void android.support.v4.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0:0 -> setNestedScrollingEnabled
    1:1:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    2:2:void android.support.v4.view.ViewCompat.stopNestedScroll(android.view.View):0:0 -> setNestedScrollingEnabled
    2:2:void android.support.v4.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    2:2:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    3:3:void android.support.v4.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0:0 -> setNestedScrollingEnabled
    3:3:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    1:1:boolean startNestedScroll(int,int):0:0 -> startNestedScroll
    1:1:boolean startNestedScroll(int):0 -> startNestedScroll
    1:1:void stopNestedScroll(int):0:0 -> stopNestedScroll
    1:1:void stopNestedScroll():0 -> stopNestedScroll
    boolean isWithinDeltaOfScreen(android.view.View,int,int) -> t
    void onSecondaryPointerUp(android.view.MotionEvent) -> u
    boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> v
    void recycleVelocityTracker() -> w
    1:1:android.view.View findFocusableViewInBounds(boolean,int,int):0:0 -> x
    1:1:boolean scrollAndFocus(int,int,int):0 -> x
    2:2:boolean scrollAndFocus(int,int,int):0:0 -> x
    void scrollToChild(android.view.View) -> y
    1:1:void android.support.v4.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> z
    1:1:void smoothScrollBy(int,int):0 -> z
    2:2:void smoothScrollBy(int,int):0:0 -> z
android.support.v4.widget.NestedScrollView$AccessibilityDelegate -> android.support.v4.widget.NestedScrollView$a:
    1:1:void android.support.v4.view.AccessibilityDelegateCompat.onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> a
    1:1:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> a
    2:2:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> a
    3:3:void android.support.v4.view.accessibility.AccessibilityRecordCompat.setMaxScrollX(android.view.accessibility.AccessibilityRecord,int):0:0 -> a
    3:3:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> a
    4:4:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> a
    5:5:void android.support.v4.view.accessibility.AccessibilityRecordCompat.setMaxScrollY(android.view.accessibility.AccessibilityRecord,int):0:0 -> a
    5:5:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> a
    1:1:void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setClassName(java.lang.CharSequence):0:0 -> b
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    2:2:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    3:3:void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setScrollable(boolean):0:0 -> b
    3:3:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    4:4:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    5:5:void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.addAction(int):0:0 -> b
    5:5:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    6:6:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    7:7:void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.addAction(int):0:0 -> b
    7:7:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    1:1:void android.support.v4.widget.NestedScrollView.smoothScrollTo(int,int):0:0 -> c
    1:1:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    2:2:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0:0 -> c
android.support.v4.widget.NestedScrollView$OnScrollChangeListener -> android.support.v4.widget.NestedScrollView$b:
android.support.v4.widget.NestedScrollView$SavedState -> android.support.v4.widget.NestedScrollView$c:
    int scrollPosition -> a
android.support.v4.widget.NestedScrollView$SavedState$1 -> android.support.v4.widget.NestedScrollView$c$a:
    1:1:android.support.v4.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:android.support.v4.widget.NestedScrollView$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
android.support.v4.widget.PopupWindowCompat -> k0.g:
    java.lang.reflect.Field sOverlapAnchorField -> c
    boolean sSetWindowLayoutTypeMethodAttempted -> b
    java.lang.reflect.Method sSetWindowLayoutTypeMethod -> a
    boolean sOverlapAnchorFieldAttempted -> d
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> a
    void setWindowLayoutType(android.widget.PopupWindow,int) -> b
android.support.v4.widget.ResourceCursorAdapter -> k0.h:
    int mLayout -> j
    int mDropDownLayout -> k
    android.view.LayoutInflater mInflater -> l
android.support.v4.widget.TextViewCompat -> k0.i:
    1:1:void android.support.v4.text.PrecomputedTextCompat$Params$Builder.<init>(android.text.TextPaint):0:0 -> a
    1:1:android.support.v4.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView):0 -> a
    2:2:android.support.v4.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView):0:0 -> a
    3:3:android.text.TextDirectionHeuristic android.support.v4.widget.TextViewCompat.getTextDirectionHeuristic(android.widget.TextView):0:0 -> a
    3:3:android.support.v4.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView):0 -> a
    4:4:android.support.v4.text.PrecomputedTextCompat$Params android.support.v4.text.PrecomputedTextCompat$Params$Builder.build():0:0 -> a
    4:4:android.support.v4.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView):0 -> a
    void setFirstBaselineToTopHeight(android.widget.TextView,int) -> b
    void setLastBaselineToBottomHeight(android.widget.TextView,int) -> c
    void setLineHeight(android.widget.TextView,int) -> d
    void setPrecomputedText(android.widget.TextView,android.support.v4.text.PrecomputedTextCompat) -> e
    android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> f
android.support.v4.widget.TextViewCompat$OreoCallback -> k0.i$a:
    android.widget.TextView mTextView -> b
    boolean mCanUseMenuBuilderReferences -> e
    java.lang.reflect.Method mMenuBuilderRemoveItemAtMethod -> d
    boolean mInitializedMenuBuilderReferences -> f
    android.view.ActionMode$Callback mCallback -> a
    java.lang.Class mMenuBuilderClass -> c
    1:1:void android.support.v4.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0:0 -> onPrepareActionMode
    1:1:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    2:2:java.util.List android.support.v4.widget.TextViewCompat$OreoCallback.getSupportedActivities(android.content.Context,android.content.pm.PackageManager):0:0 -> onPrepareActionMode
    2:2:void android.support.v4.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    2:2:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    3:3:android.content.Intent android.support.v4.widget.TextViewCompat$OreoCallback.createProcessTextIntent():0:0 -> onPrepareActionMode
    3:3:java.util.List android.support.v4.widget.TextViewCompat$OreoCallback.getSupportedActivities(android.content.Context,android.content.pm.PackageManager):0 -> onPrepareActionMode
    3:3:void android.support.v4.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    3:3:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    4:4:java.util.List android.support.v4.widget.TextViewCompat$OreoCallback.getSupportedActivities(android.content.Context,android.content.pm.PackageManager):0:0 -> onPrepareActionMode
    4:4:void android.support.v4.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    4:4:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    5:5:boolean android.support.v4.widget.TextViewCompat$OreoCallback.isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context):0:0 -> onPrepareActionMode
    5:5:java.util.List android.support.v4.widget.TextViewCompat$OreoCallback.getSupportedActivities(android.content.Context,android.content.pm.PackageManager):0 -> onPrepareActionMode
    5:5:void android.support.v4.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    5:5:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    6:6:java.util.List android.support.v4.widget.TextViewCompat$OreoCallback.getSupportedActivities(android.content.Context,android.content.pm.PackageManager):0:0 -> onPrepareActionMode
    6:6:void android.support.v4.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    6:6:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    7:7:void android.support.v4.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0:0 -> onPrepareActionMode
    7:7:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    8:8:android.content.Intent android.support.v4.widget.TextViewCompat$OreoCallback.createProcessTextIntent():0:0 -> onPrepareActionMode
    8:8:android.content.Intent android.support.v4.widget.TextViewCompat$OreoCallback.createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView):0 -> onPrepareActionMode
    8:8:void android.support.v4.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    8:8:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    9:9:boolean android.support.v4.widget.TextViewCompat$OreoCallback.isEditable(android.widget.TextView):0:0 -> onPrepareActionMode
    9:9:android.content.Intent android.support.v4.widget.TextViewCompat$OreoCallback.createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView):0 -> onPrepareActionMode
    9:9:void android.support.v4.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    9:9:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    10:10:android.content.Intent android.support.v4.widget.TextViewCompat$OreoCallback.createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView):0:0 -> onPrepareActionMode
    10:10:void android.support.v4.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    10:10:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    11:11:void android.support.v4.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu):0:0 -> onPrepareActionMode
    11:11:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    12:12:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0:0 -> onPrepareActionMode
android.support.v4.widget.ViewDragHelper -> k0.j:
    java.lang.Runnable mSetIdleRunnable -> u
    int mEdgeSize -> o
    android.view.ViewGroup mParentView -> t
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> q
    float[] mLastMotionY -> g
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mInitialMotionX -> d
    android.view.View mCapturedView -> r
    int mTouchSlop -> b
    int mActivePointerId -> c
    boolean mReleaseInProgress -> s
    int mDragState -> a
    android.widget.OverScroller mScroller -> p
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    android.view.animation.Interpolator sInterpolator -> v
    int[] mEdgeDragsLocked -> j
    float mMinVelocity -> n
    float mMaxVelocity -> m
    1:1:void android.support.v4.widget.ViewDragHelper.clearMotionHistory():0:0 -> a
    1:1:void cancel():0 -> a
    2:2:void cancel():0:0 -> a
    void captureChildView(android.view.View,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> c
    boolean checkTouchSlop(android.view.View,float,float) -> d
    float clampMag(float,float,float) -> e
    int clampMag(int,int,int) -> f
    1:1:boolean android.support.v4.widget.ViewDragHelper.isPointerDown(int):0:0 -> g
    1:1:void clearMotionHistory(int):0 -> g
    2:2:void clearMotionHistory(int):0:0 -> g
    1:1:float android.support.v4.widget.ViewDragHelper.distanceInfluenceForSnapDuration(float):0:0 -> h
    1:1:int computeAxisDuration(int,int,int):0 -> h
    2:2:int computeAxisDuration(int,int,int):0:0 -> h
    boolean continueSettling(boolean) -> i
    void dispatchViewReleased(float,float) -> j
    android.view.View findTopChildUnder(int,int) -> k
    1:1:int android.support.v4.widget.ViewDragHelper.computeSettleDuration(android.view.View,int,int,int,int):0:0 -> l
    1:1:boolean forceSettleCapturedViewAt(int,int,int,int):0 -> l
    2:2:boolean forceSettleCapturedViewAt(int,int,int,int):0:0 -> l
    1:1:boolean android.support.v4.widget.ViewDragHelper.isPointerDown(int):0:0 -> m
    1:1:boolean isValidPointerForActionMove(int):0 -> m
    2:2:boolean isValidPointerForActionMove(int):0:0 -> m
    1:1:boolean android.support.v4.widget.ViewDragHelper.isCapturedViewUnder(int,int):0:0 -> n
    1:1:void processTouchEvent(android.view.MotionEvent):0 -> n
    2:2:boolean android.support.v4.widget.ViewDragHelper.isViewUnder(android.view.View,int,int):0:0 -> n
    2:2:boolean android.support.v4.widget.ViewDragHelper.isCapturedViewUnder(int,int):0 -> n
    2:2:void processTouchEvent(android.view.MotionEvent):0 -> n
    3:3:void processTouchEvent(android.view.MotionEvent):0:0 -> n
    4:4:void android.support.v4.widget.ViewDragHelper.dragTo(int,int,int,int):0:0 -> n
    4:4:void processTouchEvent(android.view.MotionEvent):0 -> n
    5:5:void processTouchEvent(android.view.MotionEvent):0:0 -> n
    void releaseViewForPointerUp() -> o
    void reportNewEdgeDrags(float,float,int) -> p
    1:1:void android.support.v4.widget.ViewDragHelper.ensureMotionHistorySizeForId(int):0:0 -> q
    1:1:void saveInitialMotion(float,float,int):0 -> q
    2:2:void saveInitialMotion(float,float,int):0:0 -> q
    3:3:int android.support.v4.widget.ViewDragHelper.getEdgesTouched(int,int):0:0 -> q
    3:3:void saveInitialMotion(float,float,int):0 -> q
    4:4:void saveInitialMotion(float,float,int):0:0 -> q
    void saveLastMotion(android.view.MotionEvent) -> r
    void setDragState(int) -> s
    boolean settleCapturedViewAt(int,int) -> t
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> u
    boolean tryCaptureViewForDrag(android.view.View,int) -> v
android.support.v4.widget.ViewDragHelper$1 -> k0.j$a:
android.support.v4.widget.ViewDragHelper$2 -> k0.j$b:
    android.support.v4.widget.ViewDragHelper this$0 -> b
android.support.v4.widget.ViewDragHelper$Callback -> k0.j$c:
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> c
    int getViewVerticalDragRange(android.view.View) -> d
    void onViewCaptured(android.view.View,int) -> e
    void onViewDragStateChanged(int) -> f
    void onViewPositionChanged(android.view.View,int,int,int,int) -> g
    void onViewReleased(android.view.View,float,float) -> h
    boolean tryCaptureView(android.view.View,int) -> i
android.support.v4.widget.ViewGroupUtils -> k0.k:
    java.lang.ThreadLocal sMatrix -> a
    java.lang.ThreadLocal sRectF -> b
    void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> a
android.support.v7.app.ActionBar -> l0.a:
    void dispatchMenuVisibilityChanged(boolean) -> a
    android.content.Context getThemedContext() -> b
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> c
android.support.v7.app.ActionBar$LayoutParams -> l0.a$a:
    int gravity -> a
android.support.v7.app.ActionBar$OnMenuVisibilityListener -> l0.a$b:
    void onMenuVisibilityChanged(boolean) -> a
android.support.v7.app.ActionBar$Tab -> l0.a$c:
    void select() -> a
android.support.v7.app.AlertController -> android.support.v7.app.AlertController:
    android.content.Context mContext -> a
    int mViewSpacingRight -> l
    android.widget.Button mButtonNeutral -> w
    int mMultiChoiceItemLayout -> M
    int mViewSpacingLeft -> j
    int mButtonPanelSideLayout -> K
    int mCheckedItem -> I
    android.os.Handler mHandler -> P
    int mButtonIconDimen -> d
    java.lang.CharSequence mMessage -> f
    android.widget.Button mButtonPositive -> o
    android.widget.ImageView mIconView -> D
    android.widget.ListAdapter mAdapter -> H
    android.widget.Button mButtonNegative -> s
    android.graphics.drawable.Drawable mButtonNegativeIcon -> v
    android.widget.TextView mTitleView -> E
    android.graphics.drawable.Drawable mButtonNeutralIcon -> z
    android.view.View$OnClickListener mButtonHandler -> Q
    android.graphics.drawable.Drawable mButtonPositiveIcon -> r
    android.graphics.drawable.Drawable mIcon -> C
    int mListItemLayout -> N
    boolean mViewSpacingSpecified -> n
    int mListLayout -> L
    boolean mShowTitle -> O
    int mViewSpacingBottom -> m
    android.os.Message mButtonPositiveMessage -> q
    int mAlertDialogLayout -> J
    int mViewSpacingTop -> k
    int mViewLayoutResId -> i
    java.lang.CharSequence mTitle -> e
    android.os.Message mButtonNeutralMessage -> y
    int mIconId -> B
    android.os.Message mButtonNegativeMessage -> u
    android.view.Window mWindow -> c
    android.support.v7.app.AppCompatDialog mDialog -> b
    android.view.View mView -> h
    android.widget.ListView mListView -> g
    java.lang.CharSequence mButtonPositiveText -> p
    java.lang.CharSequence mButtonNegativeText -> t
    android.widget.TextView mMessageView -> F
    android.support.v4.widget.NestedScrollView mScrollView -> A
    java.lang.CharSequence mButtonNeutralText -> x
    android.view.View mCustomTitleView -> G
    1:1:boolean android.support.v7.app.AppCompatDialog.supportRequestWindowFeature(int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.support.v7.app.AppCompatDialog,android.view.Window):0 -> <init>
    boolean canTextInput(android.view.View) -> a
    void centerButton(android.widget.Button) -> b
    void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> c
    android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> d
    void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> e
android.support.v7.app.AlertController$1 -> android.support.v7.app.AlertController$a:
    android.support.v7.app.AlertController this$0 -> b
android.support.v7.app.AlertController$2 -> l0.b:
    android.view.View val$top -> a
    android.view.View val$bottom -> b
android.support.v7.app.AlertController$3 -> l0.c:
    android.support.v7.app.AlertController this$0 -> d
    android.view.View val$bottom -> c
    android.view.View val$top -> b
android.support.v7.app.AlertController$4 -> l0.d:
    android.view.View val$top -> a
    android.view.View val$bottom -> b
android.support.v7.app.AlertController$5 -> l0.e:
    android.support.v7.app.AlertController this$0 -> d
    android.view.View val$bottom -> c
    android.view.View val$top -> b
android.support.v7.app.AlertController$AlertParams -> android.support.v7.app.AlertController$b:
    android.content.Context mContext -> a
    android.graphics.drawable.Drawable mIcon -> c
    int mViewLayoutResId -> l
    android.view.LayoutInflater mInflater -> b
    android.content.DialogInterface$OnDismissListener mOnDismissListener -> h
    java.lang.CharSequence mTitle -> d
    android.content.DialogInterface$OnClickListener mPositiveButtonListener -> g
    java.lang.CharSequence mPositiveButtonText -> f
    android.view.View mCustomTitleView -> e
    android.content.DialogInterface$OnClickListener mOnClickListener -> k
    android.content.DialogInterface$OnKeyListener mOnKeyListener -> i
    android.widget.ListAdapter mAdapter -> j
android.support.v7.app.AlertController$AlertParams$3 -> android.support.v7.app.a:
    android.support.v7.app.AlertController val$dialog -> b
    android.support.v7.app.AlertController$AlertParams this$0 -> c
android.support.v7.app.AlertController$ButtonHandler -> android.support.v7.app.AlertController$c:
    java.lang.ref.WeakReference mDialog -> a
android.support.v7.app.AlertController$CheckedItemAdapter -> android.support.v7.app.AlertController$d:
android.support.v7.app.AlertController$RecycleListView -> android.support.v7.app.AlertController$RecycleListView:
    int mPaddingTopNoTitle -> b
    int mPaddingBottomNoButtons -> c
android.support.v7.app.AlertDialog -> android.support.v7.app.b:
    android.support.v7.app.AlertController mAlert -> d
    int resolveDialogTheme(android.content.Context,int) -> f
    1:1:int android.support.v7.app.AlertController.selectContentView():0:0 -> onCreate
    1:1:void android.support.v7.app.AlertController.installContent():0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
    2:2:void android.support.v7.app.AlertController.installContent():0:0 -> onCreate
    2:2:void onCreate(android.os.Bundle):0 -> onCreate
    3:3:void android.support.v7.app.AlertController.setupView():0:0 -> onCreate
    3:3:void android.support.v7.app.AlertController.installContent():0 -> onCreate
    3:3:void onCreate(android.os.Bundle):0 -> onCreate
    4:4:void android.support.v7.app.AlertController.setupCustomContent(android.view.ViewGroup):0:0 -> onCreate
    4:4:void android.support.v7.app.AlertController.setupView():0 -> onCreate
    4:4:void android.support.v7.app.AlertController.installContent():0 -> onCreate
    4:4:void onCreate(android.os.Bundle):0 -> onCreate
    5:5:void android.support.v7.app.AlertController.setupView():0:0 -> onCreate
    5:5:void android.support.v7.app.AlertController.installContent():0 -> onCreate
    5:5:void onCreate(android.os.Bundle):0 -> onCreate
    6:6:void android.support.v7.app.AlertController.setupContent(android.view.ViewGroup):0:0 -> onCreate
    6:6:void android.support.v7.app.AlertController.setupView():0 -> onCreate
    6:6:void android.support.v7.app.AlertController.installContent():0 -> onCreate
    6:6:void onCreate(android.os.Bundle):0 -> onCreate
    7:7:void android.support.v7.app.AlertController.setupButtons(android.view.ViewGroup):0:0 -> onCreate
    7:7:void android.support.v7.app.AlertController.setupView():0 -> onCreate
    7:7:void android.support.v7.app.AlertController.installContent():0 -> onCreate
    7:7:void onCreate(android.os.Bundle):0 -> onCreate
    8:8:boolean android.support.v7.app.AlertController.shouldCenterSingleButton(android.content.Context):0:0 -> onCreate
    8:8:void android.support.v7.app.AlertController.setupButtons(android.view.ViewGroup):0 -> onCreate
    8:8:void android.support.v7.app.AlertController.setupView():0 -> onCreate
    8:8:void android.support.v7.app.AlertController.installContent():0 -> onCreate
    8:8:void onCreate(android.os.Bundle):0 -> onCreate
    9:9:void android.support.v7.app.AlertController.setupButtons(android.view.ViewGroup):0:0 -> onCreate
    9:9:void android.support.v7.app.AlertController.setupView():0 -> onCreate
    9:9:void android.support.v7.app.AlertController.installContent():0 -> onCreate
    9:9:void onCreate(android.os.Bundle):0 -> onCreate
    10:10:void android.support.v7.app.AlertController.setupTitle(android.view.ViewGroup):0:0 -> onCreate
    10:10:void android.support.v7.app.AlertController.setupView():0 -> onCreate
    10:10:void android.support.v7.app.AlertController.installContent():0 -> onCreate
    10:10:void onCreate(android.os.Bundle):0 -> onCreate
    11:11:void android.support.v7.app.AlertController.setupView():0:0 -> onCreate
    11:11:void android.support.v7.app.AlertController.installContent():0 -> onCreate
    11:11:void onCreate(android.os.Bundle):0 -> onCreate
    12:12:void android.support.v7.app.AlertController$RecycleListView.setHasDecor(boolean,boolean):0:0 -> onCreate
    12:12:void android.support.v7.app.AlertController.setupView():0 -> onCreate
    12:12:void android.support.v7.app.AlertController.installContent():0 -> onCreate
    12:12:void onCreate(android.os.Bundle):0 -> onCreate
    13:13:void android.support.v7.app.AlertController.setupView():0:0 -> onCreate
    13:13:void android.support.v7.app.AlertController.installContent():0 -> onCreate
    13:13:void onCreate(android.os.Bundle):0 -> onCreate
    14:14:void android.support.v7.app.AlertController.setScrollIndicators(android.view.ViewGroup,android.view.View,int,int):0:0 -> onCreate
    14:14:void android.support.v7.app.AlertController.setupView():0 -> onCreate
    14:14:void android.support.v7.app.AlertController.installContent():0 -> onCreate
    14:14:void onCreate(android.os.Bundle):0 -> onCreate
    15:15:void android.support.v4.view.ViewCompat.setScrollIndicators(android.view.View,int,int):0:0 -> onCreate
    15:15:void android.support.v7.app.AlertController.setScrollIndicators(android.view.ViewGroup,android.view.View,int,int):0 -> onCreate
    15:15:void android.support.v7.app.AlertController.setupView():0 -> onCreate
    15:15:void android.support.v7.app.AlertController.installContent():0 -> onCreate
    15:15:void onCreate(android.os.Bundle):0 -> onCreate
    16:16:void android.support.v7.app.AlertController.setScrollIndicators(android.view.ViewGroup,android.view.View,int,int):0:0 -> onCreate
    16:16:void android.support.v7.app.AlertController.setupView():0 -> onCreate
    16:16:void android.support.v7.app.AlertController.installContent():0 -> onCreate
    16:16:void onCreate(android.os.Bundle):0 -> onCreate
    17:17:void android.support.v7.app.AlertController.setupView():0:0 -> onCreate
    17:17:void android.support.v7.app.AlertController.installContent():0 -> onCreate
    17:17:void onCreate(android.os.Bundle):0 -> onCreate
    1:1:boolean android.support.v7.app.AlertController.onKeyDown(int,android.view.KeyEvent):0:0 -> onKeyDown
    1:1:boolean onKeyDown(int,android.view.KeyEvent):0 -> onKeyDown
    2:2:boolean onKeyDown(int,android.view.KeyEvent):0:0 -> onKeyDown
    1:1:boolean android.support.v7.app.AlertController.onKeyUp(int,android.view.KeyEvent):0:0 -> onKeyUp
    1:1:boolean onKeyUp(int,android.view.KeyEvent):0 -> onKeyUp
    2:2:boolean onKeyUp(int,android.view.KeyEvent):0:0 -> onKeyUp
    1:1:void android.support.v7.app.AlertController.setTitle(java.lang.CharSequence):0:0 -> setTitle
    1:1:void setTitle(java.lang.CharSequence):0 -> setTitle
android.support.v7.app.AlertDialog$Builder -> android.support.v7.app.b$a:
    android.support.v7.app.AlertController$AlertParams P -> a
    int mTheme -> b
    1:1:void <init>(android.content.Context,int):0:0 -> <init>
    1:1:void <init>(android.content.Context):0 -> <init>
    1:1:void android.support.v7.app.AlertController$AlertParams.apply(android.support.v7.app.AlertController):0:0 -> a
    1:1:android.support.v7.app.AlertDialog create():0 -> a
    2:2:void android.support.v7.app.AlertController.setCustomTitle(android.view.View):0:0 -> a
    2:2:void android.support.v7.app.AlertController$AlertParams.apply(android.support.v7.app.AlertController):0 -> a
    2:2:android.support.v7.app.AlertDialog create():0 -> a
    3:3:void android.support.v7.app.AlertController$AlertParams.apply(android.support.v7.app.AlertController):0:0 -> a
    3:3:android.support.v7.app.AlertDialog create():0 -> a
    4:4:void android.support.v7.app.AlertController.setTitle(java.lang.CharSequence):0:0 -> a
    4:4:void android.support.v7.app.AlertController$AlertParams.apply(android.support.v7.app.AlertController):0 -> a
    4:4:android.support.v7.app.AlertDialog create():0 -> a
    5:5:void android.support.v7.app.AlertController$AlertParams.apply(android.support.v7.app.AlertController):0:0 -> a
    5:5:android.support.v7.app.AlertDialog create():0 -> a
    6:6:void android.support.v7.app.AlertController.setIcon(android.graphics.drawable.Drawable):0:0 -> a
    6:6:void android.support.v7.app.AlertController$AlertParams.apply(android.support.v7.app.AlertController):0 -> a
    6:6:android.support.v7.app.AlertDialog create():0 -> a
    7:7:void android.support.v7.app.AlertController$AlertParams.apply(android.support.v7.app.AlertController):0:0 -> a
    7:7:android.support.v7.app.AlertDialog create():0 -> a
    8:8:void android.support.v7.app.AlertController$AlertParams.createListView(android.support.v7.app.AlertController):0:0 -> a
    8:8:void android.support.v7.app.AlertController$AlertParams.apply(android.support.v7.app.AlertController):0 -> a
    8:8:android.support.v7.app.AlertDialog create():0 -> a
    9:9:void android.support.v7.app.AlertController$AlertParams.apply(android.support.v7.app.AlertController):0:0 -> a
    9:9:android.support.v7.app.AlertDialog create():0 -> a
    10:10:void android.support.v7.app.AlertController.setView(int):0:0 -> a
    10:10:void android.support.v7.app.AlertController$AlertParams.apply(android.support.v7.app.AlertController):0 -> a
    10:10:android.support.v7.app.AlertDialog create():0 -> a
    11:11:android.support.v7.app.AlertDialog create():0:0 -> a
android.support.v7.app.AppCompatActivity -> l0.f:
    int mThemeId -> l
    android.support.v7.app.AppCompatDelegate mDelegate -> k
    1:1:void android.support.v7.app.AppCompatDelegateImpl.addContentView(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> addContentView
    1:1:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams):0 -> addContentView
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> c
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> d
    android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback) -> e
    1:1:android.view.View android.support.v7.app.AppCompatDelegateImpl.findViewById(int):0:0 -> findViewById
    1:1:android.view.View findViewById(int):0 -> findViewById
    1:1:android.view.MenuInflater android.support.v7.app.AppCompatDelegateImpl.getMenuInflater():0:0 -> getMenuInflater
    1:1:android.view.MenuInflater getMenuInflater():0 -> getMenuInflater
    1:1:android.support.v7.app.AppCompatDelegate android.support.v7.app.AppCompatDelegate.create(android.app.Activity,android.support.v7.app.AppCompatCallback):0:0 -> k
    1:1:android.support.v7.app.AppCompatDelegate getDelegate():0 -> k
    2:2:android.support.v7.app.AppCompatDelegate getDelegate():0:0 -> k
    1:1:android.support.v7.app.ActionBar android.support.v7.app.AppCompatDelegateImpl.getSupportActionBar():0:0 -> l
    1:1:android.support.v7.app.ActionBar getSupportActionBar():0 -> l
    android.content.Intent getSupportParentActivityIntent() -> m
    1:1:void android.support.v7.app.AppCompatDelegateImpl.onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    1:1:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    2:2:android.support.v7.app.ActionBar android.support.v7.app.AppCompatDelegateImpl.getSupportActionBar():0:0 -> onConfigurationChanged
    2:2:void android.support.v7.app.AppCompatDelegateImpl.onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    2:2:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    3:3:void android.support.v7.app.AppCompatDelegateImpl.onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    3:3:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    4:4:void android.support.v7.app.WindowDecorActionBar.onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    4:4:void android.support.v7.app.AppCompatDelegateImpl.onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    4:4:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    5:5:boolean android.support.v7.view.ActionBarPolicy.hasEmbeddedTabs():0:0 -> onConfigurationChanged
    5:5:void android.support.v7.app.WindowDecorActionBar.onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    5:5:void android.support.v7.app.AppCompatDelegateImpl.onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    5:5:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    6:6:void android.support.v7.app.WindowDecorActionBar.onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    6:6:void android.support.v7.app.AppCompatDelegateImpl.onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    6:6:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    7:7:void android.support.v7.app.AppCompatDelegateImpl.onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    7:7:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    8:8:void android.support.v7.widget.AppCompatDrawableManager.onConfigurationChanged(android.content.Context):0:0 -> onConfigurationChanged
    8:8:void android.support.v7.app.AppCompatDelegateImpl.onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    8:8:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    9:9:void android.support.v7.app.AppCompatDelegateImpl.onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    9:9:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    10:10:void android.support.v7.widget.AppCompatDrawableManager.onConfigurationChanged(android.content.Context):0:0 -> onConfigurationChanged
    10:10:void android.support.v7.app.AppCompatDelegateImpl.onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    10:10:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    1:1:void android.support.v7.app.AppCompatDelegateImpl.onDestroy():0:0 -> onDestroy
    1:1:void onDestroy():0 -> onDestroy
    1:1:boolean android.support.v7.app.AppCompatActivity.performMenuItemShortcut(int,android.view.KeyEvent):0:0 -> onKeyDown
    1:1:boolean onKeyDown(int,android.view.KeyEvent):0 -> onKeyDown
    2:2:boolean onKeyDown(int,android.view.KeyEvent):0:0 -> onKeyDown
    1:1:int android.support.v7.app.WindowDecorActionBar.getDisplayOptions():0:0 -> onMenuItemSelected
    1:1:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    2:2:android.content.Intent android.support.v7.app.AppCompatActivity.getSupportParentActivityIntent():0:0 -> onMenuItemSelected
    2:2:boolean android.support.v7.app.AppCompatActivity.onSupportNavigateUp():0 -> onMenuItemSelected
    2:2:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    3:3:boolean android.support.v4.app.NavUtils.shouldUpRecreateTask(android.app.Activity,android.content.Intent):0:0 -> onMenuItemSelected
    3:3:boolean android.support.v7.app.AppCompatActivity.supportShouldUpRecreateTask(android.content.Intent):0 -> onMenuItemSelected
    3:3:boolean android.support.v7.app.AppCompatActivity.onSupportNavigateUp():0 -> onMenuItemSelected
    3:3:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    4:4:void android.support.v4.app.TaskStackBuilder.<init>(android.content.Context):0:0 -> onMenuItemSelected
    4:4:android.support.v4.app.TaskStackBuilder android.support.v4.app.TaskStackBuilder.create(android.content.Context):0 -> onMenuItemSelected
    4:4:boolean android.support.v7.app.AppCompatActivity.onSupportNavigateUp():0 -> onMenuItemSelected
    4:4:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    5:5:android.support.v4.app.TaskStackBuilder android.support.v4.app.TaskStackBuilder.addParentStack(android.app.Activity):0:0 -> onMenuItemSelected
    5:5:void android.support.v7.app.AppCompatActivity.onCreateSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder):0 -> onMenuItemSelected
    5:5:boolean android.support.v7.app.AppCompatActivity.onSupportNavigateUp():0 -> onMenuItemSelected
    5:5:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    6:6:android.support.v4.app.TaskStackBuilder android.support.v4.app.TaskStackBuilder.addParentStack(android.content.ComponentName):0:0 -> onMenuItemSelected
    6:6:android.support.v4.app.TaskStackBuilder android.support.v4.app.TaskStackBuilder.addParentStack(android.app.Activity):0 -> onMenuItemSelected
    6:6:void android.support.v7.app.AppCompatActivity.onCreateSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder):0 -> onMenuItemSelected
    6:6:boolean android.support.v7.app.AppCompatActivity.onSupportNavigateUp():0 -> onMenuItemSelected
    6:6:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    7:7:android.support.v4.app.TaskStackBuilder android.support.v4.app.TaskStackBuilder.addNextIntent(android.content.Intent):0:0 -> onMenuItemSelected
    7:7:android.support.v4.app.TaskStackBuilder android.support.v4.app.TaskStackBuilder.addParentStack(android.app.Activity):0 -> onMenuItemSelected
    7:7:void android.support.v7.app.AppCompatActivity.onCreateSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder):0 -> onMenuItemSelected
    7:7:boolean android.support.v7.app.AppCompatActivity.onSupportNavigateUp():0 -> onMenuItemSelected
    7:7:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    8:8:android.support.v4.app.TaskStackBuilder android.support.v4.app.TaskStackBuilder.addParentStack(android.content.ComponentName):0:0 -> onMenuItemSelected
    8:8:android.support.v4.app.TaskStackBuilder android.support.v4.app.TaskStackBuilder.addParentStack(android.app.Activity):0 -> onMenuItemSelected
    8:8:void android.support.v7.app.AppCompatActivity.onCreateSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder):0 -> onMenuItemSelected
    8:8:boolean android.support.v7.app.AppCompatActivity.onSupportNavigateUp():0 -> onMenuItemSelected
    8:8:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    9:9:void android.support.v4.app.TaskStackBuilder.startActivities(android.os.Bundle):0:0 -> onMenuItemSelected
    9:9:void android.support.v4.app.TaskStackBuilder.startActivities():0 -> onMenuItemSelected
    9:9:boolean android.support.v7.app.AppCompatActivity.onSupportNavigateUp():0 -> onMenuItemSelected
    9:9:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    10:10:boolean android.support.v4.content.ContextCompat.startActivities(android.content.Context,android.content.Intent[],android.os.Bundle):0:0 -> onMenuItemSelected
    10:10:void android.support.v4.app.TaskStackBuilder.startActivities(android.os.Bundle):0 -> onMenuItemSelected
    10:10:void android.support.v4.app.TaskStackBuilder.startActivities():0 -> onMenuItemSelected
    10:10:boolean android.support.v7.app.AppCompatActivity.onSupportNavigateUp():0 -> onMenuItemSelected
    10:10:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    11:11:boolean android.support.v7.app.AppCompatActivity.onSupportNavigateUp():0:0 -> onMenuItemSelected
    11:11:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    12:12:void android.support.v4.app.ActivityCompat.finishAffinity(android.app.Activity):0:0 -> onMenuItemSelected
    12:12:boolean android.support.v7.app.AppCompatActivity.onSupportNavigateUp():0 -> onMenuItemSelected
    12:12:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    13:13:boolean android.support.v7.app.AppCompatActivity.onSupportNavigateUp():0:0 -> onMenuItemSelected
    13:13:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    14:14:void android.support.v4.app.TaskStackBuilder.startActivities(android.os.Bundle):0:0 -> onMenuItemSelected
    14:14:void android.support.v4.app.TaskStackBuilder.startActivities():0 -> onMenuItemSelected
    14:14:boolean android.support.v7.app.AppCompatActivity.onSupportNavigateUp():0 -> onMenuItemSelected
    14:14:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    15:15:void android.support.v4.app.NavUtils.navigateUpTo(android.app.Activity,android.content.Intent):0:0 -> onMenuItemSelected
    15:15:void android.support.v7.app.AppCompatActivity.supportNavigateUpTo(android.content.Intent):0 -> onMenuItemSelected
    15:15:boolean android.support.v7.app.AppCompatActivity.onSupportNavigateUp():0 -> onMenuItemSelected
    15:15:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    1:1:void android.support.v7.app.AppCompatDelegateImpl.onPostCreate(android.os.Bundle):0:0 -> onPostCreate
    1:1:void onPostCreate(android.os.Bundle):0 -> onPostCreate
    1:1:android.support.v7.app.ActionBar android.support.v7.app.AppCompatDelegateImpl.getSupportActionBar():0:0 -> onPostResume
    1:1:void android.support.v7.app.AppCompatDelegateImpl.onPostResume():0 -> onPostResume
    1:1:void onPostResume():0 -> onPostResume
    2:2:void android.support.v7.app.AppCompatDelegateImpl.onPostResume():0:0 -> onPostResume
    2:2:void onPostResume():0 -> onPostResume
    3:3:void android.support.v7.app.WindowDecorActionBar.setShowHideAnimationEnabled(boolean):0:0 -> onPostResume
    3:3:void android.support.v7.app.AppCompatDelegateImpl.onPostResume():0 -> onPostResume
    3:3:void onPostResume():0 -> onPostResume
    1:1:void android.support.v7.app.AppCompatDelegateImpl.onSaveInstanceState(android.os.Bundle):0:0 -> onSaveInstanceState
    1:1:void onSaveInstanceState(android.os.Bundle):0 -> onSaveInstanceState
    1:1:void android.support.v7.app.AppCompatDelegateImpl.onStart():0:0 -> onStart
    1:1:void onStart():0 -> onStart
android.support.v7.app.AppCompatCallback -> l0.g:
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> c
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> d
    android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback) -> e
android.support.v7.app.AppCompatDelegate -> l0.h:
    boolean applyDayNight() -> c
    void installViewFactory() -> d
    void invalidateOptionsMenu() -> e
    void onCreate(android.os.Bundle) -> f
    void onStop() -> g
    boolean requestWindowFeature(int) -> h
    void setContentView(int) -> i
    void setContentView(android.view.View) -> j
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> k
    void setTitle(java.lang.CharSequence) -> l
android.support.v7.app.AppCompatDelegateImpl -> l0.i:
    boolean mInvalidatePanelMenuPosted -> J
    int mInvalidatePanelMenuFeatures -> K
    android.support.v7.app.ActionBar mActionBar -> f
    boolean mFeatureProgress -> u
    android.support.v7.widget.ActionBarContextView mActionModeView -> m
    int mLocalNightMode -> G
    boolean mHasActionBar -> w
    android.view.Window$Callback mOriginalWindowCallback -> d
    android.support.v7.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback -> j
    java.lang.CharSequence mTitle -> h
    android.support.v4.view.ViewPropertyAnimatorCompat mFadeAnim -> p
    boolean mSubDecorInstalled -> q
    android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels -> C
    android.view.View mStatusGuard -> t
    android.support.v7.app.AppCompatViewInflater mAppCompatViewInflater -> P
    android.view.MenuInflater mMenuInflater -> g
    android.graphics.Rect mTempRect2 -> O
    android.support.v7.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback -> k
    android.support.v7.view.ActionMode mActionMode -> l
    boolean mOverlayActionMode -> y
    boolean mLongPressBackDown -> E
    java.lang.Runnable mInvalidatePanelMenuRunnable -> L
    android.widget.PopupWindow mActionModePopup -> n
    int[] sWindowBackgroundStyleable -> Q
    boolean mWindowNoTitle -> A
    java.lang.Runnable mShowActionModePopup -> o
    android.view.ViewGroup mSubDecor -> r
    boolean mEnableDefaultActionBarUp -> M
    android.content.Context mContext -> b
    android.widget.TextView mTitleView -> s
    boolean mFeatureIndeterminateProgress -> v
    boolean mOverlayActionBar -> x
    android.support.v7.app.AppCompatCallback mAppCompatCallback -> e
    android.support.v7.widget.DecorContentParent mDecorContentParent -> i
    android.view.Window mWindow -> c
    android.graphics.Rect mTempRect1 -> N
    android.support.v7.app.AppCompatDelegateImpl$AutoNightModeManager mAutoNightModeManager -> I
    boolean mIsFloating -> z
    boolean mIsDestroyed -> F
    boolean mApplyDayNightCalled -> H
    boolean mClosingActionMenu -> B
    android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel -> D
    1:1:android.support.v7.widget.TintTypedArray android.support.v7.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback):0 -> <init>
    2:2:android.graphics.drawable.Drawable android.support.v7.widget.TintTypedArray.getDrawableIfKnown(int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback):0 -> <init>
    3:3:void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback):0:0 -> <init>
    4:4:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> <init>
    4:4:void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback):0 -> <init>
    5:5:void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback):0:0 -> <init>
    boolean performPanelShortcut(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> A
    1:1:boolean android.support.v7.app.AppCompatDelegateImpl.initializePanelMenu(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState):0:0 -> B
    1:1:boolean preparePanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> B
    2:2:void android.support.v7.view.menu.MenuBuilder.setCallback(android.support.v7.view.menu.MenuBuilder$Callback):0:0 -> B
    2:2:boolean android.support.v7.app.AppCompatDelegateImpl.initializePanelMenu(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState):0 -> B
    2:2:boolean preparePanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> B
    3:3:boolean android.support.v7.app.AppCompatDelegateImpl.initializePanelMenu(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState):0:0 -> B
    3:3:boolean preparePanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> B
    4:4:boolean preparePanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0:0 -> B
    1:1:boolean android.support.v4.view.ViewCompat.isLaidOut(android.view.View):0:0 -> C
    1:1:boolean shouldAnimateActionModeView():0 -> C
    void throwFeatureRequestIfSubDecorInstalled() -> D
    int updateStatusGuard(int) -> E
    1:1:void android.support.v7.app.AppCompatDelegateImpl.reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean):0:0 -> a
    1:1:void onMenuModeChange(android.support.v7.view.menu.MenuBuilder):0 -> a
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> b
    1:1:int android.support.v7.app.AppCompatDelegateImpl.getNightMode():0:0 -> c
    1:1:boolean applyDayNight():0 -> c
    2:2:int android.support.v7.app.AppCompatDelegateImpl.mapNightMode(int):0:0 -> c
    2:2:boolean applyDayNight():0 -> c
    3:3:int android.support.v7.app.AppCompatDelegateImpl$AutoNightModeManager.getApplyableNightMode():0:0 -> c
    3:3:int android.support.v7.app.AppCompatDelegateImpl.mapNightMode(int):0 -> c
    3:3:boolean applyDayNight():0 -> c
    4:4:boolean android.support.v7.app.AppCompatDelegateImpl.updateForNightMode(int):0:0 -> c
    4:4:boolean applyDayNight():0 -> c
    5:5:boolean android.support.v7.app.AppCompatDelegateImpl.shouldRecreateOnNightModeChange():0:0 -> c
    5:5:boolean android.support.v7.app.AppCompatDelegateImpl.updateForNightMode(int):0 -> c
    5:5:boolean applyDayNight():0 -> c
    6:6:boolean android.support.v7.app.AppCompatDelegateImpl.updateForNightMode(int):0:0 -> c
    6:6:boolean applyDayNight():0 -> c
    7:7:void android.support.v7.app.ResourcesFlusher.flushNougats(android.content.res.Resources):0:0 -> c
    7:7:void android.support.v7.app.ResourcesFlusher.flush(android.content.res.Resources):0 -> c
    7:7:boolean android.support.v7.app.AppCompatDelegateImpl.updateForNightMode(int):0 -> c
    7:7:boolean applyDayNight():0 -> c
    8:8:void android.support.v7.app.ResourcesFlusher.flushMarshmallows(android.content.res.Resources):0:0 -> c
    8:8:void android.support.v7.app.ResourcesFlusher.flush(android.content.res.Resources):0 -> c
    8:8:boolean android.support.v7.app.AppCompatDelegateImpl.updateForNightMode(int):0 -> c
    8:8:boolean applyDayNight():0 -> c
    9:9:void android.support.v7.app.ResourcesFlusher.flushLollipops(android.content.res.Resources):0:0 -> c
    9:9:void android.support.v7.app.ResourcesFlusher.flush(android.content.res.Resources):0 -> c
    9:9:boolean android.support.v7.app.AppCompatDelegateImpl.updateForNightMode(int):0 -> c
    9:9:boolean applyDayNight():0 -> c
    10:10:boolean applyDayNight():0:0 -> c
    11:11:void android.support.v7.app.AppCompatDelegateImpl$AutoNightModeManager.setup():0:0 -> c
    11:11:boolean applyDayNight():0 -> c
    12:12:boolean applyDayNight():0:0 -> c
    1:1:void android.support.v4.view.LayoutInflaterCompat.setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2):0:0 -> d
    1:1:void installViewFactory():0 -> d
    2:2:void installViewFactory():0:0 -> d
    1:1:android.support.v7.app.ActionBar android.support.v7.app.AppCompatDelegateImpl.getSupportActionBar():0:0 -> e
    1:1:void invalidateOptionsMenu():0 -> e
    2:2:void invalidateOptionsMenu():0:0 -> e
    1:1:java.lang.String android.support.v4.app.NavUtils.getParentActivityName(android.app.Activity):0:0 -> f
    1:1:void onCreate(android.os.Bundle):0 -> f
    2:2:android.support.v7.app.ActionBar android.support.v7.app.AppCompatDelegateImpl.peekSupportActionBar():0:0 -> f
    2:2:void onCreate(android.os.Bundle):0 -> f
    3:3:void onCreate(android.os.Bundle):0:0 -> f
    1:1:android.support.v7.app.ActionBar android.support.v7.app.AppCompatDelegateImpl.getSupportActionBar():0:0 -> g
    1:1:void onStop():0 -> g
    2:2:void onStop():0:0 -> g
    3:3:void android.support.v7.app.WindowDecorActionBar.setShowHideAnimationEnabled(boolean):0:0 -> g
    3:3:void onStop():0 -> g
    4:4:void onStop():0:0 -> g
    1:1:int android.support.v7.app.AppCompatDelegateImpl.sanitizeWindowFeatureId(int):0:0 -> h
    1:1:boolean requestWindowFeature(int):0 -> h
    2:2:boolean requestWindowFeature(int):0:0 -> h
    void setContentView(int) -> i
    void setContentView(android.view.View) -> j
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> k
    1:1:android.support.v7.app.ActionBar android.support.v7.app.AppCompatDelegateImpl.peekSupportActionBar():0:0 -> l
    1:1:void setTitle(java.lang.CharSequence):0 -> l
    2:2:void setTitle(java.lang.CharSequence):0:0 -> l
    3:3:void android.support.v7.app.WindowDecorActionBar.setWindowTitle(java.lang.CharSequence):0:0 -> l
    3:3:void setTitle(java.lang.CharSequence):0 -> l
    4:4:void setTitle(java.lang.CharSequence):0:0 -> l
    void callOnPanelClosed(int,android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu) -> m
    void checkCloseActionMenu(android.support.v7.view.menu.MenuBuilder) -> n
    void closePanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> o
    1:1:android.view.View android.support.v7.app.AppCompatDelegateImpl.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    1:1:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    1:1:boolean android.support.v7.app.AppCompatDelegateImpl.onKeyDownPanel(int,android.view.KeyEvent):0:0 -> p
    1:1:boolean android.support.v7.app.AppCompatDelegateImpl.onKeyDown(int,android.view.KeyEvent):0 -> p
    1:1:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> p
    2:2:boolean android.support.v7.app.AppCompatDelegateImpl.onKeyDown(int,android.view.KeyEvent):0:0 -> p
    2:2:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> p
    3:3:boolean android.support.v7.app.AppCompatDelegateImpl.onKeyUpPanel(int,android.view.KeyEvent):0:0 -> p
    3:3:boolean android.support.v7.app.AppCompatDelegateImpl.onKeyUp(int,android.view.KeyEvent):0 -> p
    3:3:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> p
    4:4:boolean android.support.v7.app.AppCompatDelegateImpl.onKeyUp(int,android.view.KeyEvent):0:0 -> p
    4:4:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> p
    5:5:boolean android.support.v7.app.AppCompatDelegateImpl.onBackPressed():0:0 -> p
    5:5:boolean android.support.v7.app.AppCompatDelegateImpl.onKeyUp(int,android.view.KeyEvent):0 -> p
    5:5:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> p
    6:6:android.support.v7.app.ActionBar android.support.v7.app.AppCompatDelegateImpl.getSupportActionBar():0:0 -> p
    6:6:boolean android.support.v7.app.AppCompatDelegateImpl.onBackPressed():0 -> p
    6:6:boolean android.support.v7.app.AppCompatDelegateImpl.onKeyUp(int,android.view.KeyEvent):0 -> p
    6:6:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> p
    7:7:boolean android.support.v7.app.AppCompatDelegateImpl.onBackPressed():0:0 -> p
    7:7:boolean android.support.v7.app.AppCompatDelegateImpl.onKeyUp(int,android.view.KeyEvent):0 -> p
    7:7:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> p
    8:8:boolean android.support.v7.app.WindowDecorActionBar.collapseActionView():0:0 -> p
    8:8:boolean android.support.v7.app.AppCompatDelegateImpl.onBackPressed():0 -> p
    8:8:boolean android.support.v7.app.AppCompatDelegateImpl.onKeyUp(int,android.view.KeyEvent):0 -> p
    8:8:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> p
    void doInvalidatePanelMenu(int) -> q
    void endOnGoingFadeAnimation() -> r
    1:1:android.support.v7.app.TwilightManager android.support.v7.app.TwilightManager.getInstance(android.content.Context):0:0 -> s
    1:1:void ensureAutoNightModeManager():0 -> s
    2:2:void ensureAutoNightModeManager():0:0 -> s
    1:1:android.view.ViewGroup android.support.v7.app.AppCompatDelegateImpl.createSubDecor():0:0 -> t
    1:1:void ensureSubDecor():0 -> t
    2:2:void android.support.v7.widget.ViewUtils.makeOptionalFitsSystemWindows(android.view.View):0:0 -> t
    2:2:android.view.ViewGroup android.support.v7.app.AppCompatDelegateImpl.createSubDecor():0 -> t
    2:2:void ensureSubDecor():0 -> t
    3:3:android.view.ViewGroup android.support.v7.app.AppCompatDelegateImpl.createSubDecor():0:0 -> t
    3:3:void ensureSubDecor():0 -> t
    4:4:void ensureSubDecor():0:0 -> t
    5:5:java.lang.CharSequence android.support.v7.app.AppCompatDelegateImpl.getTitle():0:0 -> t
    5:5:void ensureSubDecor():0 -> t
    6:6:void ensureSubDecor():0:0 -> t
    7:7:android.support.v7.app.ActionBar android.support.v7.app.AppCompatDelegateImpl.peekSupportActionBar():0:0 -> t
    7:7:void ensureSubDecor():0 -> t
    8:8:void ensureSubDecor():0:0 -> t
    9:9:void android.support.v7.app.WindowDecorActionBar.setWindowTitle(java.lang.CharSequence):0:0 -> t
    9:9:void ensureSubDecor():0 -> t
    10:10:void ensureSubDecor():0:0 -> t
    11:11:void android.support.v7.app.AppCompatDelegateImpl.applyFixedSizeWindow():0:0 -> t
    11:11:void ensureSubDecor():0 -> t
    12:12:void android.support.v7.widget.ContentFrameLayout.setDecorPadding(int,int,int,int):0:0 -> t
    12:12:void android.support.v7.app.AppCompatDelegateImpl.applyFixedSizeWindow():0 -> t
    12:12:void ensureSubDecor():0 -> t
    13:13:boolean android.support.v4.view.ViewCompat.isLaidOut(android.view.View):0:0 -> t
    13:13:void android.support.v7.widget.ContentFrameLayout.setDecorPadding(int,int,int,int):0 -> t
    13:13:void android.support.v7.app.AppCompatDelegateImpl.applyFixedSizeWindow():0 -> t
    13:13:void ensureSubDecor():0 -> t
    14:14:void android.support.v7.widget.ContentFrameLayout.setDecorPadding(int,int,int,int):0:0 -> t
    14:14:void android.support.v7.app.AppCompatDelegateImpl.applyFixedSizeWindow():0 -> t
    14:14:void ensureSubDecor():0 -> t
    15:15:void android.support.v7.app.AppCompatDelegateImpl.applyFixedSizeWindow():0:0 -> t
    15:15:void ensureSubDecor():0 -> t
    16:16:void ensureSubDecor():0:0 -> t
    17:17:android.view.ViewGroup android.support.v7.app.AppCompatDelegateImpl.createSubDecor():0:0 -> t
    17:17:void ensureSubDecor():0 -> t
    android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> u
    android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> v
    android.view.Window$Callback getWindowCallback() -> w
    void initWindowDecorActionBar() -> x
    1:1:void android.support.v4.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> y
    1:1:void invalidatePanelMenu(int):0 -> y
    2:2:void invalidatePanelMenu(int):0:0 -> y
    1:1:android.support.v7.app.ActionBar android.support.v7.app.AppCompatDelegateImpl.getSupportActionBar():0:0 -> z
    1:1:android.content.Context android.support.v7.app.AppCompatDelegateImpl.getActionBarThemedContext():0 -> z
    1:1:boolean android.support.v7.app.AppCompatDelegateImpl.initializePanelDecor(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState):0 -> z
    1:1:void openPanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> z
    2:2:android.content.Context android.support.v7.app.AppCompatDelegateImpl.getActionBarThemedContext():0:0 -> z
    2:2:boolean android.support.v7.app.AppCompatDelegateImpl.initializePanelDecor(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState):0 -> z
    2:2:void openPanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> z
    3:3:void android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState.setStyle(android.content.Context):0:0 -> z
    3:3:boolean android.support.v7.app.AppCompatDelegateImpl.initializePanelDecor(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState):0 -> z
    3:3:void openPanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> z
    4:4:boolean android.support.v7.app.AppCompatDelegateImpl.initializePanelDecor(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState):0:0 -> z
    4:4:void openPanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> z
    5:5:void openPanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0:0 -> z
    6:6:boolean android.support.v7.app.AppCompatDelegateImpl.initializePanelContent(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState):0:0 -> z
    6:6:void openPanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> z
    7:7:android.support.v7.view.menu.MenuView android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState.getListMenuView(android.support.v7.view.menu.MenuPresenter$Callback):0:0 -> z
    7:7:boolean android.support.v7.app.AppCompatDelegateImpl.initializePanelContent(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState):0 -> z
    7:7:void openPanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> z
    8:8:void android.support.v7.view.menu.ListMenuPresenter.setCallback(android.support.v7.view.menu.MenuPresenter$Callback):0:0 -> z
    8:8:android.support.v7.view.menu.MenuView android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState.getListMenuView(android.support.v7.view.menu.MenuPresenter$Callback):0 -> z
    8:8:boolean android.support.v7.app.AppCompatDelegateImpl.initializePanelContent(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState):0 -> z
    8:8:void openPanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> z
    9:9:android.support.v7.view.menu.MenuView android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState.getListMenuView(android.support.v7.view.menu.MenuPresenter$Callback):0:0 -> z
    9:9:boolean android.support.v7.app.AppCompatDelegateImpl.initializePanelContent(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState):0 -> z
    9:9:void openPanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> z
    10:10:void android.support.v7.view.menu.MenuBuilder.addMenuPresenter(android.support.v7.view.menu.MenuPresenter):0:0 -> z
    10:10:android.support.v7.view.menu.MenuView android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState.getListMenuView(android.support.v7.view.menu.MenuPresenter$Callback):0 -> z
    10:10:boolean android.support.v7.app.AppCompatDelegateImpl.initializePanelContent(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState):0 -> z
    10:10:void openPanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> z
    11:11:android.support.v7.view.menu.MenuView android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState.getListMenuView(android.support.v7.view.menu.MenuPresenter$Callback):0:0 -> z
    11:11:boolean android.support.v7.app.AppCompatDelegateImpl.initializePanelContent(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState):0 -> z
    11:11:void openPanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> z
    12:12:android.support.v7.view.menu.MenuView android.support.v7.view.menu.ListMenuPresenter.getMenuView(android.view.ViewGroup):0:0 -> z
    12:12:android.support.v7.view.menu.MenuView android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState.getListMenuView(android.support.v7.view.menu.MenuPresenter$Callback):0 -> z
    12:12:boolean android.support.v7.app.AppCompatDelegateImpl.initializePanelContent(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState):0 -> z
    12:12:void openPanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> z
    13:13:boolean android.support.v7.app.AppCompatDelegateImpl.initializePanelContent(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState):0:0 -> z
    13:13:void openPanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> z
    14:14:boolean android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState.hasPanelItems():0:0 -> z
    14:14:void openPanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> z
    15:15:void openPanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0:0 -> z
android.support.v7.app.AppCompatDelegateImpl$2 -> l0.i$a:
    android.support.v7.app.AppCompatDelegateImpl this$0 -> b
android.support.v7.app.AppCompatDelegateImpl$3 -> l0.j:
    android.support.v7.app.AppCompatDelegateImpl this$0 -> a
    1:1:android.support.v4.view.WindowInsetsCompat android.support.v4.view.WindowInsetsCompat.replaceSystemWindowInsets(int,int,int,int):0:0 -> a
    1:1:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat):0 -> a
    2:2:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat):0:0 -> a
    3:3:java.lang.Object android.support.v4.view.WindowInsetsCompat.unwrap(android.support.v4.view.WindowInsetsCompat):0:0 -> a
    3:3:android.support.v4.view.WindowInsetsCompat android.support.v4.view.ViewCompat.onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat):0 -> a
    3:3:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat):0 -> a
    4:4:android.support.v4.view.WindowInsetsCompat android.support.v4.view.ViewCompat.onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat):0:0 -> a
    4:4:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat):0 -> a
    5:5:android.support.v4.view.WindowInsetsCompat android.support.v4.view.WindowInsetsCompat.wrap(java.lang.Object):0:0 -> a
    5:5:android.support.v4.view.WindowInsetsCompat android.support.v4.view.ViewCompat.onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat):0 -> a
    5:5:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat):0 -> a
android.support.v7.app.AppCompatDelegateImpl$5 -> l0.k:
    android.support.v7.app.AppCompatDelegateImpl this$0 -> a
android.support.v7.app.AppCompatDelegateImpl$6 -> l0.l:
    android.support.v7.app.AppCompatDelegateImpl this$0 -> b
    1:1:android.support.v4.view.ViewPropertyAnimatorCompat android.support.v4.view.ViewPropertyAnimatorCompat.setListener(android.support.v4.view.ViewPropertyAnimatorListener):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
android.support.v7.app.AppCompatDelegateImpl$6$1 -> l0.l$a:
    android.support.v7.app.AppCompatDelegateImpl$6 this$1 -> a
    void onAnimationEnd(android.view.View) -> a
    void onAnimationStart(android.view.View) -> b
android.support.v7.app.AppCompatDelegateImpl$7 -> l0.m:
    android.support.v7.app.AppCompatDelegateImpl this$0 -> a
    void onAnimationEnd(android.view.View) -> a
    1:1:void android.support.v4.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> b
    1:1:void onAnimationStart(android.view.View):0 -> b
android.support.v7.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> l0.i$b:
    android.support.v7.app.AppCompatDelegateImpl this$0 -> b
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> b
android.support.v7.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> l0.i$c:
    android.support.v7.view.ActionMode$Callback mWrapped -> a
    android.support.v7.app.AppCompatDelegateImpl this$0 -> b
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> a
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> b
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> c
    1:1:android.support.v4.view.ViewPropertyAnimatorCompat android.support.v4.view.ViewPropertyAnimatorCompat.setListener(android.support.v4.view.ViewPropertyAnimatorListener):0:0 -> d
    1:1:void onDestroyActionMode(android.support.v7.view.ActionMode):0 -> d
    2:2:void onDestroyActionMode(android.support.v7.view.ActionMode):0:0 -> d
android.support.v7.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> l0.i$c$a:
    android.support.v7.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1 -> a
    1:1:void android.support.v4.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> a
    1:1:void onAnimationEnd(android.view.View):0 -> a
    2:2:void onAnimationEnd(android.view.View):0:0 -> a
android.support.v7.app.AppCompatDelegateImpl$AppCompatWindowCallback -> l0.i$d:
    android.support.v7.app.AppCompatDelegateImpl this$0 -> c
    1:1:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0:0 -> a
    1:1:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    2:2:android.support.v7.app.ActionBar android.support.v7.app.AppCompatDelegateImpl.getSupportActionBar():0:0 -> a
    2:2:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0 -> a
    2:2:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    3:3:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0:0 -> a
    3:3:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    4:4:android.support.v7.view.ActionMode android.support.v7.app.WindowDecorActionBar.startActionMode(android.support.v7.view.ActionMode$Callback):0:0 -> a
    4:4:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0 -> a
    4:4:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    5:5:boolean android.support.v7.app.WindowDecorActionBar$ActionModeImpl.dispatchOnCreate():0:0 -> a
    5:5:android.support.v7.view.ActionMode android.support.v7.app.WindowDecorActionBar.startActionMode(android.support.v7.view.ActionMode$Callback):0 -> a
    5:5:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0 -> a
    5:5:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    6:6:android.support.v7.view.ActionMode android.support.v7.app.WindowDecorActionBar.startActionMode(android.support.v7.view.ActionMode$Callback):0:0 -> a
    6:6:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0 -> a
    6:6:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    7:7:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0:0 -> a
    7:7:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    8:8:boolean android.support.v7.app.WindowDecorActionBar$ActionModeImpl.dispatchOnCreate():0:0 -> a
    8:8:android.support.v7.view.ActionMode android.support.v7.app.WindowDecorActionBar.startActionMode(android.support.v7.view.ActionMode$Callback):0 -> a
    8:8:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0 -> a
    8:8:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    9:9:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0:0 -> a
    9:9:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    10:10:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback):0:0 -> a
    10:10:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0 -> a
    10:10:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    11:11:void android.support.v7.widget.ActionBarContextView.<init>(android.content.Context):0:0 -> a
    11:11:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback):0 -> a
    11:11:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0 -> a
    11:11:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    12:12:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback):0:0 -> a
    12:12:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0 -> a
    12:12:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    13:13:android.support.v7.app.ActionBar android.support.v7.app.AppCompatDelegateImpl.getSupportActionBar():0:0 -> a
    13:13:android.content.Context android.support.v7.app.AppCompatDelegateImpl.getActionBarThemedContext():0 -> a
    13:13:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback):0 -> a
    13:13:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0 -> a
    13:13:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    14:14:android.content.Context android.support.v7.app.AppCompatDelegateImpl.getActionBarThemedContext():0:0 -> a
    14:14:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback):0 -> a
    14:14:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0 -> a
    14:14:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    15:15:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback):0:0 -> a
    15:15:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0 -> a
    15:15:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    16:16:android.view.Menu android.support.v7.view.StandaloneActionMode.getMenu():0:0 -> a
    16:16:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback):0 -> a
    16:16:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0 -> a
    16:16:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    17:17:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback):0:0 -> a
    17:17:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0 -> a
    17:17:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    18:18:android.support.v4.view.ViewPropertyAnimatorCompat android.support.v4.view.ViewPropertyAnimatorCompat.setListener(android.support.v4.view.ViewPropertyAnimatorListener):0:0 -> a
    18:18:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback):0 -> a
    18:18:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0 -> a
    18:18:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    19:19:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback):0:0 -> a
    19:19:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0 -> a
    19:19:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    20:20:void android.support.v4.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> a
    20:20:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback):0 -> a
    20:20:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0 -> a
    20:20:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    21:21:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback):0:0 -> a
    21:21:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0 -> a
    21:21:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    22:22:android.support.v7.view.ActionMode android.support.v7.app.AppCompatDelegateImpl.startSupportActionMode(android.support.v7.view.ActionMode$Callback):0:0 -> a
    22:22:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0 -> a
    23:23:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback):0:0 -> a
    1:1:boolean android.support.v7.view.WindowCallbackWrapper.dispatchKeyEvent(android.view.KeyEvent):0:0 -> dispatchKeyEvent
    1:1:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> dispatchKeyEvent
    1:1:boolean android.support.v7.view.WindowCallbackWrapper.dispatchKeyShortcutEvent(android.view.KeyEvent):0:0 -> dispatchKeyShortcutEvent
    1:1:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    2:2:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0:0 -> dispatchKeyShortcutEvent
    3:3:android.support.v7.app.ActionBar android.support.v7.app.AppCompatDelegateImpl.getSupportActionBar():0:0 -> dispatchKeyShortcutEvent
    3:3:boolean android.support.v7.app.AppCompatDelegateImpl.onKeyShortcut(int,android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    3:3:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    4:4:boolean android.support.v7.app.AppCompatDelegateImpl.onKeyShortcut(int,android.view.KeyEvent):0:0 -> dispatchKeyShortcutEvent
    4:4:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    5:5:boolean android.support.v7.app.WindowDecorActionBar.onKeyShortcut(int,android.view.KeyEvent):0:0 -> dispatchKeyShortcutEvent
    5:5:boolean android.support.v7.app.AppCompatDelegateImpl.onKeyShortcut(int,android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    5:5:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    6:6:android.view.Menu android.support.v7.app.WindowDecorActionBar$ActionModeImpl.getMenu():0:0 -> dispatchKeyShortcutEvent
    6:6:boolean android.support.v7.app.WindowDecorActionBar.onKeyShortcut(int,android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    6:6:boolean android.support.v7.app.AppCompatDelegateImpl.onKeyShortcut(int,android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    6:6:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    7:7:boolean android.support.v7.app.WindowDecorActionBar.onKeyShortcut(int,android.view.KeyEvent):0:0 -> dispatchKeyShortcutEvent
    7:7:boolean android.support.v7.app.AppCompatDelegateImpl.onKeyShortcut(int,android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    7:7:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    8:8:boolean android.support.v7.app.AppCompatDelegateImpl.onKeyShortcut(int,android.view.KeyEvent):0:0 -> dispatchKeyShortcutEvent
    8:8:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    1:1:boolean android.support.v7.view.WindowCallbackWrapper.onCreatePanelMenu(int,android.view.Menu):0:0 -> onCreatePanelMenu
    1:1:boolean onCreatePanelMenu(int,android.view.Menu):0 -> onCreatePanelMenu
    1:1:boolean android.support.v7.view.WindowCallbackWrapper.onMenuOpened(int,android.view.Menu):0:0 -> onMenuOpened
    1:1:boolean onMenuOpened(int,android.view.Menu):0 -> onMenuOpened
    2:2:boolean onMenuOpened(int,android.view.Menu):0:0 -> onMenuOpened
    3:3:android.support.v7.app.ActionBar android.support.v7.app.AppCompatDelegateImpl.getSupportActionBar():0:0 -> onMenuOpened
    3:3:void android.support.v7.app.AppCompatDelegateImpl.onMenuOpened(int):0 -> onMenuOpened
    3:3:boolean onMenuOpened(int,android.view.Menu):0 -> onMenuOpened
    4:4:void android.support.v7.app.AppCompatDelegateImpl.onMenuOpened(int):0:0 -> onMenuOpened
    4:4:boolean onMenuOpened(int,android.view.Menu):0 -> onMenuOpened
    1:1:void android.support.v7.view.WindowCallbackWrapper.onPanelClosed(int,android.view.Menu):0:0 -> onPanelClosed
    1:1:void onPanelClosed(int,android.view.Menu):0 -> onPanelClosed
    2:2:void onPanelClosed(int,android.view.Menu):0:0 -> onPanelClosed
    3:3:android.support.v7.app.ActionBar android.support.v7.app.AppCompatDelegateImpl.getSupportActionBar():0:0 -> onPanelClosed
    3:3:void android.support.v7.app.AppCompatDelegateImpl.onPanelClosed(int):0 -> onPanelClosed
    3:3:void onPanelClosed(int,android.view.Menu):0 -> onPanelClosed
    4:4:void android.support.v7.app.AppCompatDelegateImpl.onPanelClosed(int):0:0 -> onPanelClosed
    4:4:void onPanelClosed(int,android.view.Menu):0 -> onPanelClosed
    1:1:void android.support.v7.view.menu.MenuBuilder.setOverrideVisibleItems(boolean):0:0 -> onPreparePanel
    1:1:boolean onPreparePanel(int,android.view.View,android.view.Menu):0 -> onPreparePanel
    2:2:boolean android.support.v7.view.WindowCallbackWrapper.onPreparePanel(int,android.view.View,android.view.Menu):0:0 -> onPreparePanel
    2:2:boolean onPreparePanel(int,android.view.View,android.view.Menu):0 -> onPreparePanel
    3:3:void android.support.v7.view.menu.MenuBuilder.setOverrideVisibleItems(boolean):0:0 -> onPreparePanel
    3:3:boolean onPreparePanel(int,android.view.View,android.view.Menu):0 -> onPreparePanel
    1:1:void android.support.v7.view.WindowCallbackWrapper.onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int):0:0 -> onProvideKeyboardShortcuts
    1:1:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int):0 -> onProvideKeyboardShortcuts
    1:1:android.view.ActionMode android.support.v7.view.WindowCallbackWrapper.onWindowStartingActionMode(android.view.ActionMode$Callback,int):0:0 -> onWindowStartingActionMode
    1:1:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int):0 -> onWindowStartingActionMode
    2:2:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int):0:0 -> onWindowStartingActionMode
android.support.v7.app.AppCompatDelegateImpl$AutoNightModeManager -> l0.i$e:
    android.support.v7.app.TwilightManager mTwilightManager -> a
    android.support.v7.app.AppCompatDelegateImpl this$0 -> e
    android.content.IntentFilter mAutoTimeChangeReceiverFilter -> d
    android.content.BroadcastReceiver mAutoTimeChangeReceiver -> c
    boolean mIsNight -> b
    void cleanup() -> a
android.support.v7.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> l0.n:
    android.support.v7.app.AppCompatDelegateImpl$AutoNightModeManager this$1 -> a
    1:1:void android.support.v7.app.AppCompatDelegateImpl$AutoNightModeManager.dispatchTimeChanged():0:0 -> onReceive
    1:1:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
android.support.v7.app.AppCompatDelegateImpl$ListMenuDecorView -> l0.i$f:
    android.support.v7.app.AppCompatDelegateImpl this$0 -> j
    1:1:void android.support.v7.widget.ContentFrameLayout.<init>(android.content.Context):0:0 -> <init>
    1:1:void <init>(android.support.v7.app.AppCompatDelegateImpl,android.content.Context):0 -> <init>
    1:1:boolean android.support.v7.app.AppCompatDelegateImpl$ListMenuDecorView.isOutOfBounds(int,int):0:0 -> onInterceptTouchEvent
    1:1:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    2:2:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    3:3:void android.support.v7.app.AppCompatDelegateImpl.closePanel(int):0:0 -> onInterceptTouchEvent
    3:3:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    4:4:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState -> l0.i$g:
    boolean isOpen -> m
    boolean refreshDecorView -> n
    boolean refreshMenuContent -> o
    boolean isPrepared -> k
    boolean isHandled -> l
    int windowAnimations -> d
    android.content.Context listPresenterContext -> j
    int background -> b
    int gravity -> c
    int featureId -> a
    android.os.Bundle frozenActionViewState -> p
    android.view.ViewGroup decorView -> e
    android.support.v7.view.menu.ListMenuPresenter listMenuPresenter -> i
    android.support.v7.view.menu.MenuBuilder menu -> h
    android.view.View createdPanelView -> g
    android.view.View shownPanelView -> f
    1:1:void android.support.v7.view.menu.MenuBuilder.addMenuPresenter(android.support.v7.view.menu.MenuPresenter):0:0 -> a
    1:1:void setMenu(android.support.v7.view.menu.MenuBuilder):0 -> a
android.support.v7.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> l0.i$h:
    android.support.v7.app.AppCompatDelegateImpl this$0 -> b
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> b
android.support.v7.app.AppCompatDialog -> l0.o:
    android.support.v4.view.KeyEventDispatcher$Component mKeyDispatcher -> c
    android.support.v7.app.AppCompatDelegate mDelegate -> b
    1:1:int android.support.v7.app.AppCompatDialog.getThemeResId(android.content.Context,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,int):0 -> <init>
    2:2:void <init>(android.content.Context,int):0:0 -> <init>
    1:1:android.support.v7.app.AppCompatDelegate android.support.v7.app.AppCompatDelegate.create(android.app.Dialog,android.support.v7.app.AppCompatCallback):0:0 -> a
    1:1:android.support.v7.app.AppCompatDelegate getDelegate():0 -> a
    2:2:android.support.v7.app.AppCompatDelegate getDelegate():0:0 -> a
    1:1:void android.support.v7.app.AppCompatDelegateImpl.addContentView(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> addContentView
    1:1:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams):0 -> addContentView
    boolean superDispatchKeyEvent(android.view.KeyEvent) -> b
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> c
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> d
    android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback) -> e
    1:1:android.view.View android.support.v7.app.AppCompatDelegateImpl.findViewById(int):0:0 -> findViewById
    1:1:android.view.View findViewById(int):0 -> findViewById
android.support.v7.app.AppCompatDialog$1 -> l0.o$a:
    android.support.v7.app.AppCompatDialog this$0 -> b
    boolean superDispatchKeyEvent(android.view.KeyEvent) -> f
android.support.v7.app.AppCompatViewInflater -> android.support.v7.app.AppCompatViewInflater:
    1:1:boolean android.support.v4.view.ViewCompat.hasOnClickListeners(android.view.View):0:0 -> checkOnClickListener
    1:1:void checkOnClickListener(android.view.View,android.util.AttributeSet):0 -> checkOnClickListener
    2:2:void checkOnClickListener(android.view.View,android.util.AttributeSet):0:0 -> checkOnClickListener
    1:1:void android.support.v7.widget.AppCompatButton.<init>(android.content.Context,android.util.AttributeSet):0:0 -> createButton
    1:1:android.support.v7.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet):0 -> createButton
    1:1:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet):0:0 -> createSpinner
    1:1:android.support.v7.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet):0 -> createSpinner
    1:1:int android.support.v7.view.ContextThemeWrapper.getThemeResId():0:0 -> themifyContext
    1:1:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean):0 -> themifyContext
    2:2:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean):0:0 -> themifyContext
android.support.v7.app.AppCompatViewInflater$DeclaredOnClickListener -> android.support.v7.app.AppCompatViewInflater$a:
    java.lang.reflect.Method mResolvedMethod -> d
    android.view.View mHostView -> b
    java.lang.String mMethodName -> c
    android.content.Context mResolvedContext -> e
    1:1:void resolveMethod(android.content.Context,java.lang.String):0:0 -> onClick
    1:1:void onClick(android.view.View):0 -> onClick
    2:2:void onClick(android.view.View):0:0 -> onClick
android.support.v7.app.ResourcesFlusher -> l0.p:
    java.lang.reflect.Field sResourcesImplField -> g
    java.lang.reflect.Field sThemedResourceCache_mUnthemedEntriesField -> e
    boolean sThemedResourceCache_mUnthemedEntriesFieldFetched -> f
    boolean sResourcesImplFieldFetched -> h
    java.lang.reflect.Field sDrawableCacheField -> a
    boolean sDrawableCacheFieldFetched -> b
    java.lang.Class sThemedResourceCacheClazz -> c
    boolean sThemedResourceCacheClazzFetched -> d
    void flushThemedResourcesCache(java.lang.Object) -> a
android.support.v7.app.TwilightCalculator -> l0.q:
    long sunrise -> b
    long sunset -> a
    int state -> c
    android.support.v7.app.TwilightCalculator sInstance -> d
    void calculateTwilight(long,double,double) -> a
android.support.v7.app.TwilightManager -> l0.r:
    android.content.Context mContext -> a
    android.support.v7.app.TwilightManager$TwilightState mTwilightState -> c
    android.support.v7.app.TwilightManager sInstance -> d
    android.location.LocationManager mLocationManager -> b
    android.location.Location getLastKnownLocationForProvider(java.lang.String) -> a
    1:1:boolean android.support.v7.app.TwilightManager.isStateValid():0:0 -> b
    1:1:boolean isNight():0 -> b
    2:2:boolean isNight():0:0 -> b
    3:3:android.location.Location android.support.v7.app.TwilightManager.getLastKnownLocation():0:0 -> b
    3:3:boolean isNight():0 -> b
    4:4:void android.support.v7.app.TwilightManager.updateState(android.location.Location):0:0 -> b
    4:4:boolean isNight():0 -> b
    5:5:android.support.v7.app.TwilightCalculator android.support.v7.app.TwilightCalculator.getInstance():0:0 -> b
    5:5:void android.support.v7.app.TwilightManager.updateState(android.location.Location):0 -> b
    5:5:boolean isNight():0 -> b
    6:6:void android.support.v7.app.TwilightManager.updateState(android.location.Location):0:0 -> b
    6:6:boolean isNight():0 -> b
    7:7:boolean isNight():0:0 -> b
android.support.v7.app.TwilightManager$TwilightState -> l0.r$a:
    long nextUpdate -> b
    boolean isNight -> a
android.support.v7.app.WindowDecorActionBar -> l0.s:
    android.content.Context mContext -> a
    android.view.animation.Interpolator sShowInterpolator -> A
    boolean mShowHideAnimationEnabled -> u
    boolean mHiddenBySystem -> q
    boolean mNowShowing -> s
    android.support.v4.view.ViewPropertyAnimatorListener mShowListener -> x
    android.support.v7.widget.ActionBarOverlayLayout mOverlayLayout -> c
    android.support.v7.view.ActionMode$Callback mDeferredModeDestroyCallback -> k
    java.util.ArrayList mMenuVisibilityListeners -> m
    android.support.v7.app.WindowDecorActionBar$ActionModeImpl mActionMode -> i
    android.support.v7.widget.ActionBarContainer mContainerView -> d
    boolean mDisplayHomeAsUpSet -> h
    android.support.v7.view.ActionMode mDeferredDestroyActionMode -> j
    android.support.v4.view.ViewPropertyAnimatorUpdateListener mUpdateListener -> y
    android.view.View mContentView -> g
    android.view.animation.Interpolator sHideInterpolator -> z
    android.support.v7.widget.ActionBarContextView mContextView -> f
    boolean mHasEmbeddedTabs -> n
    int mCurWindowVisibility -> o
    android.content.Context mThemedContext -> b
    boolean mContentAnimations -> p
    boolean mLastMenuVisibility -> l
    boolean mHideOnContentScroll -> v
    boolean mShowingForMode -> r
    android.support.v7.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim -> t
    android.support.v4.view.ViewPropertyAnimatorListener mHideListener -> w
    android.support.v7.widget.DecorToolbar mDecorToolbar -> e
    void dispatchMenuVisibilityChanged(boolean) -> a
    android.content.Context getThemedContext() -> b
    1:1:void android.support.v7.app.WindowDecorActionBar.setDisplayOptions(int,int):0:0 -> c
    1:1:void android.support.v7.app.WindowDecorActionBar.setDisplayHomeAsUpEnabled(boolean):0 -> c
    1:1:void setDefaultDisplayHomeAsUpEnabled(boolean):0 -> c
    1:1:void android.support.v7.app.WindowDecorActionBar.showForActionMode():0:0 -> d
    1:1:void animateToMode(boolean):0 -> d
    2:2:void android.support.v7.app.WindowDecorActionBar.hideForActionMode():0:0 -> d
    2:2:void animateToMode(boolean):0 -> d
    3:3:boolean android.support.v7.app.WindowDecorActionBar.shouldAnimateContextView():0:0 -> d
    3:3:void animateToMode(boolean):0 -> d
    4:4:boolean android.support.v4.view.ViewCompat.isLaidOut(android.view.View):0:0 -> d
    4:4:boolean android.support.v7.app.WindowDecorActionBar.shouldAnimateContextView():0 -> d
    4:4:void animateToMode(boolean):0 -> d
    5:5:void animateToMode(boolean):0:0 -> d
    6:6:android.support.v7.view.ViewPropertyAnimatorCompatSet android.support.v7.view.ViewPropertyAnimatorCompatSet.playSequentially(android.support.v4.view.ViewPropertyAnimatorCompat,android.support.v4.view.ViewPropertyAnimatorCompat):0:0 -> d
    6:6:void animateToMode(boolean):0 -> d
    7:7:long android.support.v4.view.ViewPropertyAnimatorCompat.getDuration():0:0 -> d
    7:7:android.support.v7.view.ViewPropertyAnimatorCompatSet android.support.v7.view.ViewPropertyAnimatorCompatSet.playSequentially(android.support.v4.view.ViewPropertyAnimatorCompat,android.support.v4.view.ViewPropertyAnimatorCompat):0 -> d
    7:7:void animateToMode(boolean):0 -> d
    8:8:android.support.v4.view.ViewPropertyAnimatorCompat android.support.v4.view.ViewPropertyAnimatorCompat.setStartDelay(long):0:0 -> d
    8:8:android.support.v7.view.ViewPropertyAnimatorCompatSet android.support.v7.view.ViewPropertyAnimatorCompatSet.playSequentially(android.support.v4.view.ViewPropertyAnimatorCompat,android.support.v4.view.ViewPropertyAnimatorCompat):0 -> d
    8:8:void animateToMode(boolean):0 -> d
    9:9:android.support.v7.view.ViewPropertyAnimatorCompatSet android.support.v7.view.ViewPropertyAnimatorCompatSet.playSequentially(android.support.v4.view.ViewPropertyAnimatorCompat,android.support.v4.view.ViewPropertyAnimatorCompat):0:0 -> d
    9:9:void animateToMode(boolean):0 -> d
    10:10:void animateToMode(boolean):0:0 -> d
    1:1:android.support.v7.widget.DecorToolbar android.support.v7.app.WindowDecorActionBar.getDecorToolbar(android.view.View):0:0 -> e
    1:1:void init(android.view.View):0 -> e
    2:2:void init(android.view.View):0:0 -> e
    3:3:boolean android.support.v7.view.ActionBarPolicy.enableHomeButtonByDefault():0:0 -> e
    3:3:void init(android.view.View):0 -> e
    4:4:void android.support.v7.app.WindowDecorActionBar.setHomeButtonEnabled(boolean):0:0 -> e
    4:4:void init(android.view.View):0 -> e
    5:5:boolean android.support.v7.view.ActionBarPolicy.hasEmbeddedTabs():0:0 -> e
    5:5:void init(android.view.View):0 -> e
    6:6:void init(android.view.View):0:0 -> e
    7:7:void android.support.v7.app.WindowDecorActionBar.setHideOnContentScrollEnabled(boolean):0:0 -> e
    7:7:void init(android.view.View):0 -> e
    8:8:boolean android.support.v7.widget.ActionBarOverlayLayout.isInOverlayMode():0:0 -> e
    8:8:void android.support.v7.app.WindowDecorActionBar.setHideOnContentScrollEnabled(boolean):0 -> e
    8:8:void init(android.view.View):0 -> e
    9:9:void android.support.v7.app.WindowDecorActionBar.setHideOnContentScrollEnabled(boolean):0:0 -> e
    9:9:void init(android.view.View):0 -> e
    10:10:void init(android.view.View):0:0 -> e
    11:11:void android.support.v7.app.WindowDecorActionBar.setElevation(float):0:0 -> e
    11:11:void init(android.view.View):0 -> e
    12:12:void android.support.v4.view.ViewCompat.setElevation(android.view.View,float):0:0 -> e
    12:12:void android.support.v7.app.WindowDecorActionBar.setElevation(float):0 -> e
    12:12:void init(android.view.View):0 -> e
    13:13:void init(android.view.View):0:0 -> e
    14:14:android.support.v7.widget.DecorToolbar android.support.v7.app.WindowDecorActionBar.getDecorToolbar(android.view.View):0:0 -> e
    14:14:void init(android.view.View):0 -> e
    1:1:int android.support.v7.app.WindowDecorActionBar.getNavigationMode():0:0 -> f
    1:1:void setHasEmbeddedTabs(boolean):0 -> f
    2:2:void setHasEmbeddedTabs(boolean):0:0 -> f
    1:1:void android.support.v7.app.WindowDecorActionBar.doShow(boolean):0:0 -> g
    1:1:void updateVisibility(boolean):0 -> g
    2:2:android.support.v7.view.ViewPropertyAnimatorCompatSet android.support.v7.view.ViewPropertyAnimatorCompatSet.play(android.support.v4.view.ViewPropertyAnimatorCompat):0:0 -> g
    2:2:void android.support.v7.app.WindowDecorActionBar.doShow(boolean):0 -> g
    2:2:void updateVisibility(boolean):0 -> g
    3:3:void android.support.v7.app.WindowDecorActionBar.doShow(boolean):0:0 -> g
    3:3:void updateVisibility(boolean):0 -> g
    4:4:android.support.v7.view.ViewPropertyAnimatorCompatSet android.support.v7.view.ViewPropertyAnimatorCompatSet.play(android.support.v4.view.ViewPropertyAnimatorCompat):0:0 -> g
    4:4:void android.support.v7.app.WindowDecorActionBar.doShow(boolean):0 -> g
    4:4:void updateVisibility(boolean):0 -> g
    5:5:void android.support.v7.app.WindowDecorActionBar.doShow(boolean):0:0 -> g
    5:5:void updateVisibility(boolean):0 -> g
    6:6:android.support.v7.view.ViewPropertyAnimatorCompatSet android.support.v7.view.ViewPropertyAnimatorCompatSet.setInterpolator(android.view.animation.Interpolator):0:0 -> g
    6:6:void android.support.v7.app.WindowDecorActionBar.doShow(boolean):0 -> g
    6:6:void updateVisibility(boolean):0 -> g
    7:7:android.support.v7.view.ViewPropertyAnimatorCompatSet android.support.v7.view.ViewPropertyAnimatorCompatSet.setDuration(long):0:0 -> g
    7:7:void android.support.v7.app.WindowDecorActionBar.doShow(boolean):0 -> g
    7:7:void updateVisibility(boolean):0 -> g
    8:8:void android.support.v7.app.WindowDecorActionBar.doShow(boolean):0:0 -> g
    8:8:void updateVisibility(boolean):0 -> g
    9:9:android.support.v7.view.ViewPropertyAnimatorCompatSet android.support.v7.view.ViewPropertyAnimatorCompatSet.setListener(android.support.v4.view.ViewPropertyAnimatorListener):0:0 -> g
    9:9:void android.support.v7.app.WindowDecorActionBar.doShow(boolean):0 -> g
    9:9:void updateVisibility(boolean):0 -> g
    10:10:void android.support.v7.app.WindowDecorActionBar.doShow(boolean):0:0 -> g
    10:10:void updateVisibility(boolean):0 -> g
    11:11:void android.support.v4.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> g
    11:11:void android.support.v7.app.WindowDecorActionBar.doShow(boolean):0 -> g
    11:11:void updateVisibility(boolean):0 -> g
    12:12:void updateVisibility(boolean):0:0 -> g
    13:13:void android.support.v7.app.WindowDecorActionBar.doHide(boolean):0:0 -> g
    13:13:void updateVisibility(boolean):0 -> g
    14:14:android.support.v7.view.ViewPropertyAnimatorCompatSet android.support.v7.view.ViewPropertyAnimatorCompatSet.play(android.support.v4.view.ViewPropertyAnimatorCompat):0:0 -> g
    14:14:void android.support.v7.app.WindowDecorActionBar.doHide(boolean):0 -> g
    14:14:void updateVisibility(boolean):0 -> g
    15:15:void android.support.v7.app.WindowDecorActionBar.doHide(boolean):0:0 -> g
    15:15:void updateVisibility(boolean):0 -> g
    16:16:android.support.v7.view.ViewPropertyAnimatorCompatSet android.support.v7.view.ViewPropertyAnimatorCompatSet.play(android.support.v4.view.ViewPropertyAnimatorCompat):0:0 -> g
    16:16:void android.support.v7.app.WindowDecorActionBar.doHide(boolean):0 -> g
    16:16:void updateVisibility(boolean):0 -> g
    17:17:void android.support.v7.app.WindowDecorActionBar.doHide(boolean):0:0 -> g
    17:17:void updateVisibility(boolean):0 -> g
    18:18:android.support.v7.view.ViewPropertyAnimatorCompatSet android.support.v7.view.ViewPropertyAnimatorCompatSet.setInterpolator(android.view.animation.Interpolator):0:0 -> g
    18:18:void android.support.v7.app.WindowDecorActionBar.doHide(boolean):0 -> g
    18:18:void updateVisibility(boolean):0 -> g
    19:19:android.support.v7.view.ViewPropertyAnimatorCompatSet android.support.v7.view.ViewPropertyAnimatorCompatSet.setDuration(long):0:0 -> g
    19:19:void android.support.v7.app.WindowDecorActionBar.doHide(boolean):0 -> g
    19:19:void updateVisibility(boolean):0 -> g
    20:20:void android.support.v7.app.WindowDecorActionBar.doHide(boolean):0:0 -> g
    20:20:void updateVisibility(boolean):0 -> g
    21:21:android.support.v7.view.ViewPropertyAnimatorCompatSet android.support.v7.view.ViewPropertyAnimatorCompatSet.setListener(android.support.v4.view.ViewPropertyAnimatorListener):0:0 -> g
    21:21:void android.support.v7.app.WindowDecorActionBar.doHide(boolean):0 -> g
    21:21:void updateVisibility(boolean):0 -> g
    22:22:void android.support.v7.app.WindowDecorActionBar.doHide(boolean):0:0 -> g
    22:22:void updateVisibility(boolean):0 -> g
android.support.v7.app.WindowDecorActionBar$1 -> l0.s$a:
    android.support.v7.app.WindowDecorActionBar this$0 -> a
    1:1:void android.support.v7.app.WindowDecorActionBar.completeDeferredDestroyActionMode():0:0 -> a
    1:1:void onAnimationEnd(android.view.View):0 -> a
    2:2:void onAnimationEnd(android.view.View):0:0 -> a
    3:3:void android.support.v4.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> a
    3:3:void onAnimationEnd(android.view.View):0 -> a
android.support.v7.app.WindowDecorActionBar$2 -> l0.s$b:
    android.support.v7.app.WindowDecorActionBar this$0 -> a
    void onAnimationEnd(android.view.View) -> a
android.support.v7.app.WindowDecorActionBar$3 -> l0.s$c:
    android.support.v7.app.WindowDecorActionBar this$0 -> a
android.support.v7.app.WindowDecorActionBar$ActionModeImpl -> l0.s$d:
    android.support.v7.view.menu.MenuBuilder mMenu -> e
    java.lang.ref.WeakReference mCustomView -> g
    android.support.v7.app.WindowDecorActionBar this$0 -> h
    android.support.v7.view.ActionMode$Callback mCallback -> f
    android.content.Context mActionModeContext -> d
    1:1:android.support.v7.view.menu.MenuBuilder android.support.v7.view.menu.MenuBuilder.setDefaultShowAsAction(int):0:0 -> <init>
    1:1:void <init>(android.support.v7.app.WindowDecorActionBar,android.content.Context,android.support.v7.view.ActionMode$Callback):0 -> <init>
    2:2:void <init>(android.support.v7.app.WindowDecorActionBar,android.content.Context,android.support.v7.view.ActionMode$Callback):0:0 -> <init>
    3:3:void android.support.v7.view.menu.MenuBuilder.setCallback(android.support.v7.view.menu.MenuBuilder$Callback):0:0 -> <init>
    3:3:void <init>(android.support.v7.app.WindowDecorActionBar,android.content.Context,android.support.v7.view.ActionMode$Callback):0 -> <init>
    1:1:boolean android.support.v7.widget.ActionBarContextView.showOverflowMenu():0:0 -> a
    1:1:void onMenuModeChange(android.support.v7.view.menu.MenuBuilder):0 -> a
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> b
    1:1:void android.support.v7.widget.ActionBarContextView.closeMode():0:0 -> c
    1:1:void finish():0 -> c
    2:2:void finish():0:0 -> c
    android.view.View getCustomView() -> d
    android.view.Menu getMenu() -> e
    android.view.MenuInflater getMenuInflater() -> f
    java.lang.CharSequence getSubtitle() -> g
    java.lang.CharSequence getTitle() -> h
    void invalidate() -> i
    1:1:boolean android.support.v7.widget.ActionBarContextView.isTitleOptional():0:0 -> j
    1:1:boolean isTitleOptional():0 -> j
    void setCustomView(android.view.View) -> k
    1:1:void android.support.v7.app.WindowDecorActionBar$ActionModeImpl.setSubtitle(java.lang.CharSequence):0:0 -> l
    1:1:void setSubtitle(int):0 -> l
    void setSubtitle(java.lang.CharSequence) -> m
    1:1:void android.support.v7.app.WindowDecorActionBar$ActionModeImpl.setTitle(java.lang.CharSequence):0:0 -> n
    1:1:void setTitle(int):0 -> n
    void setTitle(java.lang.CharSequence) -> o
    1:1:void android.support.v7.view.ActionMode.setTitleOptionalHint(boolean):0:0 -> p
    1:1:void setTitleOptionalHint(boolean):0 -> p
    2:2:void setTitleOptionalHint(boolean):0:0 -> p
android.support.v7.appcompat.R$style -> m0.a:
    android.view.inputmethod.InputConnection android.support.v7.widget.AppCompatHintHelper.onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> a
android.support.v7.appcompat.R$styleable -> m0.b:
    int[] RecycleListView -> w
    int[] Spinner -> y
    int[] MenuGroup -> s
    int[] MenuView -> u
    int[] Toolbar -> A
    int[] AnimatedStateListDrawableCompat -> f
    int[] AnimatedStateListDrawableTransition -> h
    int[] ActionBarLayout -> b
    int[] ViewBackgroundHelper -> C
    int[] ActionMode -> d
    int[] ButtonBarLayout -> n
    int[] LinearLayoutCompat -> p
    int[] AppCompatSeekBar -> j
    int[] AppCompatTextView -> l
    int[] PopupWindow -> v
    int[] SearchView -> x
    int[] ListPopupWindow -> r
    int[] MenuItem -> t
    int[] ActionBar -> a
    int[] TextAppearance -> z
    int[] AnimatedStateListDrawableItem -> g
    int[] AppCompatImageView -> i
    int[] View -> B
    int[] ActionMenuItemView -> c
    int[] ViewStubCompat -> D
    int[] AlertDialog -> e
    int[] CompoundButton -> o
    int[] LinearLayoutCompat_Layout -> q
    int[] AppCompatTextHelper -> k
    int[] AppCompatTheme -> m
android.support.v7.content.res.AppCompatResources -> n0.a:
    java.lang.ThreadLocal TL_TYPED_VALUE -> a
    java.lang.Object sColorStateCacheLock -> c
    java.util.WeakHashMap sColorStateCaches -> b
    1:1:android.content.res.ColorStateList android.support.v7.content.res.AppCompatResources.getCachedColorStateList(android.content.Context,int):0:0 -> a
    1:1:android.content.res.ColorStateList getColorStateList(android.content.Context,int):0 -> a
    2:2:boolean android.support.v7.content.res.AppCompatResources.isColorInt(android.content.Context,int):0:0 -> a
    2:2:android.content.res.ColorStateList android.support.v7.content.res.AppCompatResources.inflateColorStateList(android.content.Context,int):0 -> a
    2:2:android.content.res.ColorStateList getColorStateList(android.content.Context,int):0 -> a
    3:3:android.util.TypedValue android.support.v7.content.res.AppCompatResources.getTypedValue():0:0 -> a
    3:3:boolean android.support.v7.content.res.AppCompatResources.isColorInt(android.content.Context,int):0 -> a
    3:3:android.content.res.ColorStateList android.support.v7.content.res.AppCompatResources.inflateColorStateList(android.content.Context,int):0 -> a
    3:3:android.content.res.ColorStateList getColorStateList(android.content.Context,int):0 -> a
    4:4:boolean android.support.v7.content.res.AppCompatResources.isColorInt(android.content.Context,int):0:0 -> a
    4:4:android.content.res.ColorStateList android.support.v7.content.res.AppCompatResources.inflateColorStateList(android.content.Context,int):0 -> a
    4:4:android.content.res.ColorStateList getColorStateList(android.content.Context,int):0 -> a
    5:5:android.content.res.ColorStateList android.support.v7.content.res.AppCompatResources.inflateColorStateList(android.content.Context,int):0:0 -> a
    5:5:android.content.res.ColorStateList getColorStateList(android.content.Context,int):0 -> a
    6:6:android.content.res.ColorStateList android.support.v4.content.res.ColorStateListInflaterCompat.createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme):0:0 -> a
    6:6:android.content.res.ColorStateList android.support.v7.content.res.AppCompatResources.inflateColorStateList(android.content.Context,int):0 -> a
    6:6:android.content.res.ColorStateList getColorStateList(android.content.Context,int):0 -> a
    7:7:android.content.res.ColorStateList android.support.v7.content.res.AppCompatResources.inflateColorStateList(android.content.Context,int):0:0 -> a
    7:7:android.content.res.ColorStateList getColorStateList(android.content.Context,int):0 -> a
    8:8:void android.support.v7.content.res.AppCompatResources.addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList):0:0 -> a
    8:8:android.content.res.ColorStateList getColorStateList(android.content.Context,int):0 -> a
    9:9:android.content.res.ColorStateList getColorStateList(android.content.Context,int):0:0 -> a
    10:10:android.content.res.ColorStateList android.support.v4.content.ContextCompat.getColorStateList(android.content.Context,int):0:0 -> a
    10:10:android.content.res.ColorStateList getColorStateList(android.content.Context,int):0 -> a
    11:11:android.content.res.ColorStateList android.support.v7.content.res.AppCompatResources.getCachedColorStateList(android.content.Context,int):0:0 -> a
    11:11:android.content.res.ColorStateList getColorStateList(android.content.Context,int):0 -> a
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> b
android.support.v7.content.res.AppCompatResources$ColorStateListCacheEntry -> n0.a$a:
    android.content.res.Configuration configuration -> b
    android.content.res.ColorStateList value -> a
android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat -> o0.b:
    boolean mMutated -> u
    int mTransitionFromIndex -> t
    android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition -> r
    int mTransitionToIndex -> s
    android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState -> q
    1:1:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.setConstantState(android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState):0:0 -> <init>
    1:1:void <init>(android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources):0 -> <init>
    2:2:void <init>(android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources):0:0 -> <init>
    1:1:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.cloneConstantState():0:0 -> b
    1:1:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState():0 -> b
    void setConstantState(android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState) -> e
    1:1:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.cloneConstantState():0:0 -> f
    1:1:android.support.v7.graphics.drawable.StateListDrawable$StateListState cloneConstantState():0 -> f
    1:1:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.<init>():0:0 -> g
    1:1:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    2:2:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> g
    2:2:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    3:3:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray):0:0 -> g
    3:3:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    3:3:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    4:4:void android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.setVariablePadding(boolean):0:0 -> g
    4:4:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray):0 -> g
    4:4:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    4:4:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    5:5:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray):0:0 -> g
    5:5:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    5:5:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    6:6:void android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.setConstantSize(boolean):0:0 -> g
    6:6:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray):0 -> g
    6:6:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    6:6:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    7:7:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray):0:0 -> g
    7:7:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    7:7:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    8:8:void android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.setEnterFadeDuration(int):0:0 -> g
    8:8:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray):0 -> g
    8:8:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    8:8:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    9:9:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray):0:0 -> g
    9:9:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    9:9:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    10:10:void android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.setExitFadeDuration(int):0:0 -> g
    10:10:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray):0 -> g
    10:10:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    10:10:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    11:11:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray):0:0 -> g
    11:11:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    11:11:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    12:12:void android.support.v7.graphics.drawable.DrawableContainer.updateDensity(android.content.res.Resources):0:0 -> g
    12:12:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    12:12:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    13:13:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> g
    13:13:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    14:14:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> g
    14:14:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    14:14:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    15:15:int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> g
    15:15:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    15:15:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    15:15:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    16:16:int[] android.support.v7.graphics.drawable.StateListDrawable.extractStateSet(android.util.AttributeSet):0:0 -> g
    16:16:int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    16:16:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    16:16:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    16:16:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    17:17:int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> g
    17:17:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    17:17:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    17:17:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    18:18:int android.support.v7.graphics.drawable.StateListDrawable$StateListState.addStateSet(int[],android.graphics.drawable.Drawable):0:0 -> g
    18:18:int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.addStateSet(int[],android.graphics.drawable.Drawable,int):0 -> g
    18:18:int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    18:18:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    18:18:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    18:18:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    19:19:int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.addStateSet(int[],android.graphics.drawable.Drawable,int):0:0 -> g
    19:19:int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    19:19:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    19:19:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    19:19:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    20:20:int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> g
    20:20:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    20:20:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    20:20:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    21:21:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> g
    21:21:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    21:21:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    22:22:int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> g
    22:22:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    22:22:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    22:22:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    23:23:android.support.graphics.drawable.AnimatedVectorDrawableCompat android.support.graphics.drawable.AnimatedVectorDrawableCompat.createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> g
    23:23:int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    23:23:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    23:23:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    23:23:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    24:24:void android.support.graphics.drawable.AnimatedVectorDrawableCompat.<init>(android.content.Context):0:0 -> g
    24:24:android.support.graphics.drawable.AnimatedVectorDrawableCompat android.support.graphics.drawable.AnimatedVectorDrawableCompat.createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    24:24:int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    24:24:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    24:24:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    24:24:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    25:25:android.support.graphics.drawable.AnimatedVectorDrawableCompat android.support.graphics.drawable.AnimatedVectorDrawableCompat.createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> g
    25:25:int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    25:25:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    25:25:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    25:25:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    26:26:int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> g
    26:26:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    26:26:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    26:26:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    27:27:int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.addTransition(int,int,android.graphics.drawable.Drawable,boolean):0:0 -> g
    27:27:int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    27:27:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    27:27:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    27:27:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    28:28:int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> g
    28:28:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    28:28:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    28:28:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    29:29:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.init():0:0 -> g
    29:29:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    29:29:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> g
    30:30:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> g
    1:1:int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.indexOfKeyframe(int[]):0:0 -> onStateChange
    1:1:boolean onStateChange(int[]):0 -> onStateChange
    2:2:int android.support.v7.graphics.drawable.DrawableContainer.getCurrentIndex():0:0 -> onStateChange
    2:2:boolean onStateChange(int[]):0 -> onStateChange
    3:3:boolean android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int):0:0 -> onStateChange
    3:3:boolean onStateChange(int[]):0 -> onStateChange
    4:4:int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.indexOfTransition(int,int):0:0 -> onStateChange
    4:4:boolean android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int):0 -> onStateChange
    4:4:boolean onStateChange(int[]):0 -> onStateChange
    5:5:boolean android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.transitionHasReversibleFlag(int,int):0:0 -> onStateChange
    5:5:boolean android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int):0 -> onStateChange
    5:5:boolean onStateChange(int[]):0 -> onStateChange
    6:6:boolean android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int):0:0 -> onStateChange
    6:6:boolean onStateChange(int[]):0 -> onStateChange
    7:7:android.graphics.drawable.Drawable android.support.v7.graphics.drawable.DrawableContainer.getCurrent():0:0 -> onStateChange
    7:7:boolean android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int):0 -> onStateChange
    7:7:boolean onStateChange(int[]):0 -> onStateChange
    8:8:boolean android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int):0:0 -> onStateChange
    8:8:boolean onStateChange(int[]):0 -> onStateChange
    9:9:boolean android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.isTransitionReversed(int,int):0:0 -> onStateChange
    9:9:boolean android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int):0 -> onStateChange
    9:9:boolean onStateChange(int[]):0 -> onStateChange
    10:10:boolean android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int):0:0 -> onStateChange
    10:10:boolean onStateChange(int[]):0 -> onStateChange
    11:11:boolean onStateChange(int[]):0:0 -> onStateChange
    12:12:android.graphics.drawable.Drawable android.support.v7.graphics.drawable.DrawableContainer.getCurrent():0:0 -> onStateChange
    12:12:boolean onStateChange(int[]):0 -> onStateChange
    13:13:boolean onStateChange(int[]):0:0 -> onStateChange
android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$1 -> o0.b$a:
android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition -> o0.b$b:
    android.graphics.drawable.Animatable mA -> a
    void start() -> c
    void stop() -> d
android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState -> o0.b$c:
    android.support.v4.util.SparseArrayCompat mStateIds -> L
    android.support.v4.util.LongSparseArray mTransitions -> K
    1:1:void android.support.v4.util.SparseArrayCompat.<init>():0:0 -> <init>
    1:1:void <init>(android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources):0 -> <init>
    2:2:void <init>(android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources):0:0 -> <init>
    void mutate() -> e
    long generateTransitionKey(int,int) -> h
    int getKeyframeIdAt(int) -> i
android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition -> o0.b$d:
    android.support.graphics.drawable.AnimatedVectorDrawableCompat mAvd -> a
    void start() -> c
    void stop() -> d
android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition -> o0.b$e:
    android.animation.ObjectAnimator mAnim -> a
    boolean mHasReversibleFlag -> b
    1:1:int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator.getTotalDuration():0:0 -> <init>
    1:1:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean):0 -> <init>
    2:2:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean):0:0 -> <init>
    boolean canReverse() -> a
    void reverse() -> b
    void start() -> c
    void stop() -> d
android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator -> o0.b$f:
    int[] mFrameTimes -> a
    int mFrames -> b
    int mTotalDuration -> c
    1:1:int android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator.updateFrames(android.graphics.drawable.AnimationDrawable,boolean):0:0 -> <init>
    1:1:void <init>(android.graphics.drawable.AnimationDrawable,boolean):0 -> <init>
android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$Transition -> o0.b$g:
    1:1:void android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$Transition.<init>():0:0 -> <init>
    1:1:void <init>(android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$1):0 -> <init>
    boolean canReverse() -> a
    void reverse() -> b
    void start() -> c
    void stop() -> d
android.support.v7.graphics.drawable.DrawableContainer -> o0.c:
    int $r8$clinit -> n
    android.graphics.drawable.Drawable mCurrDrawable -> d
    android.graphics.drawable.Drawable mLastDrawable -> e
    long mExitAnimationEnd -> l
    long mEnterAnimationEnd -> k
    boolean mMutated -> i
    int mCurIndex -> h
    int mAlpha -> f
    android.graphics.Rect mHotspotBounds -> c
    android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState -> b
    android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback -> m
    boolean mHasAlpha -> g
    java.lang.Runnable mAnimationRunnable -> j
    void animate(boolean) -> a
    1:1:void android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.applyTheme(android.content.res.Resources$Theme):0:0 -> applyTheme
    1:1:void applyTheme(android.content.res.Resources$Theme):0 -> applyTheme
    android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> b
    1:1:android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback.wrap(android.graphics.drawable.Drawable$Callback):0:0 -> c
    1:1:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0 -> c
    2:2:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0:0 -> c
    3:3:void android.support.v4.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> c
    3:3:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0 -> c
    4:4:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0:0 -> c
    5:5:void android.support.v4.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> c
    5:5:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0 -> c
    6:6:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0:0 -> c
    7:7:android.graphics.drawable.Drawable$Callback android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback.unwrap():0:0 -> c
    7:7:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0 -> c
    8:8:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0:0 -> c
    9:9:android.graphics.drawable.Drawable$Callback android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback.unwrap():0:0 -> c
    9:9:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0 -> c
    10:10:void initializeDrawableForDisplay(android.graphics.drawable.Drawable):0:0 -> c
    boolean selectDrawable(int) -> d
    void setConstantState(android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState) -> e
    1:1:boolean android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState():0:0 -> getConstantState
    1:1:android.graphics.drawable.Drawable$ConstantState getConstantState():0 -> getConstantState
    2:2:android.graphics.drawable.Drawable$ConstantState getConstantState():0:0 -> getConstantState
    3:3:boolean android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState():0:0 -> getConstantState
    3:3:android.graphics.drawable.Drawable$ConstantState getConstantState():0 -> getConstantState
    1:1:boolean android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.isConstantSize():0:0 -> getIntrinsicHeight
    1:1:int getIntrinsicHeight():0 -> getIntrinsicHeight
    2:2:int android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.getConstantHeight():0:0 -> getIntrinsicHeight
    2:2:int getIntrinsicHeight():0 -> getIntrinsicHeight
    3:3:int getIntrinsicHeight():0:0 -> getIntrinsicHeight
    1:1:boolean android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.isConstantSize():0:0 -> getIntrinsicWidth
    1:1:int getIntrinsicWidth():0 -> getIntrinsicWidth
    2:2:int android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.getConstantWidth():0:0 -> getIntrinsicWidth
    2:2:int getIntrinsicWidth():0 -> getIntrinsicWidth
    3:3:int getIntrinsicWidth():0:0 -> getIntrinsicWidth
    1:1:boolean android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.isConstantSize():0:0 -> getMinimumHeight
    1:1:int getMinimumHeight():0 -> getMinimumHeight
    2:2:int android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.getConstantMinimumHeight():0:0 -> getMinimumHeight
    2:2:int getMinimumHeight():0 -> getMinimumHeight
    3:3:int getMinimumHeight():0:0 -> getMinimumHeight
    1:1:boolean android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.isConstantSize():0:0 -> getMinimumWidth
    1:1:int getMinimumWidth():0 -> getMinimumWidth
    2:2:int android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.getConstantMinimumWidth():0:0 -> getMinimumWidth
    2:2:int getMinimumWidth():0 -> getMinimumWidth
    3:3:int getMinimumWidth():0:0 -> getMinimumWidth
    1:1:int android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.getOpacity():0:0 -> getOpacity
    1:1:int getOpacity():0 -> getOpacity
    1:1:android.graphics.Rect android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.getConstantPadding():0:0 -> getPadding
    1:1:boolean getPadding(android.graphics.Rect):0 -> getPadding
    2:2:boolean getPadding(android.graphics.Rect):0:0 -> getPadding
    3:3:boolean android.support.v7.graphics.drawable.DrawableContainer.isAutoMirrored():0:0 -> getPadding
    3:3:boolean android.support.v7.graphics.drawable.DrawableContainer.needsMirroring():0 -> getPadding
    3:3:boolean getPadding(android.graphics.Rect):0 -> getPadding
    4:4:boolean android.support.v7.graphics.drawable.DrawableContainer.needsMirroring():0:0 -> getPadding
    4:4:boolean getPadding(android.graphics.Rect):0 -> getPadding
    5:5:boolean getPadding(android.graphics.Rect):0:0 -> getPadding
    1:1:void android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.invalidateCache():0:0 -> invalidateDrawable
    1:1:void invalidateDrawable(android.graphics.drawable.Drawable):0 -> invalidateDrawable
    2:2:void invalidateDrawable(android.graphics.drawable.Drawable):0:0 -> invalidateDrawable
    1:1:int android.support.v7.graphics.drawable.DrawableContainer.getCurrentIndex():0:0 -> onLayoutDirectionChanged
    1:1:boolean onLayoutDirectionChanged(int):0 -> onLayoutDirectionChanged
    2:2:boolean android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.setLayoutDirection(int,int):0:0 -> onLayoutDirectionChanged
    2:2:boolean onLayoutDirectionChanged(int):0 -> onLayoutDirectionChanged
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setAutoMirrored(android.graphics.drawable.Drawable,boolean):0:0 -> setAutoMirrored
    1:1:void setAutoMirrored(boolean):0 -> setAutoMirrored
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> setHotspot
    1:1:void setHotspot(float,float):0 -> setHotspot
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int):0:0 -> setHotspotBounds
    1:1:void setHotspotBounds(int,int,int,int):0 -> setHotspotBounds
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> setTintList
    1:1:void setTintList(android.content.res.ColorStateList):0 -> setTintList
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> setTintMode
    1:1:void setTintMode(android.graphics.PorterDuff$Mode):0 -> setTintMode
android.support.v7.graphics.drawable.DrawableContainer$1 -> o0.c$a:
    android.support.v7.graphics.drawable.DrawableContainer this$0 -> b
android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback -> o0.c$b:
    android.graphics.drawable.Drawable$Callback mCallback -> b
android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState -> o0.c$c:
    boolean mCheckedConstantSize -> m
    int mConstantWidth -> n
    boolean mVariablePadding -> i
    int mNumChildren -> h
    boolean mStateful -> u
    int mChangingConfigurations -> d
    boolean mCanConstantState -> w
    android.support.v7.graphics.drawable.DrawableContainer mOwner -> a
    int mEnterFadeDuration -> A
    boolean mMutated -> y
    android.content.res.ColorStateList mTintList -> F
    boolean mHasColorFilter -> E
    android.util.SparseArray mDrawableFutures -> f
    android.content.res.Resources mSourceRes -> b
    int mOpacity -> s
    boolean mAutoMirrored -> C
    int mConstantMinimumHeight -> q
    int mConstantHeight -> o
    android.graphics.ColorFilter mColorFilter -> D
    boolean mHasTintMode -> I
    boolean mCheckedPadding -> j
    boolean mConstantSize -> l
    boolean mCheckedConstantState -> v
    int mChildrenChangingConfigurations -> e
    android.graphics.drawable.Drawable[] mDrawables -> g
    boolean mDither -> x
    int mExitFadeDuration -> B
    int mDensity -> c
    boolean mCheckedOpacity -> r
    boolean mCheckedStateful -> t
    android.graphics.Rect mConstantPadding -> k
    int mLayoutDirection -> z
    android.graphics.PorterDuff$Mode mTintMode -> G
    boolean mHasTintList -> H
    int mConstantMinimumWidth -> p
    1:1:int android.support.v7.graphics.drawable.DrawableContainer.resolveDensity(android.content.res.Resources,int):0:0 -> <init>
    1:1:void <init>(android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState,android.support.v7.graphics.drawable.DrawableContainer,android.content.res.Resources):0 -> <init>
    2:2:void <init>(android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState,android.support.v7.graphics.drawable.DrawableContainer,android.content.res.Resources):0:0 -> <init>
    1:1:void android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.growArray(int,int):0:0 -> a
    1:1:void android.support.v7.graphics.drawable.StateListDrawable$StateListState.growArray(int,int):0 -> a
    1:1:int addChild(android.graphics.drawable.Drawable):0 -> a
    2:2:void android.support.v7.graphics.drawable.StateListDrawable$StateListState.growArray(int,int):0:0 -> a
    2:2:int addChild(android.graphics.drawable.Drawable):0 -> a
    3:3:int addChild(android.graphics.drawable.Drawable):0:0 -> a
    4:4:void android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.invalidateCache():0:0 -> a
    4:4:int addChild(android.graphics.drawable.Drawable):0 -> a
    5:5:int addChild(android.graphics.drawable.Drawable):0:0 -> a
    void computeConstantSize() -> b
    1:1:android.graphics.drawable.Drawable android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable):0:0 -> c
    1:1:void createAllFutures():0 -> c
    2:2:void createAllFutures():0:0 -> c
    1:1:android.graphics.drawable.Drawable android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable):0:0 -> d
    1:1:android.graphics.drawable.Drawable getChild(int):0 -> d
    2:2:android.graphics.drawable.Drawable getChild(int):0:0 -> d
    void mutate() -> e
    1:1:int android.support.v7.graphics.drawable.DrawableContainer.resolveDensity(android.content.res.Resources,int):0:0 -> f
    1:1:void updateDensity(android.content.res.Resources):0 -> f
    2:2:void updateDensity(android.content.res.Resources):0:0 -> f
android.support.v7.graphics.drawable.DrawableWrapper -> o0.d:
    android.graphics.drawable.Drawable mDrawable -> b
    1:1:void android.support.v7.graphics.drawable.DrawableWrapper.setWrappedDrawable(android.graphics.drawable.Drawable):0:0 -> <init>
    1:1:void <init>(android.graphics.drawable.Drawable):0 -> <init>
    1:1:boolean android.support.v4.graphics.drawable.DrawableCompat.isAutoMirrored(android.graphics.drawable.Drawable):0:0 -> isAutoMirrored
    1:1:boolean isAutoMirrored():0 -> isAutoMirrored
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.jumpToCurrentState(android.graphics.drawable.Drawable):0:0 -> jumpToCurrentState
    1:1:void jumpToCurrentState():0 -> jumpToCurrentState
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setAutoMirrored(android.graphics.drawable.Drawable,boolean):0:0 -> setAutoMirrored
    1:1:void setAutoMirrored(boolean):0 -> setAutoMirrored
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> setHotspot
    1:1:void setHotspot(float,float):0 -> setHotspot
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int):0:0 -> setHotspotBounds
    1:1:void setHotspotBounds(int,int,int,int):0 -> setHotspotBounds
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setTint(android.graphics.drawable.Drawable,int):0:0 -> setTint
    1:1:void setTint(int):0 -> setTint
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> setTintList
    1:1:void setTintList(android.content.res.ColorStateList):0 -> setTintList
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> setTintMode
    1:1:void setTintMode(android.graphics.PorterDuff$Mode):0 -> setTintMode
android.support.v7.graphics.drawable.StateListDrawable -> o0.e:
    android.support.v7.graphics.drawable.StateListDrawable$StateListState mStateListState -> o
    boolean mMutated -> p
    android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> b
    1:1:void android.support.v7.graphics.drawable.DrawableContainer.setConstantState(android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState):0:0 -> e
    1:1:void setConstantState(android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState):0 -> e
    2:2:void setConstantState(android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState):0:0 -> e
    android.support.v7.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> f
android.support.v7.graphics.drawable.StateListDrawable$StateListState -> o0.e$a:
    int[][] mStateSets -> J
    1:1:int android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.getCapacity():0:0 -> <init>
    1:1:void <init>(android.support.v7.graphics.drawable.StateListDrawable$StateListState,android.support.v7.graphics.drawable.StateListDrawable,android.content.res.Resources):0 -> <init>
    2:2:void <init>(android.support.v7.graphics.drawable.StateListDrawable$StateListState,android.support.v7.graphics.drawable.StateListDrawable,android.content.res.Resources):0:0 -> <init>
    void mutate() -> e
    1:1:int android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState.getChildCount():0:0 -> g
    1:1:int indexOfStateSet(int[]):0 -> g
    2:2:int indexOfStateSet(int[]):0:0 -> g
android.support.v7.recyclerview.R$styleable -> p0.a:
    int[] RecyclerView -> a
android.support.v7.view.ActionMode -> q0.a:
    java.lang.Object mTag -> b
    boolean mTitleOptionalHint -> c
    void finish() -> c
    android.view.View getCustomView() -> d
    android.view.Menu getMenu() -> e
    android.view.MenuInflater getMenuInflater() -> f
    java.lang.CharSequence getSubtitle() -> g
    java.lang.CharSequence getTitle() -> h
    void invalidate() -> i
    boolean isTitleOptional() -> j
    void setCustomView(android.view.View) -> k
    void setSubtitle(int) -> l
    void setSubtitle(java.lang.CharSequence) -> m
    void setTitle(int) -> n
    void setTitle(java.lang.CharSequence) -> o
    void setTitleOptionalHint(boolean) -> p
android.support.v7.view.ActionMode$Callback -> q0.a$a:
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> a
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> b
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> c
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> d
android.support.v7.view.CollapsibleActionView -> q0.b:
    void onActionViewExpanded() -> a
    void onActionViewCollapsed() -> e
android.support.v7.view.ContextThemeWrapper -> q0.c:
    android.content.res.Resources mResources -> d
    android.content.res.Resources$Theme mTheme -> b
    android.view.LayoutInflater mInflater -> c
    int mThemeResource -> a
    1:1:void android.support.v7.view.ContextThemeWrapper.onApplyThemeResource(android.content.res.Resources$Theme,int,boolean):0:0 -> a
    1:1:void initializeTheme():0 -> a
    1:1:android.content.res.Resources android.support.v7.view.ContextThemeWrapper.getResourcesInternal():0:0 -> getResources
    1:1:android.content.res.Resources getResources():0 -> getResources
android.support.v7.view.StandaloneActionMode -> q0.d:
    android.support.v7.widget.ActionBarContextView mContextView -> e
    java.lang.ref.WeakReference mCustomView -> g
    android.support.v7.view.ActionMode$Callback mCallback -> f
    boolean mFinished -> h
    android.support.v7.view.menu.MenuBuilder mMenu -> i
    android.content.Context mContext -> d
    1:1:android.support.v7.view.menu.MenuBuilder android.support.v7.view.menu.MenuBuilder.setDefaultShowAsAction(int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.support.v7.widget.ActionBarContextView,android.support.v7.view.ActionMode$Callback,boolean):0 -> <init>
    2:2:void <init>(android.content.Context,android.support.v7.widget.ActionBarContextView,android.support.v7.view.ActionMode$Callback,boolean):0:0 -> <init>
    3:3:void android.support.v7.view.menu.MenuBuilder.setCallback(android.support.v7.view.menu.MenuBuilder$Callback):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.support.v7.widget.ActionBarContextView,android.support.v7.view.ActionMode$Callback,boolean):0 -> <init>
    1:1:boolean android.support.v7.widget.ActionBarContextView.showOverflowMenu():0:0 -> a
    1:1:void onMenuModeChange(android.support.v7.view.menu.MenuBuilder):0 -> a
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> b
    void finish() -> c
    android.view.View getCustomView() -> d
    android.view.Menu getMenu() -> e
    android.view.MenuInflater getMenuInflater() -> f
    java.lang.CharSequence getSubtitle() -> g
    java.lang.CharSequence getTitle() -> h
    void invalidate() -> i
    1:1:boolean android.support.v7.widget.ActionBarContextView.isTitleOptional():0:0 -> j
    1:1:boolean isTitleOptional():0 -> j
    void setCustomView(android.view.View) -> k
    1:1:void android.support.v7.view.StandaloneActionMode.setSubtitle(java.lang.CharSequence):0:0 -> l
    1:1:void setSubtitle(int):0 -> l
    void setSubtitle(java.lang.CharSequence) -> m
    1:1:void android.support.v7.view.StandaloneActionMode.setTitle(java.lang.CharSequence):0:0 -> n
    1:1:void setTitle(int):0 -> n
    void setTitle(java.lang.CharSequence) -> o
    1:1:void android.support.v7.view.ActionMode.setTitleOptionalHint(boolean):0:0 -> p
    1:1:void setTitleOptionalHint(boolean):0 -> p
    2:2:void setTitleOptionalHint(boolean):0:0 -> p
android.support.v7.view.SupportActionModeWrapper -> q0.e:
    android.content.Context mContext -> a
    android.support.v7.view.ActionMode mWrappedObject -> b
    1:1:android.view.Menu android.support.v7.view.menu.MenuWrapperFactory.wrapSupportMenu(android.content.Context,android.support.v4.internal.view.SupportMenu):0:0 -> getMenu
    1:1:android.view.Menu getMenu():0 -> getMenu
    1:1:java.lang.Object android.support.v7.view.ActionMode.getTag():0:0 -> getTag
    1:1:java.lang.Object getTag():0 -> getTag
    1:1:boolean android.support.v7.view.ActionMode.getTitleOptionalHint():0:0 -> getTitleOptionalHint
    1:1:boolean getTitleOptionalHint():0 -> getTitleOptionalHint
    1:1:void android.support.v7.view.ActionMode.setTag(java.lang.Object):0:0 -> setTag
    1:1:void setTag(java.lang.Object):0 -> setTag
android.support.v7.view.SupportActionModeWrapper$CallbackWrapper -> q0.e$a:
    android.content.Context mContext -> b
    android.support.v4.util.SimpleArrayMap mMenus -> d
    android.view.ActionMode$Callback mWrappedCallback -> a
    java.util.ArrayList mActionModes -> c
    1:1:android.view.MenuItem android.support.v7.view.menu.MenuWrapperFactory.wrapSupportMenuItem(android.content.Context,android.support.v4.internal.view.SupportMenuItem):0:0 -> a
    1:1:boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem):0 -> a
    2:2:boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem):0:0 -> a
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> b
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> c
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> d
    android.view.ActionMode getActionModeWrapper(android.support.v7.view.ActionMode) -> e
    1:1:android.view.Menu android.support.v7.view.menu.MenuWrapperFactory.wrapSupportMenu(android.content.Context,android.support.v4.internal.view.SupportMenu):0:0 -> f
    1:1:android.view.Menu getMenuWrapper(android.view.Menu):0 -> f
    2:2:android.view.Menu getMenuWrapper(android.view.Menu):0:0 -> f
android.support.v7.view.SupportMenuInflater -> q0.f:
    java.lang.Object[] mActionProviderConstructorArguments -> b
    android.content.Context mContext -> c
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> e
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> f
    java.lang.Object[] mActionViewConstructorArguments -> a
    java.lang.Object mRealOwner -> d
    java.lang.Object findRealOwner(java.lang.Object) -> a
    1:1:void android.support.v7.view.SupportMenuInflater$MenuState.resetGroup():0:0 -> b
    1:1:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    2:2:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> b
    3:3:boolean android.support.v7.view.SupportMenuInflater$MenuState.hasAddedItem():0:0 -> b
    3:3:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    4:4:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> b
    5:5:void android.support.v7.view.SupportMenuInflater$MenuState.addItem():0:0 -> b
    5:5:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    6:6:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> b
    7:7:void android.support.v7.view.SupportMenuInflater$MenuState.readGroup(android.util.AttributeSet):0:0 -> b
    7:7:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    8:8:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> b
    9:9:void android.support.v7.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0:0 -> b
    9:9:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    10:10:char android.support.v7.view.SupportMenuInflater$MenuState.getShortcut(java.lang.String):0:0 -> b
    10:10:void android.support.v7.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0 -> b
    10:10:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    11:11:void android.support.v7.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0:0 -> b
    11:11:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    12:12:char android.support.v7.view.SupportMenuInflater$MenuState.getShortcut(java.lang.String):0:0 -> b
    12:12:void android.support.v7.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0 -> b
    12:12:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    13:13:void android.support.v7.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0:0 -> b
    13:13:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    14:14:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> b
android.support.v7.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> q0.f$a:
    java.lang.Class[] PARAM_TYPES -> c
    java.lang.Object mRealOwner -> a
    java.lang.reflect.Method mMethod -> b
android.support.v7.view.SupportMenuInflater$MenuState -> q0.f$b:
    int itemCategoryOrder -> j
    java.lang.CharSequence itemContentDescription -> A
    char itemAlphabeticShortcut -> n
    char itemNumericShortcut -> p
    boolean itemEnabled -> u
    int groupOrder -> d
    int groupId -> b
    boolean itemChecked -> s
    java.lang.String itemActionViewClassName -> x
    android.view.Menu menu -> a
    boolean groupVisible -> f
    int itemActionViewLayout -> w
    boolean itemAdded -> h
    android.support.v4.view.ActionProvider itemActionProvider -> z
    int itemNumericModifiers -> q
    int itemAlphabeticModifiers -> o
    int itemIconResId -> m
    java.lang.CharSequence itemTooltipText -> B
    android.support.v7.view.SupportMenuInflater this$0 -> E
    int itemId -> i
    android.graphics.PorterDuff$Mode itemIconTintMode -> D
    int groupCheckable -> e
    int groupCategory -> c
    java.lang.CharSequence itemTitle -> k
    boolean itemVisible -> t
    java.lang.CharSequence itemTitleCondensed -> l
    java.lang.String itemListenerMethodName -> y
    android.content.res.ColorStateList itemIconTintList -> C
    int itemShowAsAction -> v
    boolean groupEnabled -> g
    int itemCheckable -> r
    1:1:void android.support.v7.view.SupportMenuInflater$MenuState.resetGroup():0:0 -> <init>
    1:1:void <init>(android.support.v7.view.SupportMenuInflater,android.view.Menu):0 -> <init>
    android.view.SubMenu addSubMenuItem() -> a
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> b
    1:1:java.lang.Object android.support.v7.view.SupportMenuInflater.getRealOwner():0:0 -> c
    1:1:void setItem(android.view.MenuItem):0 -> c
    2:2:void setItem(android.view.MenuItem):0:0 -> c
    3:3:void android.support.v7.view.menu.MenuItemImpl.setExclusiveCheckable(boolean):0:0 -> c
    3:3:void setItem(android.view.MenuItem):0 -> c
    4:4:void setItem(android.view.MenuItem):0:0 -> c
    5:5:void android.support.v7.view.menu.MenuItemWrapperICS.setExclusiveCheckable(boolean):0:0 -> c
    5:5:void setItem(android.view.MenuItem):0 -> c
    6:6:void setItem(android.view.MenuItem):0:0 -> c
    7:7:android.view.MenuItem android.support.v4.view.MenuItemCompat.setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider):0:0 -> c
    7:7:void setItem(android.view.MenuItem):0 -> c
    8:8:void setItem(android.view.MenuItem):0:0 -> c
    9:9:void android.support.v4.view.MenuItemCompat.setContentDescription(android.view.MenuItem,java.lang.CharSequence):0:0 -> c
    9:9:void setItem(android.view.MenuItem):0 -> c
    10:10:void setItem(android.view.MenuItem):0:0 -> c
    11:11:void android.support.v4.view.MenuItemCompat.setTooltipText(android.view.MenuItem,java.lang.CharSequence):0:0 -> c
    11:11:void setItem(android.view.MenuItem):0 -> c
    12:12:void setItem(android.view.MenuItem):0:0 -> c
    13:13:void android.support.v4.view.MenuItemCompat.setAlphabeticShortcut(android.view.MenuItem,char,int):0:0 -> c
    13:13:void setItem(android.view.MenuItem):0 -> c
    14:14:void setItem(android.view.MenuItem):0:0 -> c
    15:15:void android.support.v4.view.MenuItemCompat.setNumericShortcut(android.view.MenuItem,char,int):0:0 -> c
    15:15:void setItem(android.view.MenuItem):0 -> c
    16:16:void setItem(android.view.MenuItem):0:0 -> c
    17:17:void android.support.v4.view.MenuItemCompat.setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode):0:0 -> c
    17:17:void setItem(android.view.MenuItem):0 -> c
    18:18:void setItem(android.view.MenuItem):0:0 -> c
    19:19:void android.support.v4.view.MenuItemCompat.setIconTintList(android.view.MenuItem,android.content.res.ColorStateList):0:0 -> c
    19:19:void setItem(android.view.MenuItem):0 -> c
android.support.v7.view.ViewPropertyAnimatorCompatSet -> q0.g:
    android.view.animation.Interpolator mInterpolator -> c
    android.support.v4.view.ViewPropertyAnimatorListenerAdapter mProxyListener -> f
    long mDuration -> b
    boolean mIsStarted -> e
    android.support.v4.view.ViewPropertyAnimatorListener mListener -> d
    java.util.ArrayList mAnimators -> a
    void cancel() -> a
    1:1:android.support.v4.view.ViewPropertyAnimatorCompat android.support.v4.view.ViewPropertyAnimatorCompat.setInterpolator(android.view.animation.Interpolator):0:0 -> b
    1:1:void start():0 -> b
    2:2:void start():0:0 -> b
    3:3:void android.support.v4.view.ViewPropertyAnimatorCompat.start():0:0 -> b
    3:3:void start():0 -> b
    4:4:void start():0:0 -> b
android.support.v7.view.ViewPropertyAnimatorCompatSet$1 -> q0.g$a:
    boolean mProxyStarted -> a
    int mProxyEndCount -> b
    android.support.v7.view.ViewPropertyAnimatorCompatSet this$0 -> c
    1:1:void android.support.v7.view.ViewPropertyAnimatorCompatSet$1.onEnd():0:0 -> a
    1:1:void onAnimationEnd(android.view.View):0 -> a
    2:2:void android.support.v7.view.ViewPropertyAnimatorCompatSet.onAnimationsEnded():0:0 -> a
    2:2:void android.support.v7.view.ViewPropertyAnimatorCompatSet$1.onEnd():0 -> a
    2:2:void onAnimationEnd(android.view.View):0 -> a
    void onAnimationStart(android.view.View) -> b
android.support.v7.view.WindowCallbackWrapper -> q0.h:
    android.view.Window$Callback mWrapped -> b
android.support.v7.view.menu.ActionMenuItem -> r0.a:
    boolean mHasIconTint -> n
    boolean mHasIconTintMode -> o
    java.lang.CharSequence mTitle -> a
    android.graphics.drawable.Drawable mIconDrawable -> h
    java.lang.CharSequence mTitleCondensed -> b
    android.content.Context mContext -> i
    int mShortcutAlphabeticModifiers -> g
    int mShortcutNumericModifiers -> e
    java.lang.CharSequence mContentDescription -> j
    java.lang.CharSequence mTooltipText -> k
    android.content.Intent mIntent -> c
    char mShortcutNumericChar -> d
    android.content.res.ColorStateList mIconTintList -> l
    android.graphics.PorterDuff$Mode mIconTintMode -> m
    char mShortcutAlphabeticChar -> f
    int mFlags -> p
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> a
    1:1:void applyIconTint():0 -> a
    2:2:void applyIconTint():0:0 -> a
    3:3:void android.support.v4.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> a
    3:3:void applyIconTint():0 -> a
    android.support.v4.view.ActionProvider getSupportActionProvider() -> b
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> c
    1:1:android.support.v4.internal.view.SupportMenuItem android.support.v7.view.menu.ActionMenuItem.setActionView(int):0:0 -> setActionView
    1:1:android.view.MenuItem setActionView(int):0 -> setActionView
    2:2:android.support.v4.internal.view.SupportMenuItem android.support.v7.view.menu.ActionMenuItem.setActionView(android.view.View):0:0 -> setActionView
    2:2:android.view.MenuItem setActionView(android.view.View):0 -> setActionView
    1:1:android.support.v4.internal.view.SupportMenuItem android.support.v7.view.menu.ActionMenuItem.setContentDescription(java.lang.CharSequence):0:0 -> setContentDescription
    1:1:android.view.MenuItem setContentDescription(java.lang.CharSequence):0 -> setContentDescription
    1:1:android.graphics.drawable.Drawable android.support.v4.content.ContextCompat.getDrawable(android.content.Context,int):0:0 -> setIcon
    1:1:android.view.MenuItem setIcon(int):0 -> setIcon
    2:2:android.view.MenuItem setIcon(int):0:0 -> setIcon
    1:1:android.support.v4.internal.view.SupportMenuItem android.support.v7.view.menu.ActionMenuItem.setTooltipText(java.lang.CharSequence):0:0 -> setTooltipText
    1:1:android.view.MenuItem setTooltipText(java.lang.CharSequence):0 -> setTooltipText
android.support.v7.view.menu.ActionMenuItemView -> android.support.v7.view.menu.ActionMenuItemView:
    int mSavedPaddingLeft -> n
    int mMaxIconSize -> o
    android.support.v7.view.menu.MenuItemImpl mItemData -> e
    int mMinWidth -> m
    android.graphics.drawable.Drawable mIcon -> g
    boolean mAllowTextWithIcon -> k
    boolean mExpandedFormat -> l
    android.support.v7.view.menu.ActionMenuItemView$PopupCallback mPopupCallback -> j
    java.lang.CharSequence mTitle -> f
    android.support.v7.widget.ForwardingListener mForwardingListener -> i
    android.support.v7.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> h
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    boolean needsDividerBefore() -> a
    boolean needsDividerAfter() -> b
    boolean hasText() -> c
    1:1:java.lang.CharSequence android.support.v7.view.menu.MenuItemImpl.getTitleForItemView(android.support.v7.view.menu.MenuView$ItemView):0:0 -> d
    1:1:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0 -> d
    2:2:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0:0 -> d
    3:3:int android.support.v7.view.menu.MenuItemImpl.getItemId():0:0 -> d
    3:3:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0 -> d
    4:4:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0:0 -> d
    boolean shouldAllowTextWithIcon() -> e
    1:1:boolean android.support.v7.view.menu.MenuItemImpl.showsTextAsAction():0:0 -> f
    1:1:void updateTextButtonVisibility():0 -> f
    2:2:void updateTextButtonVisibility():0:0 -> f
    3:3:java.lang.CharSequence android.support.v7.view.menu.MenuItemImpl.getContentDescription():0:0 -> f
    3:3:void updateTextButtonVisibility():0 -> f
    4:4:void updateTextButtonVisibility():0:0 -> f
    5:5:java.lang.CharSequence android.support.v7.view.menu.MenuItemImpl.getTitle():0:0 -> f
    5:5:void updateTextButtonVisibility():0 -> f
    6:6:void updateTextButtonVisibility():0:0 -> f
    7:7:java.lang.CharSequence android.support.v7.view.menu.MenuItemImpl.getTooltipText():0:0 -> f
    7:7:void updateTextButtonVisibility():0 -> f
    8:8:void updateTextButtonVisibility():0:0 -> f
    9:9:java.lang.CharSequence android.support.v7.view.menu.MenuItemImpl.getTitle():0:0 -> f
    9:9:void updateTextButtonVisibility():0 -> f
    10:10:void updateTextButtonVisibility():0:0 -> f
    1:1:void android.support.v7.view.menu.MenuItemImpl.actionFormatChanged():0:0 -> setExpandedFormat
    1:1:void setExpandedFormat(boolean):0 -> setExpandedFormat
    2:2:void android.support.v7.view.menu.MenuBuilder.onItemActionRequestChanged(android.support.v7.view.menu.MenuItemImpl):0:0 -> setExpandedFormat
    2:2:void android.support.v7.view.menu.MenuItemImpl.actionFormatChanged():0 -> setExpandedFormat
    2:2:void setExpandedFormat(boolean):0 -> setExpandedFormat
android.support.v7.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> android.support.v7.view.menu.ActionMenuItemView$a:
    android.support.v7.view.menu.ActionMenuItemView this$0 -> k
    1:1:android.support.v7.view.menu.ShowableListMenu android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback.getPopup():0:0 -> b
    1:1:android.support.v7.view.menu.ShowableListMenu getPopup():0 -> b
    boolean onForwardingStarted() -> c
android.support.v7.view.menu.ActionMenuItemView$PopupCallback -> android.support.v7.view.menu.ActionMenuItemView$b:
android.support.v7.view.menu.BaseMenuPresenter -> android.support.v7.view.menu.a:
    android.support.v7.view.menu.MenuBuilder mMenu -> d
    android.support.v7.view.menu.MenuPresenter$Callback mCallback -> f
    android.content.Context mContext -> c
    android.content.Context mSystemContext -> b
    android.view.LayoutInflater mSystemInflater -> e
    int mItemLayoutRes -> h
    int mMenuLayoutRes -> g
    android.support.v7.view.menu.MenuView mMenuView -> i
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> e
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> h
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> j
android.support.v7.view.menu.BaseMenuWrapper -> r0.b:
    android.content.Context mContext -> c
    java.util.Map mMenuItems -> d
    java.util.Map mSubMenus -> e
    1:1:android.view.MenuItem android.support.v7.view.menu.MenuWrapperFactory.wrapSupportMenuItem(android.content.Context,android.support.v4.internal.view.SupportMenuItem):0:0 -> h
    1:1:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem):0 -> h
    2:2:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem):0:0 -> h
    1:1:android.view.SubMenu android.support.v7.view.menu.MenuWrapperFactory.wrapSupportSubMenu(android.content.Context,android.support.v4.internal.view.SupportSubMenu):0:0 -> i
    1:1:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu):0 -> i
    2:2:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu):0:0 -> i
android.support.v7.view.menu.CascadingMenuPopup -> android.support.v7.view.menu.b:
    int mRawDropDownGravity -> n
    android.content.Context mContext -> c
    android.support.v7.view.menu.MenuPresenter$Callback mPresenterCallback -> y
    int mPopupStyleRes -> f
    android.view.View mAnchorView -> p
    int mMenuMaxWidth -> d
    boolean mForceShowIcon -> w
    boolean mHasXOffset -> s
    android.view.View$OnAttachStateChangeListener mAttachStateChangeListener -> l
    java.util.List mShowingMenus -> j
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> k
    int mXOffset -> u
    int mDropDownGravity -> o
    android.view.View mShownAnchorView -> q
    int mPopupStyleAttr -> e
    boolean mShowTitle -> x
    android.support.v7.widget.MenuItemHoverListener mMenuItemHoverListener -> m
    boolean mHasYOffset -> t
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> A
    android.view.ViewTreeObserver mTreeObserver -> z
    int mYOffset -> v
    java.util.List mPendingMenus -> i
    boolean mOverflowOnly -> g
    int mLastPosition -> r
    boolean mShouldCloseImmediately -> B
    android.os.Handler mSubMenuHoverHandler -> h
    1:1:int getInitialMenuPosition():0:0 -> <init>
    1:1:void <init>(android.content.Context,android.view.View,int,int,boolean):0 -> <init>
    2:2:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> <init>
    2:2:int getInitialMenuPosition():0 -> <init>
    2:2:void <init>(android.content.Context,android.view.View,int,int,boolean):0 -> <init>
    3:3:void <init>(android.content.Context,android.view.View,int,int,boolean):0:0 -> <init>
    1:1:int findIndexOfAddedMenu(android.support.v7.view.menu.MenuBuilder):0:0 -> a
    1:1:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean):0 -> a
    2:2:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean):0:0 -> a
    3:3:void android.support.v7.widget.MenuPopupWindow.setExitTransition(java.lang.Object):0:0 -> a
    3:3:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean):0 -> a
    4:4:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean):0:0 -> a
    5:5:void android.support.v7.widget.ListPopupWindow.setAnimationStyle(int):0:0 -> a
    5:5:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean):0 -> a
    6:6:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean):0:0 -> a
    7:7:int getInitialMenuPosition():0:0 -> a
    7:7:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean):0 -> a
    8:8:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> a
    8:8:int getInitialMenuPosition():0 -> a
    8:8:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean):0 -> a
    9:9:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean):0:0 -> a
    1:1:android.widget.ListView android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0:0 -> b
    1:1:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    2:2:android.widget.ListView android.support.v7.widget.ListPopupWindow.getListView():0:0 -> b
    2:2:android.widget.ListView android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> b
    2:2:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    3:3:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0:0 -> b
    4:4:void addMenu(android.support.v7.view.menu.MenuBuilder):0:0 -> b
    4:4:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    5:5:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0:0 -> b
    boolean isShowing() -> c
    1:1:android.widget.ListView android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0:0 -> d
    1:1:android.widget.ListView getListView():0 -> d
    2:2:android.widget.ListView android.support.v7.widget.ListPopupWindow.getListView():0:0 -> d
    2:2:android.widget.ListView android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> d
    2:2:android.widget.ListView getListView():0 -> d
    void show() -> f
    boolean flagActionItems() -> g
    1:1:android.widget.ListView android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0:0 -> i
    1:1:void updateMenuView(boolean):0 -> i
    2:2:android.widget.ListView android.support.v7.widget.ListPopupWindow.getListView():0:0 -> i
    2:2:android.widget.ListView android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> i
    2:2:void updateMenuView(boolean):0 -> i
    3:3:void updateMenuView(boolean):0:0 -> i
    4:4:android.support.v7.view.menu.MenuAdapter android.support.v7.view.menu.MenuPopup.toMenuAdapter(android.widget.ListAdapter):0:0 -> i
    4:4:void updateMenuView(boolean):0 -> i
    5:5:void updateMenuView(boolean):0:0 -> i
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> j
    void addMenu(android.support.v7.view.menu.MenuBuilder) -> l
    1:1:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> n
    1:1:void setAnchorView(android.view.View):0 -> n
    2:2:int android.support.v4.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> n
    2:2:void setAnchorView(android.view.View):0 -> n
    3:3:void setAnchorView(android.view.View):0:0 -> n
    void setForceShowIcon(boolean) -> o
    1:1:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> p
    1:1:void setGravity(int):0 -> p
    2:2:int android.support.v4.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> p
    2:2:void setGravity(int):0 -> p
    3:3:void setGravity(int):0:0 -> p
    void setHorizontalOffset(int) -> q
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> r
    void setShowTitle(boolean) -> s
    void setVerticalOffset(int) -> t
    1:1:void android.support.v7.view.menu.MenuAdapter.setForceShowIcon(boolean):0:0 -> v
    1:1:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    2:2:void showMenu(android.support.v7.view.menu.MenuBuilder):0:0 -> v
    3:3:void android.support.v7.view.menu.MenuAdapter.setForceShowIcon(boolean):0:0 -> v
    3:3:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    4:4:void showMenu(android.support.v7.view.menu.MenuBuilder):0:0 -> v
    5:5:android.support.v7.widget.MenuPopupWindow createPopupWindow():0:0 -> v
    5:5:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    6:6:void android.support.v7.widget.MenuPopupWindow.setHoverListener(android.support.v7.widget.MenuItemHoverListener):0:0 -> v
    6:6:android.support.v7.widget.MenuPopupWindow createPopupWindow():0 -> v
    6:6:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    7:7:void android.support.v7.widget.ListPopupWindow.setOnItemClickListener(android.widget.AdapterView$OnItemClickListener):0:0 -> v
    7:7:android.support.v7.widget.MenuPopupWindow createPopupWindow():0 -> v
    7:7:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    8:8:void android.support.v7.widget.ListPopupWindow.setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> v
    8:8:android.support.v7.widget.MenuPopupWindow createPopupWindow():0 -> v
    8:8:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    9:9:android.support.v7.widget.MenuPopupWindow createPopupWindow():0:0 -> v
    9:9:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    10:10:void android.support.v7.widget.ListPopupWindow.setAnchorView(android.view.View):0:0 -> v
    10:10:android.support.v7.widget.MenuPopupWindow createPopupWindow():0 -> v
    10:10:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    11:11:android.support.v7.widget.MenuPopupWindow createPopupWindow():0:0 -> v
    11:11:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    12:12:void android.support.v7.widget.ListPopupWindow.setDropDownGravity(int):0:0 -> v
    12:12:android.support.v7.widget.MenuPopupWindow createPopupWindow():0 -> v
    12:12:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    13:13:android.support.v7.widget.MenuPopupWindow createPopupWindow():0:0 -> v
    13:13:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    14:14:void android.support.v7.widget.ListPopupWindow.setInputMethodMode(int):0:0 -> v
    14:14:android.support.v7.widget.MenuPopupWindow createPopupWindow():0 -> v
    14:14:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    15:15:void showMenu(android.support.v7.view.menu.MenuBuilder):0:0 -> v
    16:16:void android.support.v7.widget.ListPopupWindow.setDropDownGravity(int):0:0 -> v
    16:16:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    17:17:void showMenu(android.support.v7.view.menu.MenuBuilder):0:0 -> v
    18:18:android.view.View findParentViewForSubmenu(android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.support.v7.view.menu.MenuBuilder):0:0 -> v
    18:18:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    19:19:android.view.MenuItem findMenuItemForSubmenu(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuBuilder):0:0 -> v
    19:19:android.view.View findParentViewForSubmenu(android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.support.v7.view.menu.MenuBuilder):0 -> v
    19:19:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    20:20:android.widget.ListView android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0:0 -> v
    20:20:android.view.View findParentViewForSubmenu(android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.support.v7.view.menu.MenuBuilder):0 -> v
    20:20:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    21:21:android.widget.ListView android.support.v7.widget.ListPopupWindow.getListView():0:0 -> v
    21:21:android.widget.ListView android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> v
    21:21:android.view.View findParentViewForSubmenu(android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.support.v7.view.menu.MenuBuilder):0 -> v
    21:21:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    22:22:android.view.View findParentViewForSubmenu(android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.support.v7.view.menu.MenuBuilder):0:0 -> v
    22:22:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    23:23:void android.support.v7.widget.MenuPopupWindow.setTouchModal(boolean):0:0 -> v
    23:23:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    24:24:void android.support.v7.widget.MenuPopupWindow.setEnterTransition(java.lang.Object):0:0 -> v
    24:24:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    25:25:int getNextMenuPosition(int):0:0 -> v
    25:25:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    26:26:android.widget.ListView android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0:0 -> v
    26:26:int getNextMenuPosition(int):0 -> v
    26:26:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    27:27:android.widget.ListView android.support.v7.widget.ListPopupWindow.getListView():0:0 -> v
    27:27:android.widget.ListView android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> v
    27:27:int getNextMenuPosition(int):0 -> v
    27:27:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    28:28:int getNextMenuPosition(int):0:0 -> v
    28:28:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    29:29:void showMenu(android.support.v7.view.menu.MenuBuilder):0:0 -> v
    30:30:void android.support.v7.widget.ListPopupWindow.setAnchorView(android.view.View):0:0 -> v
    30:30:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    31:31:void showMenu(android.support.v7.view.menu.MenuBuilder):0:0 -> v
    32:32:void android.support.v7.widget.ListPopupWindow.setHorizontalOffset(int):0:0 -> v
    32:32:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    33:33:void android.support.v7.widget.ListPopupWindow.setOverlapAnchor(boolean):0:0 -> v
    33:33:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    34:34:void showMenu(android.support.v7.view.menu.MenuBuilder):0:0 -> v
    35:35:void android.support.v7.widget.ListPopupWindow.setHorizontalOffset(int):0:0 -> v
    35:35:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    36:36:void showMenu(android.support.v7.view.menu.MenuBuilder):0:0 -> v
    37:37:android.graphics.Rect android.support.v7.view.menu.MenuPopup.getEpicenterBounds():0:0 -> v
    37:37:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    38:38:void android.support.v7.widget.ListPopupWindow.setEpicenterBounds(android.graphics.Rect):0:0 -> v
    38:38:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    39:39:void showMenu(android.support.v7.view.menu.MenuBuilder):0:0 -> v
    40:40:android.widget.ListView android.support.v7.widget.ListPopupWindow.getListView():0:0 -> v
    40:40:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    41:41:void showMenu(android.support.v7.view.menu.MenuBuilder):0:0 -> v
    42:42:java.lang.CharSequence android.support.v7.view.menu.MenuBuilder.getHeaderTitle():0:0 -> v
    42:42:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    43:43:void showMenu(android.support.v7.view.menu.MenuBuilder):0:0 -> v
    44:44:java.lang.CharSequence android.support.v7.view.menu.MenuBuilder.getHeaderTitle():0:0 -> v
    44:44:void showMenu(android.support.v7.view.menu.MenuBuilder):0 -> v
    45:45:void showMenu(android.support.v7.view.menu.MenuBuilder):0:0 -> v
android.support.v7.view.menu.CascadingMenuPopup$1 -> android.support.v7.view.menu.b$a:
    android.support.v7.view.menu.CascadingMenuPopup this$0 -> b
    1:1:boolean android.support.v7.widget.ListPopupWindow.isModal():0:0 -> onGlobalLayout
    1:1:void onGlobalLayout():0 -> onGlobalLayout
    2:2:void onGlobalLayout():0:0 -> onGlobalLayout
android.support.v7.view.menu.CascadingMenuPopup$2 -> android.support.v7.view.menu.b$b:
    android.support.v7.view.menu.CascadingMenuPopup this$0 -> b
android.support.v7.view.menu.CascadingMenuPopup$3 -> android.support.v7.view.menu.b$c:
    android.support.v7.view.menu.CascadingMenuPopup this$0 -> b
    void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onItemHoverExit(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> b
android.support.v7.view.menu.CascadingMenuPopup$3$1 -> android.support.v7.view.menu.b$c$a:
    android.support.v7.view.menu.MenuBuilder val$menu -> d
    android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo val$nextInfo -> b
    android.view.MenuItem val$item -> c
    android.support.v7.view.menu.CascadingMenuPopup$3 this$1 -> e
android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo -> android.support.v7.view.menu.b$d:
    android.support.v7.widget.MenuPopupWindow window -> a
    android.support.v7.view.menu.MenuBuilder menu -> b
    int position -> c
android.support.v7.view.menu.ExpandedMenuView -> android.support.v7.view.menu.ExpandedMenuView:
    int[] TINT_ATTRS -> c
    android.support.v7.view.menu.MenuBuilder mMenu -> b
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:android.support.v7.widget.TintTypedArray android.support.v7.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:boolean android.support.v7.widget.TintTypedArray.hasValue(int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    4:4:android.graphics.drawable.Drawable android.support.v7.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    6:6:boolean android.support.v7.widget.TintTypedArray.hasValue(int):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    7:7:android.graphics.drawable.Drawable android.support.v7.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    9:9:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    void initialize(android.support.v7.view.menu.MenuBuilder) -> b
    1:1:boolean android.support.v7.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int):0:0 -> c
    1:1:boolean invokeItem(android.support.v7.view.menu.MenuItemImpl):0 -> c
android.support.v7.view.menu.ListMenuItemView -> android.support.v7.view.menu.ListMenuItemView:
    boolean mPreserveIconSpacing -> n
    int mTextAppearance -> l
    boolean mHasListDivider -> p
    android.support.v7.view.menu.MenuItemImpl mItemData -> b
    android.widget.LinearLayout mContent -> j
    boolean mForceShowIcon -> r
    android.widget.ImageView mIconView -> c
    android.widget.ImageView mSubMenuArrowView -> h
    android.widget.ImageView mGroupDivider -> i
    android.widget.CheckBox mCheckBox -> f
    android.widget.RadioButton mRadioButton -> d
    android.content.Context mTextAppearanceContext -> m
    android.widget.TextView mTitleView -> e
    android.view.LayoutInflater mInflater -> q
    android.widget.TextView mShortcutView -> g
    android.graphics.drawable.Drawable mBackground -> k
    android.graphics.drawable.Drawable mSubMenuArrow -> o
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:void addContentView(android.view.View,int):0:0 -> a
    1:1:void addContentView(android.view.View):0 -> a
    1:1:void insertCheckBox():0 -> a
    1:1:void addContentView(android.view.View,int):0:0 -> b
    1:1:void addContentView(android.view.View):0 -> b
    1:1:void insertRadioButton():0 -> b
    1:1:java.lang.CharSequence android.support.v7.view.menu.MenuItemImpl.getTitle():0:0 -> d
    1:1:java.lang.CharSequence android.support.v7.view.menu.MenuItemImpl.getTitleForItemView(android.support.v7.view.menu.MenuView$ItemView):0 -> d
    1:1:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0 -> d
    2:2:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0:0 -> d
    3:3:void setShortcut(boolean,char):0:0 -> d
    3:3:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0 -> d
    4:4:java.lang.String android.support.v7.view.menu.MenuItemImpl.getShortcutLabel():0:0 -> d
    4:4:void setShortcut(boolean,char):0 -> d
    4:4:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0 -> d
    5:5:android.content.Context android.support.v7.view.menu.MenuBuilder.getContext():0:0 -> d
    5:5:java.lang.String android.support.v7.view.menu.MenuItemImpl.getShortcutLabel():0 -> d
    5:5:void setShortcut(boolean,char):0 -> d
    5:5:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0 -> d
    6:6:java.lang.String android.support.v7.view.menu.MenuItemImpl.getShortcutLabel():0:0 -> d
    6:6:void setShortcut(boolean,char):0 -> d
    6:6:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0 -> d
    7:7:android.content.Context android.support.v7.view.menu.MenuBuilder.getContext():0:0 -> d
    7:7:java.lang.String android.support.v7.view.menu.MenuItemImpl.getShortcutLabel():0 -> d
    7:7:void setShortcut(boolean,char):0 -> d
    7:7:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0 -> d
    8:8:java.lang.String android.support.v7.view.menu.MenuItemImpl.getShortcutLabel():0:0 -> d
    8:8:void setShortcut(boolean,char):0 -> d
    8:8:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0 -> d
    9:9:void setShortcut(boolean,char):0:0 -> d
    9:9:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0 -> d
    10:10:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0:0 -> d
    11:11:java.lang.CharSequence android.support.v7.view.menu.MenuItemImpl.getContentDescription():0:0 -> d
    11:11:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0 -> d
    12:12:void initialize(android.support.v7.view.menu.MenuItemImpl,int):0:0 -> d
    1:1:void android.support.v4.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> onFinishInflate
    1:1:void onFinishInflate():0 -> onFinishInflate
    2:2:void onFinishInflate():0:0 -> onFinishInflate
    1:1:boolean android.support.v7.view.menu.MenuItemImpl.shouldShowIcon():0:0 -> setIcon
    1:1:void setIcon(android.graphics.drawable.Drawable):0 -> setIcon
    2:2:void setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
    3:3:void insertIconView():0:0 -> setIcon
    3:3:void setIcon(android.graphics.drawable.Drawable):0 -> setIcon
    4:4:void addContentView(android.view.View,int):0:0 -> setIcon
    4:4:void insertIconView():0 -> setIcon
    4:4:void setIcon(android.graphics.drawable.Drawable):0 -> setIcon
    5:5:void setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
android.support.v7.view.menu.ListMenuPresenter -> android.support.v7.view.menu.c:
    android.support.v7.view.menu.MenuBuilder mMenu -> d
    android.support.v7.view.menu.MenuPresenter$Callback mCallback -> f
    android.content.Context mContext -> b
    android.view.LayoutInflater mInflater -> c
    android.support.v7.view.menu.ListMenuPresenter$MenuAdapter mAdapter -> g
    android.support.v7.view.menu.ExpandedMenuView mMenuView -> e
    1:1:void <init>(int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,int):0 -> <init>
    2:2:void <init>(android.content.Context,int):0:0 -> <init>
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> a
    1:1:void android.support.v7.view.menu.MenuDialogHelper.show(android.os.IBinder):0:0 -> b
    1:1:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    2:2:android.content.Context android.support.v7.view.menu.MenuBuilder.getContext():0:0 -> b
    2:2:void android.support.v7.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> b
    2:2:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    3:3:void android.support.v7.view.menu.MenuDialogHelper.show(android.os.IBinder):0:0 -> b
    3:3:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    4:4:android.content.Context android.support.v7.app.AlertDialog$Builder.getContext():0:0 -> b
    4:4:void android.support.v7.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> b
    4:4:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    5:5:void android.support.v7.view.menu.MenuDialogHelper.show(android.os.IBinder):0:0 -> b
    5:5:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    6:6:void setCallback(android.support.v7.view.menu.MenuPresenter$Callback):0:0 -> b
    6:6:void android.support.v7.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> b
    6:6:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    7:7:void android.support.v7.view.menu.MenuDialogHelper.show(android.os.IBinder):0:0 -> b
    7:7:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    8:8:void android.support.v7.view.menu.MenuBuilder.addMenuPresenter(android.support.v7.view.menu.MenuPresenter):0:0 -> b
    8:8:void android.support.v7.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> b
    8:8:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    9:9:void android.support.v7.view.menu.MenuDialogHelper.show(android.os.IBinder):0:0 -> b
    9:9:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    10:10:android.support.v7.app.AlertDialog$Builder android.support.v7.app.AlertDialog$Builder.setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener):0:0 -> b
    10:10:void android.support.v7.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> b
    10:10:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    11:11:android.view.View android.support.v7.view.menu.MenuBuilder.getHeaderView():0:0 -> b
    11:11:void android.support.v7.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> b
    11:11:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    12:12:android.support.v7.app.AlertDialog$Builder android.support.v7.app.AlertDialog$Builder.setCustomTitle(android.view.View):0:0 -> b
    12:12:void android.support.v7.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> b
    12:12:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    13:13:android.graphics.drawable.Drawable android.support.v7.view.menu.MenuBuilder.getHeaderIcon():0:0 -> b
    13:13:void android.support.v7.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> b
    13:13:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    14:14:android.support.v7.app.AlertDialog$Builder android.support.v7.app.AlertDialog$Builder.setIcon(android.graphics.drawable.Drawable):0:0 -> b
    14:14:void android.support.v7.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> b
    14:14:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    15:15:java.lang.CharSequence android.support.v7.view.menu.MenuBuilder.getHeaderTitle():0:0 -> b
    15:15:void android.support.v7.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> b
    15:15:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    16:16:android.support.v7.app.AlertDialog$Builder android.support.v7.app.AlertDialog$Builder.setTitle(java.lang.CharSequence):0:0 -> b
    16:16:void android.support.v7.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> b
    16:16:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    17:17:android.support.v7.app.AlertDialog$Builder android.support.v7.app.AlertDialog$Builder.setOnKeyListener(android.content.DialogInterface$OnKeyListener):0:0 -> b
    17:17:void android.support.v7.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> b
    17:17:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    18:18:void android.support.v7.view.menu.MenuDialogHelper.show(android.os.IBinder):0:0 -> b
    18:18:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    19:19:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0:0 -> b
    android.widget.ListAdapter getAdapter() -> c
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> e
    boolean flagActionItems() -> g
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> h
    void updateMenuView(boolean) -> i
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> j
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> k
android.support.v7.view.menu.ListMenuPresenter$MenuAdapter -> android.support.v7.view.menu.c$a:
    android.support.v7.view.menu.ListMenuPresenter this$0 -> c
    int mExpandedIndex -> b
    1:1:android.support.v7.view.menu.MenuItemImpl android.support.v7.view.menu.MenuBuilder.getExpandedItem():0:0 -> a
    1:1:void findExpandedIndex():0 -> a
    2:2:java.util.ArrayList android.support.v7.view.menu.MenuBuilder.getNonActionItems():0:0 -> a
    2:2:void findExpandedIndex():0 -> a
    3:3:void findExpandedIndex():0:0 -> a
    1:1:java.util.ArrayList android.support.v7.view.menu.MenuBuilder.getNonActionItems():0:0 -> b
    1:1:android.support.v7.view.menu.MenuItemImpl getItem(int):0 -> b
    2:2:android.support.v7.view.menu.MenuItemImpl getItem(int):0:0 -> b
    1:1:java.util.ArrayList android.support.v7.view.menu.MenuBuilder.getNonActionItems():0:0 -> getCount
    1:1:int getCount():0 -> getCount
    2:2:int getCount():0:0 -> getCount
android.support.v7.view.menu.MenuAdapter -> android.support.v7.view.menu.d:
    android.view.LayoutInflater mInflater -> f
    android.support.v7.view.menu.MenuBuilder mAdapterMenu -> b
    boolean mOverflowOnly -> e
    int mItemLayoutRes -> g
    int mExpandedIndex -> c
    boolean mForceShowIcon -> d
    1:1:android.support.v7.view.menu.MenuItemImpl android.support.v7.view.menu.MenuBuilder.getExpandedItem():0:0 -> a
    1:1:void findExpandedIndex():0 -> a
    2:2:java.util.ArrayList android.support.v7.view.menu.MenuBuilder.getNonActionItems():0:0 -> a
    2:2:void findExpandedIndex():0 -> a
    3:3:void findExpandedIndex():0:0 -> a
    1:1:java.util.ArrayList android.support.v7.view.menu.MenuBuilder.getNonActionItems():0:0 -> b
    1:1:android.support.v7.view.menu.MenuItemImpl getItem(int):0 -> b
    2:2:android.support.v7.view.menu.MenuItemImpl getItem(int):0:0 -> b
    1:1:java.util.ArrayList android.support.v7.view.menu.MenuBuilder.getNonActionItems():0:0 -> getCount
    1:1:int getCount():0 -> getCount
    2:2:int getCount():0:0 -> getCount
    1:1:int android.support.v7.view.menu.MenuItemImpl.getGroupId():0:0 -> getView
    1:1:android.view.View getView(int,android.view.View,android.view.ViewGroup):0 -> getView
    2:2:android.view.View getView(int,android.view.View,android.view.ViewGroup):0:0 -> getView
    3:3:int android.support.v7.view.menu.MenuItemImpl.getGroupId():0:0 -> getView
    3:3:android.view.View getView(int,android.view.View,android.view.ViewGroup):0 -> getView
    4:4:android.view.View getView(int,android.view.View,android.view.ViewGroup):0:0 -> getView
android.support.v7.view.menu.MenuBuilder -> android.support.v7.view.menu.e:
    android.content.Context mContext -> a
    int mDefaultShowAsAction -> l
    int[] sCategoryToOrder -> y
    boolean mIsActionItemsStale -> k
    java.util.ArrayList mVisibleItems -> g
    boolean mGroupDividerEnabled -> w
    boolean mItemsChangedWhileDispatchPrevented -> q
    boolean mIsClosing -> s
    java.lang.CharSequence mHeaderTitle -> m
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> u
    java.util.ArrayList mActionItems -> i
    android.view.View mHeaderView -> o
    boolean mIsVisibleItemsStale -> h
    android.graphics.drawable.Drawable mHeaderIcon -> n
    android.content.res.Resources mResources -> b
    boolean mShortcutsVisible -> d
    boolean mPreventDispatchingItemsChanged -> p
    java.util.ArrayList mItems -> f
    boolean mOverrideVisibleItems -> x
    boolean mStructureChangedWhileDispatchPrevented -> r
    android.support.v7.view.menu.MenuItemImpl mExpandedItem -> v
    java.util.ArrayList mNonActionItems -> j
    android.support.v7.view.menu.MenuBuilder$Callback mCallback -> e
    java.util.ArrayList mTempShortcutItemList -> t
    boolean mQwertyMode -> c
    1:1:void setShortcutsVisibleInner(boolean):0:0 -> <init>
    1:1:void <init>(android.content.Context):0 -> <init>
    2:2:boolean android.support.v4.view.ViewConfigurationCompat.shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context):0:0 -> <init>
    2:2:void setShortcutsVisibleInner(boolean):0 -> <init>
    2:2:void <init>(android.content.Context):0 -> <init>
    3:3:void setShortcutsVisibleInner(boolean):0:0 -> <init>
    3:3:void <init>(android.content.Context):0 -> <init>
    1:1:int getOrdering(int):0:0 -> a
    1:1:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
    2:2:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0:0 -> a
    3:3:android.support.v7.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int):0:0 -> a
    3:3:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
    4:4:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0:0 -> a
    5:5:int findInsertIndex(java.util.ArrayList,int):0:0 -> a
    5:5:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
    6:6:int android.support.v7.view.menu.MenuItemImpl.getOrdering():0:0 -> a
    6:6:int findInsertIndex(java.util.ArrayList,int):0 -> a
    6:6:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
    7:7:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0:0 -> a
    8:8:int getOrdering(int):0:0 -> a
    8:8:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
    1:1:android.view.MenuItem add(int,int,int,java.lang.CharSequence):0:0 -> addIntentOptions
    1:1:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]):0 -> addIntentOptions
    2:2:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]):0:0 -> addIntentOptions
    1:1:void android.support.v7.view.menu.MenuItemImpl.setSubMenu(android.support.v7.view.menu.SubMenuBuilder):0:0 -> addSubMenu
    1:1:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence):0 -> addSubMenu
    2:2:java.lang.CharSequence android.support.v7.view.menu.MenuItemImpl.getTitle():0:0 -> addSubMenu
    2:2:void android.support.v7.view.menu.MenuItemImpl.setSubMenu(android.support.v7.view.menu.SubMenuBuilder):0 -> addSubMenu
    2:2:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence):0 -> addSubMenu
    3:3:void android.support.v7.view.menu.MenuItemImpl.setSubMenu(android.support.v7.view.menu.SubMenuBuilder):0:0 -> addSubMenu
    3:3:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence):0 -> addSubMenu
    void addMenuPresenter(android.support.v7.view.menu.MenuPresenter,android.content.Context) -> b
    void close(boolean) -> c
    boolean collapseItemActionView(android.support.v7.view.menu.MenuItemImpl) -> d
    boolean dispatchMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> e
    boolean expandItemActionView(android.support.v7.view.menu.MenuItemImpl) -> f
    1:1:int android.support.v7.view.menu.MenuItemImpl.getItemId():0:0 -> findItem
    1:1:android.view.MenuItem findItem(int):0 -> findItem
    2:2:android.view.MenuItem findItem(int):0:0 -> findItem
    3:3:android.view.SubMenu android.support.v7.view.menu.MenuItemImpl.getSubMenu():0:0 -> findItem
    3:3:android.view.MenuItem findItem(int):0 -> findItem
    4:4:android.view.MenuItem findItem(int):0:0 -> findItem
    1:1:char android.support.v7.view.menu.MenuItemImpl.getAlphabeticShortcut():0:0 -> g
    1:1:android.support.v7.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent):0 -> g
    2:2:char android.support.v7.view.menu.MenuItemImpl.getNumericShortcut():0:0 -> g
    2:2:android.support.v7.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent):0 -> g
    3:3:android.support.v7.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent):0:0 -> g
    1:1:android.view.SubMenu android.support.v7.view.menu.MenuItemImpl.getSubMenu():0:0 -> h
    1:1:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0 -> h
    2:2:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0:0 -> h
    3:3:char android.support.v7.view.menu.MenuItemImpl.getAlphabeticShortcut():0:0 -> h
    3:3:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0 -> h
    4:4:char android.support.v7.view.menu.MenuItemImpl.getNumericShortcut():0:0 -> h
    4:4:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0 -> h
    5:5:int android.support.v7.view.menu.MenuItemImpl.getAlphabeticModifiers():0:0 -> h
    5:5:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0 -> h
    6:6:int android.support.v7.view.menu.MenuItemImpl.getNumericModifiers():0:0 -> h
    6:6:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0 -> h
    7:7:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0:0 -> h
    void flagActionItems() -> i
    java.lang.String getActionViewStatesKey() -> j
    android.support.v7.view.menu.MenuBuilder getRootMenu() -> k
    java.util.ArrayList getVisibleItems() -> l
    boolean isGroupDividerEnabled() -> m
    boolean isQwertyMode() -> n
    boolean isShortcutsVisible() -> o
    1:1:void dispatchPresenterUpdate(boolean):0:0 -> p
    1:1:void onItemsChanged(boolean):0 -> p
    2:2:void onItemsChanged(boolean):0:0 -> p
    1:1:boolean performItemAction(android.view.MenuItem,int):0:0 -> performShortcut
    1:1:boolean performShortcut(int,android.view.KeyEvent,int):0 -> performShortcut
    2:2:boolean performShortcut(int,android.view.KeyEvent,int):0:0 -> performShortcut
    boolean performItemAction(android.view.MenuItem,int) -> q
    1:1:boolean android.support.v7.view.menu.MenuItemImpl.invoke():0:0 -> r
    1:1:boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int):0 -> r
    2:2:android.content.Context getContext():0:0 -> r
    2:2:boolean android.support.v7.view.menu.MenuItemImpl.invoke():0 -> r
    2:2:boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int):0 -> r
    3:3:boolean android.support.v7.view.menu.MenuItemImpl.invoke():0:0 -> r
    3:3:boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int):0 -> r
    4:4:android.support.v4.view.ActionProvider android.support.v7.view.menu.MenuItemImpl.getSupportActionProvider():0:0 -> r
    4:4:boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int):0 -> r
    5:5:boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int):0:0 -> r
    6:6:android.content.Context getContext():0:0 -> r
    6:6:boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int):0 -> r
    7:7:boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int):0:0 -> r
    8:8:void android.support.v7.view.menu.MenuItemImpl.setSubMenu(android.support.v7.view.menu.SubMenuBuilder):0:0 -> r
    8:8:boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int):0 -> r
    9:9:java.lang.CharSequence android.support.v7.view.menu.MenuItemImpl.getTitle():0:0 -> r
    9:9:void android.support.v7.view.menu.MenuItemImpl.setSubMenu(android.support.v7.view.menu.SubMenuBuilder):0 -> r
    9:9:boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int):0 -> r
    10:10:void android.support.v7.view.menu.MenuItemImpl.setSubMenu(android.support.v7.view.menu.SubMenuBuilder):0:0 -> r
    10:10:boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int):0 -> r
    11:11:android.view.SubMenu android.support.v7.view.menu.MenuItemImpl.getSubMenu():0:0 -> r
    11:11:boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int):0 -> r
    12:12:boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int):0:0 -> r
    13:13:boolean dispatchSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder,android.support.v7.view.menu.MenuPresenter):0:0 -> r
    13:13:boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int):0 -> r
    14:14:boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int):0:0 -> r
    1:1:int findGroupIndex(int,int):0:0 -> removeGroup
    1:1:int findGroupIndex(int):0 -> removeGroup
    1:1:void removeGroup(int):0 -> removeGroup
    2:2:int android.support.v7.view.menu.MenuItemImpl.getGroupId():0:0 -> removeGroup
    2:2:int findGroupIndex(int,int):0 -> removeGroup
    2:2:int findGroupIndex(int):0 -> removeGroup
    2:2:void removeGroup(int):0 -> removeGroup
    3:3:void removeGroup(int):0:0 -> removeGroup
    4:4:int android.support.v7.view.menu.MenuItemImpl.getGroupId():0:0 -> removeGroup
    4:4:void removeGroup(int):0 -> removeGroup
    5:5:void removeGroup(int):0:0 -> removeGroup
    1:1:int findItemIndex(int):0:0 -> removeItem
    1:1:void removeItem(int):0 -> removeItem
    2:2:int android.support.v7.view.menu.MenuItemImpl.getItemId():0:0 -> removeItem
    2:2:int findItemIndex(int):0 -> removeItem
    2:2:void removeItem(int):0 -> removeItem
    3:3:void removeItem(int):0:0 -> removeItem
    void removeItemAtInt(int,boolean) -> s
    1:1:int android.support.v7.view.menu.MenuItemImpl.getGroupId():0:0 -> setGroupCheckable
    1:1:void setGroupCheckable(int,boolean,boolean):0 -> setGroupCheckable
    2:2:void android.support.v7.view.menu.MenuItemImpl.setExclusiveCheckable(boolean):0:0 -> setGroupCheckable
    2:2:void setGroupCheckable(int,boolean,boolean):0 -> setGroupCheckable
    3:3:void setGroupCheckable(int,boolean,boolean):0:0 -> setGroupCheckable
    1:1:int android.support.v7.view.menu.MenuItemImpl.getGroupId():0:0 -> setGroupEnabled
    1:1:void setGroupEnabled(int,boolean):0 -> setGroupEnabled
    2:2:void setGroupEnabled(int,boolean):0:0 -> setGroupEnabled
    1:1:int android.support.v7.view.menu.MenuItemImpl.getGroupId():0:0 -> setGroupVisible
    1:1:void setGroupVisible(int,boolean):0 -> setGroupVisible
    2:2:void setGroupVisible(int,boolean):0:0 -> setGroupVisible
    void removeMenuPresenter(android.support.v7.view.menu.MenuPresenter) -> t
    void restoreActionViewStates(android.os.Bundle) -> u
    void saveActionViewStates(android.os.Bundle) -> v
    1:1:android.content.res.Resources getResources():0:0 -> w
    1:1:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View):0 -> w
    2:2:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View):0:0 -> w
    3:3:android.content.Context getContext():0:0 -> w
    3:3:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View):0 -> w
    4:4:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View):0:0 -> w
    5:5:android.graphics.drawable.Drawable android.support.v4.content.ContextCompat.getDrawable(android.content.Context,int):0:0 -> w
    5:5:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View):0 -> w
    6:6:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View):0:0 -> w
    void startDispatchingItemsChanged() -> x
    void stopDispatchingItemsChanged() -> y
android.support.v7.view.menu.MenuBuilder$Callback -> android.support.v7.view.menu.e$a:
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> a
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> b
android.support.v7.view.menu.MenuBuilder$ItemInvoker -> android.support.v7.view.menu.e$b:
    boolean invokeItem(android.support.v7.view.menu.MenuItemImpl) -> c
android.support.v7.view.menu.MenuDialogHelper -> android.support.v7.view.menu.f:
    android.support.v7.view.menu.ListMenuPresenter mPresenter -> d
    android.support.v7.view.menu.MenuBuilder mMenu -> b
    android.support.v7.app.AlertDialog mDialog -> c
    1:1:void dismiss():0:0 -> a
    1:1:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean):0 -> a
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> b
    1:1:java.lang.Object android.support.v7.view.menu.ListMenuPresenter$MenuAdapter.getItem(int):0:0 -> onClick
    1:1:void onClick(android.content.DialogInterface,int):0 -> onClick
    2:2:void onClick(android.content.DialogInterface,int):0:0 -> onClick
    1:1:void android.support.v7.view.menu.ListMenuPresenter.onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean):0:0 -> onDismiss
    1:1:void onDismiss(android.content.DialogInterface):0 -> onDismiss
android.support.v7.view.menu.MenuItemImpl -> android.support.v7.view.menu.g:
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> j
    android.view.View mActionView -> z
    android.support.v4.view.ActionProvider mActionProvider -> A
    boolean mHasIconTint -> u
    int mOrdering -> d
    java.lang.CharSequence mTitleCondensed -> f
    boolean mNeedToApplyIconTint -> w
    int mGroup -> b
    android.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> B
    android.content.Intent mIntent -> g
    java.lang.CharSequence mContentDescription -> q
    int mShowAsAction -> y
    android.graphics.drawable.Drawable mIconDrawable -> l
    android.support.v7.view.menu.MenuBuilder mMenu -> n
    boolean mIsActionViewExpanded -> C
    int mIconResId -> m
    android.support.v7.view.menu.SubMenuBuilder mSubMenu -> o
    int mShortcutAlphabeticModifiers -> k
    android.content.res.ColorStateList mIconTintList -> s
    int mShortcutNumericModifiers -> i
    java.lang.CharSequence mTitle -> e
    boolean mHasIconTintMode -> v
    int mCategoryOrder -> c
    int mId -> a
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> p
    java.lang.CharSequence mTooltipText -> r
    int mFlags -> x
    android.graphics.PorterDuff$Mode mIconTintMode -> t
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> D
    void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> a
    android.support.v4.view.ActionProvider getSupportActionProvider() -> b
    1:1:void android.support.v4.view.ActionProvider.reset():0:0 -> c
    1:1:android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider):0 -> c
    2:2:android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider):0:0 -> c
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> d
    1:1:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable):0 -> d
    2:2:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable):0:0 -> d
    3:3:void android.support.v4.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> d
    3:3:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable):0 -> d
    4:4:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable):0:0 -> d
    char getShortcut() -> e
    boolean hasCollapsibleActionView() -> f
    boolean isActionButton() -> g
    1:1:android.content.Context android.support.v7.view.menu.MenuBuilder.getContext():0:0 -> getIcon
    1:1:android.graphics.drawable.Drawable getIcon():0 -> getIcon
    2:2:android.graphics.drawable.Drawable getIcon():0:0 -> getIcon
    boolean isExclusiveCheckable() -> h
    1:1:void android.support.v7.view.menu.MenuBuilder.onItemActionRequestChanged(android.support.v7.view.menu.MenuItemImpl):0:0 -> i
    1:1:android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View):0 -> i
    void setCheckedInt(boolean) -> j
    void setIsActionButton(boolean) -> k
    boolean setVisibleInt(boolean) -> l
    boolean shouldShowShortcut() -> m
    1:1:android.support.v4.internal.view.SupportMenuItem setActionView(int):0:0 -> setActionView
    1:1:android.view.MenuItem setActionView(int):0 -> setActionView
    2:2:android.content.Context android.support.v7.view.menu.MenuBuilder.getContext():0:0 -> setActionView
    2:2:android.support.v4.internal.view.SupportMenuItem setActionView(int):0 -> setActionView
    2:2:android.view.MenuItem setActionView(int):0 -> setActionView
    3:3:android.support.v4.internal.view.SupportMenuItem setActionView(int):0:0 -> setActionView
    3:3:android.view.MenuItem setActionView(int):0 -> setActionView
    1:1:void android.support.v7.view.menu.MenuBuilder.setExclusiveItemChecked(android.view.MenuItem):0:0 -> setChecked
    1:1:android.view.MenuItem setChecked(boolean):0 -> setChecked
    2:2:int getGroupId():0:0 -> setChecked
    2:2:void android.support.v7.view.menu.MenuBuilder.setExclusiveItemChecked(android.view.MenuItem):0 -> setChecked
    2:2:android.view.MenuItem setChecked(boolean):0 -> setChecked
    3:3:void android.support.v7.view.menu.MenuBuilder.setExclusiveItemChecked(android.view.MenuItem):0:0 -> setChecked
    3:3:android.view.MenuItem setChecked(boolean):0 -> setChecked
    4:4:android.view.MenuItem setChecked(boolean):0:0 -> setChecked
    1:1:android.support.v4.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence):0:0 -> setContentDescription
    1:1:android.view.MenuItem setContentDescription(java.lang.CharSequence):0 -> setContentDescription
    1:1:void android.support.v7.view.menu.MenuBuilder.onItemActionRequestChanged(android.support.v7.view.menu.MenuItemImpl):0:0 -> setShowAsAction
    1:1:void setShowAsAction(int):0 -> setShowAsAction
    1:1:android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int):0:0 -> setShowAsActionFlags
    1:1:android.view.MenuItem setShowAsActionFlags(int):0 -> setShowAsActionFlags
    1:1:android.content.Context android.support.v7.view.menu.MenuBuilder.getContext():0:0 -> setTitle
    1:1:android.view.MenuItem setTitle(int):0 -> setTitle
    2:2:android.view.MenuItem setTitle(int):0:0 -> setTitle
    1:1:android.support.v4.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence):0:0 -> setTooltipText
    1:1:android.view.MenuItem setTooltipText(java.lang.CharSequence):0 -> setTooltipText
    1:1:void android.support.v7.view.menu.MenuBuilder.onItemVisibleChanged(android.support.v7.view.menu.MenuItemImpl):0:0 -> setVisible
    1:1:android.view.MenuItem setVisible(boolean):0 -> setVisible
android.support.v7.view.menu.MenuItemImpl$1 -> android.support.v7.view.menu.g$a:
    android.support.v7.view.menu.MenuItemImpl this$0 -> a
android.support.v7.view.menu.MenuItemWrapperICS -> r0.c:
    java.lang.reflect.Method mSetExclusiveCheckableMethod -> f
    1:1:android.view.View android.support.v7.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper.getWrappedView():0:0 -> getActionView
    1:1:android.view.View getActionView():0 -> getActionView
    android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> j
android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> r0.c$a:
    android.view.ActionProvider mInner -> b
    android.support.v7.view.menu.MenuItemWrapperICS this$0 -> c
    boolean hasSubMenu() -> a
    android.view.View onCreateActionView() -> c
    boolean onPerformDefaultAction() -> e
    void onPrepareSubMenu(android.view.SubMenu) -> f
android.support.v7.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> r0.c$b:
    android.view.CollapsibleActionView mWrappedView -> b
    void onActionViewExpanded() -> a
    void onActionViewCollapsed() -> e
android.support.v7.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> r0.c$c:
    android.support.v7.view.menu.MenuItemWrapperICS this$0 -> c
android.support.v7.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> r0.c$d:
    android.support.v7.view.menu.MenuItemWrapperICS this$0 -> c
android.support.v7.view.menu.MenuItemWrapperJB -> r0.d:
    android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> j
android.support.v7.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB -> r0.d$a:
    android.support.v4.view.ActionProvider$VisibilityListener mListener -> d
    boolean isVisible() -> b
    android.view.View onCreateActionView(android.view.MenuItem) -> d
    boolean overridesItemVisibility() -> g
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> h
    1:1:void android.support.v7.view.menu.MenuItemImpl$1.onActionProviderVisibilityChanged(boolean):0:0 -> onActionProviderVisibilityChanged
    1:1:void onActionProviderVisibilityChanged(boolean):0 -> onActionProviderVisibilityChanged
    2:2:void android.support.v7.view.menu.MenuBuilder.onItemVisibleChanged(android.support.v7.view.menu.MenuItemImpl):0:0 -> onActionProviderVisibilityChanged
    2:2:void android.support.v7.view.menu.MenuItemImpl$1.onActionProviderVisibilityChanged(boolean):0 -> onActionProviderVisibilityChanged
    2:2:void onActionProviderVisibilityChanged(boolean):0 -> onActionProviderVisibilityChanged
android.support.v7.view.menu.MenuPopup -> r0.e:
    android.graphics.Rect mEpicenterBounds -> b
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> e
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> h
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> k
    void addMenu(android.support.v7.view.menu.MenuBuilder) -> l
    int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> m
    void setAnchorView(android.view.View) -> n
    void setForceShowIcon(boolean) -> o
    1:1:android.support.v7.view.menu.MenuAdapter android.support.v7.view.menu.MenuPopup.toMenuAdapter(android.widget.ListAdapter):0:0 -> onItemClick
    1:1:void onItemClick(android.widget.AdapterView,android.view.View,int,long):0 -> onItemClick
    2:2:void onItemClick(android.widget.AdapterView,android.view.View,int,long):0:0 -> onItemClick
    3:3:boolean android.support.v7.view.menu.MenuPopup.closeMenuOnSubMenuOpened():0:0 -> onItemClick
    3:3:void onItemClick(android.widget.AdapterView,android.view.View,int,long):0 -> onItemClick
    4:4:void onItemClick(android.widget.AdapterView,android.view.View,int,long):0:0 -> onItemClick
    void setGravity(int) -> p
    void setHorizontalOffset(int) -> q
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> r
    void setShowTitle(boolean) -> s
    void setVerticalOffset(int) -> t
    boolean shouldPreserveIconSpacing(android.support.v7.view.menu.MenuBuilder) -> u
android.support.v7.view.menu.MenuPopupHelper -> android.support.v7.view.menu.h:
    android.content.Context mContext -> a
    android.support.v7.view.menu.MenuPresenter$Callback mPresenterCallback -> i
    android.support.v7.view.menu.MenuPopup mPopup -> j
    android.support.v7.view.menu.MenuBuilder mMenu -> b
    int mDropDownGravity -> g
    int mPopupStyleAttr -> d
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> k
    int mPopupStyleRes -> e
    boolean mForceShowIcon -> h
    android.widget.PopupWindow$OnDismissListener mInternalOnDismissListener -> l
    boolean mOverflowOnly -> c
    android.view.View mAnchorView -> f
    1:1:android.support.v7.view.menu.MenuPopup createPopup():0:0 -> a
    1:1:android.support.v7.view.menu.MenuPopup getPopup():0 -> a
    2:2:android.support.v7.view.menu.MenuPopup getPopup():0:0 -> a
    boolean isShowing() -> b
    void onDismiss() -> c
    void setPresenterCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> d
    1:1:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> e
    1:1:void showPopup(int,int,boolean,boolean):0 -> e
    2:2:int android.support.v4.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> e
    2:2:void showPopup(int,int,boolean,boolean):0 -> e
    3:3:void showPopup(int,int,boolean,boolean):0:0 -> e
    4:4:void android.support.v7.view.menu.MenuPopup.setEpicenterBounds(android.graphics.Rect):0:0 -> e
    4:4:void showPopup(int,int,boolean,boolean):0 -> e
    5:5:void showPopup(int,int,boolean,boolean):0:0 -> e
    boolean tryShow() -> f
android.support.v7.view.menu.MenuPopupHelper$1 -> android.support.v7.view.menu.h$a:
    android.support.v7.view.menu.MenuPopupHelper this$0 -> b
android.support.v7.view.menu.MenuPresenter -> android.support.v7.view.menu.i:
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> a
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> b
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> e
    boolean flagActionItems() -> g
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> h
    void updateMenuView(boolean) -> i
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> j
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> k
android.support.v7.view.menu.MenuPresenter$Callback -> android.support.v7.view.menu.i$a:
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> b
android.support.v7.view.menu.MenuView -> android.support.v7.view.menu.j:
    void initialize(android.support.v7.view.menu.MenuBuilder) -> b
android.support.v7.view.menu.MenuView$ItemView -> android.support.v7.view.menu.j$a:
    void initialize(android.support.v7.view.menu.MenuItemImpl,int) -> d
android.support.v7.view.menu.MenuWrapperICS -> r0.f:
    1:1:void android.support.v7.view.menu.BaseMenuWrapper.internalClear():0:0 -> clear
    1:1:void clear():0 -> clear
    2:2:void clear():0:0 -> clear
    1:1:void android.support.v7.view.menu.BaseMenuWrapper.internalRemoveGroup(int):0:0 -> removeGroup
    1:1:void removeGroup(int):0 -> removeGroup
    2:2:void removeGroup(int):0:0 -> removeGroup
    1:1:void android.support.v7.view.menu.BaseMenuWrapper.internalRemoveItem(int):0:0 -> removeItem
    1:1:void removeItem(int):0 -> removeItem
    2:2:void removeItem(int):0:0 -> removeItem
android.support.v7.view.menu.ShowableListMenu -> r0.g:
    boolean isShowing() -> c
    android.widget.ListView getListView() -> d
    void show() -> f
android.support.v7.view.menu.StandardMenuPopup -> android.support.v7.view.menu.k:
    android.support.v7.view.menu.MenuBuilder mMenu -> d
    android.content.Context mContext -> c
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> m
    int mPopupStyleAttr -> h
    int mPopupStyleRes -> i
    android.view.ViewTreeObserver mTreeObserver -> q
    int mPopupMaxWidth -> g
    boolean mShowTitle -> v
    boolean mWasDismissed -> r
    boolean mHasContentWidth -> s
    android.view.View$OnAttachStateChangeListener mAttachStateChangeListener -> l
    android.view.View mShownAnchorView -> o
    android.view.View mAnchorView -> n
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> k
    boolean mOverflowOnly -> f
    android.support.v7.widget.MenuPopupWindow mPopup -> j
    int mContentWidth -> t
    android.support.v7.view.menu.MenuPresenter$Callback mPresenterCallback -> p
    int mDropDownGravity -> u
    android.support.v7.view.menu.MenuAdapter mAdapter -> e
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> a
    1:1:void android.support.v7.view.menu.MenuPopupHelper.setForceShowIcon(boolean):0:0 -> b
    1:1:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    2:2:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0:0 -> b
    3:3:void android.support.v7.view.menu.MenuPopupHelper.setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> b
    3:3:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    4:4:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0:0 -> b
    5:5:int android.support.v7.widget.ListPopupWindow.getHorizontalOffset():0:0 -> b
    5:5:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    6:6:int android.support.v7.widget.ListPopupWindow.getVerticalOffset():0:0 -> b
    6:6:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    7:7:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0:0 -> b
    8:8:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> b
    8:8:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    9:9:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0:0 -> b
    10:10:boolean android.support.v7.view.menu.MenuPopupHelper.tryShow(int,int):0:0 -> b
    10:10:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    11:11:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0:0 -> b
    boolean isShowing() -> c
    1:1:android.widget.ListView android.support.v7.widget.ListPopupWindow.getListView():0:0 -> d
    1:1:android.widget.ListView getListView():0 -> d
    1:1:boolean tryShow():0:0 -> f
    1:1:void show():0 -> f
    2:2:void android.support.v7.widget.ListPopupWindow.setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> f
    2:2:boolean tryShow():0 -> f
    2:2:void show():0 -> f
    3:3:boolean tryShow():0:0 -> f
    3:3:void show():0 -> f
    4:4:void android.support.v7.widget.ListPopupWindow.setOnItemClickListener(android.widget.AdapterView$OnItemClickListener):0:0 -> f
    4:4:boolean tryShow():0 -> f
    4:4:void show():0 -> f
    5:5:boolean tryShow():0:0 -> f
    5:5:void show():0 -> f
    6:6:void android.support.v7.widget.ListPopupWindow.setAnchorView(android.view.View):0:0 -> f
    6:6:boolean tryShow():0 -> f
    6:6:void show():0 -> f
    7:7:boolean tryShow():0:0 -> f
    7:7:void show():0 -> f
    8:8:void android.support.v7.widget.ListPopupWindow.setDropDownGravity(int):0:0 -> f
    8:8:boolean tryShow():0 -> f
    8:8:void show():0 -> f
    9:9:boolean tryShow():0:0 -> f
    9:9:void show():0 -> f
    10:10:void android.support.v7.widget.ListPopupWindow.setInputMethodMode(int):0:0 -> f
    10:10:boolean tryShow():0 -> f
    10:10:void show():0 -> f
    11:11:boolean tryShow():0:0 -> f
    11:11:void show():0 -> f
    12:12:android.graphics.Rect android.support.v7.view.menu.MenuPopup.getEpicenterBounds():0:0 -> f
    12:12:boolean tryShow():0 -> f
    12:12:void show():0 -> f
    13:13:void android.support.v7.widget.ListPopupWindow.setEpicenterBounds(android.graphics.Rect):0:0 -> f
    13:13:boolean tryShow():0 -> f
    13:13:void show():0 -> f
    14:14:boolean tryShow():0:0 -> f
    14:14:void show():0 -> f
    15:15:android.widget.ListView android.support.v7.widget.ListPopupWindow.getListView():0:0 -> f
    15:15:boolean tryShow():0 -> f
    15:15:void show():0 -> f
    16:16:boolean tryShow():0:0 -> f
    16:16:void show():0 -> f
    17:17:java.lang.CharSequence android.support.v7.view.menu.MenuBuilder.getHeaderTitle():0:0 -> f
    17:17:boolean tryShow():0 -> f
    17:17:void show():0 -> f
    18:18:boolean tryShow():0:0 -> f
    18:18:void show():0 -> f
    19:19:java.lang.CharSequence android.support.v7.view.menu.MenuBuilder.getHeaderTitle():0:0 -> f
    19:19:boolean tryShow():0 -> f
    19:19:void show():0 -> f
    20:20:boolean tryShow():0:0 -> f
    20:20:void show():0 -> f
    21:21:void show():0:0 -> f
    boolean flagActionItems() -> g
    void updateMenuView(boolean) -> i
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> j
    void addMenu(android.support.v7.view.menu.MenuBuilder) -> l
    void setAnchorView(android.view.View) -> n
    1:1:void android.support.v7.view.menu.MenuAdapter.setForceShowIcon(boolean):0:0 -> o
    1:1:void setForceShowIcon(boolean):0 -> o
    1:1:void android.support.v7.view.menu.MenuBuilder.close():0:0 -> onDismiss
    1:1:void onDismiss():0 -> onDismiss
    2:2:void onDismiss():0:0 -> onDismiss
    void setGravity(int) -> p
    1:1:void android.support.v7.widget.ListPopupWindow.setHorizontalOffset(int):0:0 -> q
    1:1:void setHorizontalOffset(int):0 -> q
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> r
    void setShowTitle(boolean) -> s
    1:1:void android.support.v7.widget.ListPopupWindow.setVerticalOffset(int):0:0 -> t
    1:1:void setVerticalOffset(int):0 -> t
android.support.v7.view.menu.StandardMenuPopup$1 -> android.support.v7.view.menu.k$a:
    android.support.v7.view.menu.StandardMenuPopup this$0 -> b
    1:1:boolean android.support.v7.widget.ListPopupWindow.isModal():0:0 -> onGlobalLayout
    1:1:void onGlobalLayout():0 -> onGlobalLayout
    2:2:void onGlobalLayout():0:0 -> onGlobalLayout
android.support.v7.view.menu.StandardMenuPopup$2 -> android.support.v7.view.menu.k$b:
    android.support.v7.view.menu.StandardMenuPopup this$0 -> b
android.support.v7.view.menu.SubMenuBuilder -> android.support.v7.view.menu.l:
    android.support.v7.view.menu.MenuItemImpl mItem -> A
    android.support.v7.view.menu.MenuBuilder mParentMenu -> z
    boolean collapseItemActionView(android.support.v7.view.menu.MenuItemImpl) -> d
    boolean dispatchMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> e
    boolean expandItemActionView(android.support.v7.view.menu.MenuItemImpl) -> f
    1:1:int android.support.v7.view.menu.MenuItemImpl.getItemId():0:0 -> j
    1:1:java.lang.String getActionViewStatesKey():0 -> j
    2:2:java.lang.String getActionViewStatesKey():0:0 -> j
    android.support.v7.view.menu.MenuBuilder getRootMenu() -> k
    boolean isGroupDividerEnabled() -> m
    boolean isQwertyMode() -> n
    boolean isShortcutsVisible() -> o
    1:1:android.support.v7.view.menu.MenuBuilder android.support.v7.view.menu.MenuBuilder.setHeaderIconInt(int):0:0 -> setHeaderIcon
    1:1:android.view.SubMenu setHeaderIcon(int):0 -> setHeaderIcon
    2:2:android.support.v7.view.menu.MenuBuilder android.support.v7.view.menu.MenuBuilder.setHeaderIconInt(android.graphics.drawable.Drawable):0:0 -> setHeaderIcon
    2:2:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable):0 -> setHeaderIcon
    1:1:android.support.v7.view.menu.MenuBuilder android.support.v7.view.menu.MenuBuilder.setHeaderTitleInt(int):0:0 -> setHeaderTitle
    1:1:android.view.SubMenu setHeaderTitle(int):0 -> setHeaderTitle
    2:2:android.support.v7.view.menu.MenuBuilder android.support.v7.view.menu.MenuBuilder.setHeaderTitleInt(java.lang.CharSequence):0:0 -> setHeaderTitle
    2:2:android.view.SubMenu setHeaderTitle(java.lang.CharSequence):0 -> setHeaderTitle
    1:1:android.support.v7.view.menu.MenuBuilder android.support.v7.view.menu.MenuBuilder.setHeaderViewInt(android.view.View):0:0 -> setHeaderView
    1:1:android.view.SubMenu setHeaderView(android.view.View):0 -> setHeaderView
android.support.v7.view.menu.SubMenuWrapperICS -> r0.h:
    1:1:android.support.v4.internal.view.SupportSubMenu android.support.v7.view.menu.SubMenuWrapperICS.getWrappedObject():0:0 -> clearHeader
    1:1:void clearHeader():0 -> clearHeader
    2:2:void clearHeader():0:0 -> clearHeader
    1:1:android.support.v4.internal.view.SupportSubMenu android.support.v7.view.menu.SubMenuWrapperICS.getWrappedObject():0:0 -> getItem
    1:1:android.view.MenuItem getItem():0 -> getItem
    2:2:android.view.MenuItem getItem():0:0 -> getItem
    1:1:android.support.v4.internal.view.SupportSubMenu android.support.v7.view.menu.SubMenuWrapperICS.getWrappedObject():0:0 -> setHeaderIcon
    1:1:android.view.SubMenu setHeaderIcon(int):0 -> setHeaderIcon
    2:2:android.view.SubMenu setHeaderIcon(int):0:0 -> setHeaderIcon
    3:3:android.support.v4.internal.view.SupportSubMenu android.support.v7.view.menu.SubMenuWrapperICS.getWrappedObject():0:0 -> setHeaderIcon
    3:3:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable):0 -> setHeaderIcon
    4:4:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable):0:0 -> setHeaderIcon
    1:1:android.support.v4.internal.view.SupportSubMenu android.support.v7.view.menu.SubMenuWrapperICS.getWrappedObject():0:0 -> setHeaderTitle
    1:1:android.view.SubMenu setHeaderTitle(int):0 -> setHeaderTitle
    2:2:android.view.SubMenu setHeaderTitle(int):0:0 -> setHeaderTitle
    3:3:android.support.v4.internal.view.SupportSubMenu android.support.v7.view.menu.SubMenuWrapperICS.getWrappedObject():0:0 -> setHeaderTitle
    3:3:android.view.SubMenu setHeaderTitle(java.lang.CharSequence):0 -> setHeaderTitle
    4:4:android.view.SubMenu setHeaderTitle(java.lang.CharSequence):0:0 -> setHeaderTitle
    1:1:android.support.v4.internal.view.SupportSubMenu android.support.v7.view.menu.SubMenuWrapperICS.getWrappedObject():0:0 -> setHeaderView
    1:1:android.view.SubMenu setHeaderView(android.view.View):0 -> setHeaderView
    2:2:android.view.SubMenu setHeaderView(android.view.View):0:0 -> setHeaderView
    1:1:android.support.v4.internal.view.SupportSubMenu android.support.v7.view.menu.SubMenuWrapperICS.getWrappedObject():0:0 -> setIcon
    1:1:android.view.SubMenu setIcon(int):0 -> setIcon
    2:2:android.view.SubMenu setIcon(int):0:0 -> setIcon
    3:3:android.support.v4.internal.view.SupportSubMenu android.support.v7.view.menu.SubMenuWrapperICS.getWrappedObject():0:0 -> setIcon
    3:3:android.view.SubMenu setIcon(android.graphics.drawable.Drawable):0 -> setIcon
    4:4:android.view.SubMenu setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
android.support.v7.widget.AbsActionBarView -> s0.a:
    android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter -> e
    android.content.Context mPopupContext -> c
    android.support.v7.widget.ActionMenuView mMenuView -> d
    boolean mEatingHover -> i
    android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim -> g
    int mContentHeight -> f
    android.support.v7.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> b
    boolean mEatingTouch -> h
    void access$001(android.support.v7.widget.AbsActionBarView,int) -> a
    void access$101(android.support.v7.widget.AbsActionBarView,int) -> b
    int measureChildView(android.view.View,int,int,int) -> c
    int positionChild(android.view.View,int,int,int,boolean) -> d
    1:1:android.support.v7.widget.AbsActionBarView$VisibilityAnimListener android.support.v7.widget.AbsActionBarView$VisibilityAnimListener.withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int):0:0 -> e
    1:1:android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long):0 -> e
    2:2:android.support.v4.view.ViewPropertyAnimatorCompat android.support.v4.view.ViewPropertyAnimatorCompat.setListener(android.support.v4.view.ViewPropertyAnimatorListener):0:0 -> e
    2:2:android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long):0 -> e
    3:3:android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long):0:0 -> e
    4:4:android.support.v7.widget.AbsActionBarView$VisibilityAnimListener android.support.v7.widget.AbsActionBarView$VisibilityAnimListener.withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int):0:0 -> e
    4:4:android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long):0 -> e
    5:5:android.support.v4.view.ViewPropertyAnimatorCompat android.support.v4.view.ViewPropertyAnimatorCompat.setListener(android.support.v4.view.ViewPropertyAnimatorListener):0:0 -> e
    5:5:android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long):0 -> e
    1:1:void android.support.v7.widget.ActionMenuPresenter.onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    1:1:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    2:2:int android.support.v7.view.ActionBarPolicy.getMaxActionButtons():0:0 -> onConfigurationChanged
    2:2:void android.support.v7.widget.ActionMenuPresenter.onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    2:2:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    3:3:void android.support.v7.widget.ActionMenuPresenter.onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    3:3:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
android.support.v7.widget.AbsActionBarView$VisibilityAnimListener -> s0.a$a:
    boolean mCanceled -> a
    int mFinalVisibility -> b
    android.support.v7.widget.AbsActionBarView this$0 -> c
    void onAnimationEnd(android.view.View) -> a
    void onAnimationStart(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v7.widget.ActionBarBackgroundDrawable -> s0.b:
    android.support.v7.widget.ActionBarContainer mContainer -> a
android.support.v7.widget.ActionBarContainer -> android.support.v7.widget.ActionBarContainer:
    android.graphics.drawable.Drawable mBackground -> f
    android.graphics.drawable.Drawable mStackedBackground -> g
    boolean mIsSplit -> i
    android.graphics.drawable.Drawable mSplitBackground -> h
    boolean mIsStacked -> j
    int mHeight -> k
    android.view.View mTabContainer -> c
    android.view.View mContextView -> e
    boolean mIsTransitioning -> b
    android.view.View mActionBarView -> d
    1:1:void android.support.v4.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    int getMeasuredHeightWithMargins(android.view.View) -> a
    boolean isCollapsed(android.view.View) -> b
android.support.v7.widget.ActionBarContextView -> android.support.v7.widget.ActionBarContextView:
    android.widget.TextView mTitleView -> o
    android.widget.TextView mSubtitleView -> p
    android.view.View mCustomView -> m
    android.widget.LinearLayout mTitleLayout -> n
    android.view.View mClose -> l
    int mCloseItemLayout -> t
    int mSubtitleStyleRes -> r
    java.lang.CharSequence mTitle -> j
    boolean mTitleOptional -> s
    java.lang.CharSequence mSubtitle -> k
    int mTitleStyleRes -> q
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:android.support.v7.widget.TintTypedArray android.support.v7.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:android.graphics.drawable.Drawable android.support.v7.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    5:5:void android.support.v4.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    6:6:int android.support.v7.widget.TintTypedArray.getResourceId(int,int):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    8:8:int android.support.v7.widget.TintTypedArray.getResourceId(int,int):0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    10:10:int android.support.v7.widget.TintTypedArray.getLayoutDimension(int,int):0:0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    12:12:int android.support.v7.widget.TintTypedArray.getResourceId(int,int):0:0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    14:14:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:void android.support.v7.widget.ActionMenuPresenter.setReserveOverflow(boolean):0:0 -> f
    1:1:void initForMode(android.support.v7.view.ActionMode):0 -> f
    2:2:void initForMode(android.support.v7.view.ActionMode):0:0 -> f
    3:3:android.support.v7.view.menu.MenuView android.support.v7.widget.ActionMenuPresenter.getMenuView(android.view.ViewGroup):0:0 -> f
    3:3:void initForMode(android.support.v7.view.ActionMode):0 -> f
    4:4:android.support.v7.view.menu.MenuView android.support.v7.view.menu.BaseMenuPresenter.getMenuView(android.view.ViewGroup):0:0 -> f
    4:4:android.support.v7.view.menu.MenuView android.support.v7.widget.ActionMenuPresenter.getMenuView(android.view.ViewGroup):0 -> f
    4:4:void initForMode(android.support.v7.view.ActionMode):0 -> f
    5:5:android.support.v7.view.menu.MenuView android.support.v7.widget.ActionMenuPresenter.getMenuView(android.view.ViewGroup):0:0 -> f
    5:5:void initForMode(android.support.v7.view.ActionMode):0 -> f
    6:6:void initForMode(android.support.v7.view.ActionMode):0:0 -> f
    7:7:void android.support.v4.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> f
    7:7:void initForMode(android.support.v7.view.ActionMode):0 -> f
    8:8:void initForMode(android.support.v7.view.ActionMode):0:0 -> f
    void initTitle() -> g
    void killMode() -> h
android.support.v7.widget.ActionBarContextView$1 -> android.support.v7.widget.ActionBarContextView$a:
    android.support.v7.view.ActionMode val$mode -> b
android.support.v7.widget.ActionBarOverlayLayout -> android.support.v7.widget.ActionBarOverlayLayout:
    int mLastSystemUiVisibility -> n
    android.graphics.drawable.Drawable mWindowContentOverlay -> g
    boolean mOverlayMode -> i
    boolean mHideOnContentScroll -> k
    android.support.v4.view.NestedScrollingParentHelper mParentHelper -> B
    java.lang.Runnable mRemoveActionBarHideOffset -> z
    int mActionBarHeight -> b
    android.support.v7.widget.ContentFrameLayout mContent -> d
    android.graphics.Rect mLastBaseContentInsets -> p
    android.animation.AnimatorListenerAdapter mTopAnimatorListener -> y
    int[] ATTRS -> C
    boolean mIgnoreWindowContentOverlay -> h
    android.support.v7.widget.DecorToolbar mDecorToolbar -> f
    android.graphics.Rect mInnerInsets -> t
    android.graphics.Rect mBaseInnerInsets -> r
    int mHideOnContentScrollReference -> m
    android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator -> x
    boolean mHasNonEmbeddedTabs -> j
    boolean mAnimatingForFling -> l
    java.lang.Runnable mAddActionBarHideOffset -> A
    int mWindowVisibility -> c
    android.graphics.Rect mBaseContentInsets -> o
    android.support.v7.widget.ActionBarContainer mActionBarTop -> e
    android.graphics.Rect mLastInnerInsets -> u
    android.support.v7.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback -> v
    android.widget.OverScroller mFlingEstimator -> w
    android.graphics.Rect mLastBaseInnerInsets -> s
    android.graphics.Rect mContentInsets -> q
    boolean showOverflowMenu() -> a
    boolean isOverflowMenuShowPending() -> b
    void setMenuPrepared() -> c
    boolean isOverflowMenuShowing() -> d
    boolean canShowOverflowMenu() -> e
    void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback) -> f
    1:1:int android.support.v4.view.ViewCompat.getWindowSystemUiVisibility(android.view.View):0:0 -> fitSystemWindows
    1:1:boolean fitSystemWindows(android.graphics.Rect):0 -> fitSystemWindows
    2:2:boolean fitSystemWindows(android.graphics.Rect):0:0 -> fitSystemWindows
    boolean hideOverflowMenu() -> g
    1:1:android.support.v7.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams():0:0 -> generateDefaultLayoutParams
    1:1:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams():0 -> generateDefaultLayoutParams
    1:1:android.support.v7.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> generateLayoutParams
    1:1:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> generateLayoutParams
    1:1:int android.support.v4.view.NestedScrollingParentHelper.getNestedScrollAxes():0:0 -> getNestedScrollAxes
    1:1:int getNestedScrollAxes():0 -> getNestedScrollAxes
    void initFeature(int) -> h
    void dismissPopups() -> i
    boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> j
    void haltActionBarHideOffsetAnimations() -> k
    void init(android.content.Context) -> l
    1:1:android.support.v7.widget.DecorToolbar getDecorToolbar(android.view.View):0:0 -> m
    1:1:void pullChildren():0 -> m
    2:2:void pullChildren():0:0 -> m
    3:3:android.support.v7.widget.DecorToolbar getDecorToolbar(android.view.View):0:0 -> m
    3:3:void pullChildren():0 -> m
    1:1:void android.support.v4.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> onConfigurationChanged
    1:1:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    1:1:int android.support.v4.view.ViewCompat.getWindowSystemUiVisibility(android.view.View):0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
    1:1:boolean shouldHideActionBarOnFling(float,float):0:0 -> onNestedFling
    1:1:boolean onNestedFling(android.view.View,float,float,boolean):0 -> onNestedFling
    2:2:void addActionBarHideOffset():0:0 -> onNestedFling
    2:2:boolean onNestedFling(android.view.View,float,float,boolean):0 -> onNestedFling
    3:3:void removeActionBarHideOffset():0:0 -> onNestedFling
    3:3:boolean onNestedFling(android.view.View,float,float,boolean):0 -> onNestedFling
    4:4:boolean onNestedFling(android.view.View,float,float,boolean):0:0 -> onNestedFling
    1:1:void android.support.v4.view.NestedScrollingParentHelper.onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> onNestedScrollAccepted
    1:1:void android.support.v4.view.NestedScrollingParentHelper.onNestedScrollAccepted(android.view.View,android.view.View,int):0 -> onNestedScrollAccepted
    1:1:void onNestedScrollAccepted(android.view.View,android.view.View,int):0 -> onNestedScrollAccepted
    2:2:void onNestedScrollAccepted(android.view.View,android.view.View,int):0:0 -> onNestedScrollAccepted
    3:3:void android.support.v7.app.WindowDecorActionBar.onContentScrollStarted():0:0 -> onNestedScrollAccepted
    3:3:void onNestedScrollAccepted(android.view.View,android.view.View,int):0 -> onNestedScrollAccepted
    1:1:void postRemoveActionBarHideOffset():0:0 -> onStopNestedScroll
    1:1:void onStopNestedScroll(android.view.View):0 -> onStopNestedScroll
    2:2:void postAddActionBarHideOffset():0:0 -> onStopNestedScroll
    2:2:void onStopNestedScroll(android.view.View):0 -> onStopNestedScroll
    3:3:void onStopNestedScroll(android.view.View):0:0 -> onStopNestedScroll
    1:1:void android.support.v7.app.WindowDecorActionBar.enableContentAnimations(boolean):0:0 -> onWindowSystemUiVisibilityChanged
    1:1:void onWindowSystemUiVisibilityChanged(int):0 -> onWindowSystemUiVisibilityChanged
    2:2:void onWindowSystemUiVisibilityChanged(int):0:0 -> onWindowSystemUiVisibilityChanged
    3:3:void android.support.v7.app.WindowDecorActionBar.hideForSystem():0:0 -> onWindowSystemUiVisibilityChanged
    3:3:void onWindowSystemUiVisibilityChanged(int):0 -> onWindowSystemUiVisibilityChanged
    4:4:void onWindowSystemUiVisibilityChanged(int):0:0 -> onWindowSystemUiVisibilityChanged
    5:5:void android.support.v7.app.WindowDecorActionBar.showForSystem():0:0 -> onWindowSystemUiVisibilityChanged
    5:5:void onWindowSystemUiVisibilityChanged(int):0 -> onWindowSystemUiVisibilityChanged
    6:6:void onWindowSystemUiVisibilityChanged(int):0:0 -> onWindowSystemUiVisibilityChanged
    7:7:void android.support.v4.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> onWindowSystemUiVisibilityChanged
    7:7:void onWindowSystemUiVisibilityChanged(int):0 -> onWindowSystemUiVisibilityChanged
    1:1:void android.support.v7.app.WindowDecorActionBar.onWindowVisibilityChanged(int):0:0 -> onWindowVisibilityChanged
    1:1:void onWindowVisibilityChanged(int):0 -> onWindowVisibilityChanged
    1:1:void android.support.v7.app.WindowDecorActionBar.onWindowVisibilityChanged(int):0:0 -> setActionBarVisibilityCallback
    1:1:void setActionBarVisibilityCallback(android.support.v7.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback):0 -> setActionBarVisibilityCallback
    2:2:void setActionBarVisibilityCallback(android.support.v7.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback):0:0 -> setActionBarVisibilityCallback
    3:3:void android.support.v4.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> setActionBarVisibilityCallback
    3:3:void setActionBarVisibilityCallback(android.support.v7.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback):0 -> setActionBarVisibilityCallback
android.support.v7.widget.ActionBarOverlayLayout$1 -> android.support.v7.widget.ActionBarOverlayLayout$a:
    android.support.v7.widget.ActionBarOverlayLayout this$0 -> a
android.support.v7.widget.ActionBarOverlayLayout$2 -> android.support.v7.widget.ActionBarOverlayLayout$b:
    android.support.v7.widget.ActionBarOverlayLayout this$0 -> b
android.support.v7.widget.ActionBarOverlayLayout$3 -> android.support.v7.widget.ActionBarOverlayLayout$c:
    android.support.v7.widget.ActionBarOverlayLayout this$0 -> b
android.support.v7.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback -> android.support.v7.widget.ActionBarOverlayLayout$d:
android.support.v7.widget.ActionBarOverlayLayout$LayoutParams -> android.support.v7.widget.ActionBarOverlayLayout$e:
android.support.v7.widget.ActionMenuPresenter -> android.support.v7.widget.a:
    boolean mReserveOverflow -> m
    boolean mReserveOverflowSet -> n
    int mWidthLimit -> o
    android.util.SparseBooleanArray mActionButtonGroups -> s
    boolean mPendingOverflowIconSet -> l
    android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> v
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup mOverflowPopup -> u
    boolean mExpandedActionViewsExclusive -> r
    android.view.View mScrapActionButtonView -> t
    android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback mPopupCallback -> x
    android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> y
    android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton mOverflowButton -> j
    android.graphics.drawable.Drawable mPendingOverflowIcon -> k
    android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> w
    int mActionItemWidthLimit -> p
    int mMaxItems -> q
    1:1:void android.support.v7.view.menu.BaseMenuPresenter.onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean):0:0 -> a
    1:1:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean):0 -> a
    1:1:android.view.Menu android.support.v7.view.menu.SubMenuBuilder.getParentMenu():0:0 -> b
    1:1:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    2:2:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0:0 -> b
    3:3:android.view.MenuItem android.support.v7.view.menu.SubMenuBuilder.getItem():0:0 -> b
    3:3:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    4:4:android.view.View findViewForItem(android.view.MenuItem):0:0 -> b
    4:4:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    5:5:android.view.MenuItem android.support.v7.view.menu.SubMenuBuilder.getItem():0:0 -> b
    5:5:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    6:6:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0:0 -> b
    7:7:void android.support.v7.view.menu.MenuPopupHelper.setForceShowIcon(boolean):0:0 -> b
    7:7:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    8:8:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0:0 -> b
    9:9:void android.support.v7.view.menu.MenuPopupHelper.show():0:0 -> b
    9:9:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    10:10:boolean android.support.v7.view.menu.BaseMenuPresenter.onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0:0 -> b
    10:10:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    11:11:void android.support.v7.view.menu.MenuPopupHelper.show():0:0 -> b
    11:11:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0 -> b
    boolean dismissPopupMenus() -> c
    1:1:android.view.View android.support.v7.view.menu.BaseMenuPresenter.getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0:0 -> d
    1:1:android.view.View getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> d
    2:2:android.support.v7.view.menu.MenuView$ItemView android.support.v7.view.menu.BaseMenuPresenter.createItemView(android.view.ViewGroup):0:0 -> d
    2:2:android.view.View android.support.v7.view.menu.BaseMenuPresenter.getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> d
    2:2:android.view.View getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> d
    3:3:void bindItemView(android.support.v7.view.menu.MenuItemImpl,android.support.v7.view.menu.MenuView$ItemView):0:0 -> d
    3:3:android.view.View android.support.v7.view.menu.BaseMenuPresenter.getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> d
    3:3:android.view.View getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> d
    4:4:android.view.View android.support.v7.view.menu.BaseMenuPresenter.getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0:0 -> d
    4:4:android.view.View getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> d
    5:5:boolean android.support.v7.view.menu.MenuItemImpl.isActionViewExpanded():0:0 -> d
    5:5:android.view.View getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> d
    6:6:android.view.View getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0:0 -> d
    1:1:void android.support.v7.view.menu.MenuPopupHelper.dismiss():0:0 -> f
    1:1:boolean hideOverflowMenu():0 -> f
    1:1:boolean android.support.v7.view.menu.MenuItemImpl.requiresActionButton():0:0 -> g
    1:1:boolean flagActionItems():0 -> g
    2:2:boolean flagActionItems():0:0 -> g
    3:3:boolean android.support.v7.view.menu.MenuItemImpl.isActionViewExpanded():0:0 -> g
    3:3:boolean flagActionItems():0 -> g
    4:4:boolean flagActionItems():0:0 -> g
    5:5:boolean android.support.v7.view.menu.MenuItemImpl.requiresActionButton():0:0 -> g
    5:5:boolean flagActionItems():0 -> g
    6:6:boolean flagActionItems():0:0 -> g
    7:7:int android.support.v7.view.menu.MenuItemImpl.getGroupId():0:0 -> g
    7:7:boolean flagActionItems():0 -> g
    8:8:boolean flagActionItems():0:0 -> g
    9:9:int android.support.v7.view.menu.MenuItemImpl.getGroupId():0:0 -> g
    9:9:boolean flagActionItems():0 -> g
    10:10:boolean flagActionItems():0:0 -> g
    11:11:int android.support.v7.view.menu.MenuItemImpl.getGroupId():0:0 -> g
    11:11:boolean flagActionItems():0 -> g
    12:12:boolean flagActionItems():0:0 -> g
    1:1:void android.support.v7.view.menu.BaseMenuPresenter.updateMenuView(boolean):0:0 -> i
    1:1:void updateMenuView(boolean):0 -> i
    2:2:boolean shouldIncludeItem(int,android.support.v7.view.menu.MenuItemImpl):0:0 -> i
    2:2:void android.support.v7.view.menu.BaseMenuPresenter.updateMenuView(boolean):0 -> i
    2:2:void updateMenuView(boolean):0 -> i
    3:3:void android.support.v7.view.menu.BaseMenuPresenter.updateMenuView(boolean):0:0 -> i
    3:3:void updateMenuView(boolean):0 -> i
    4:4:void android.support.v7.view.menu.BaseMenuPresenter.addItemView(android.view.View,int):0:0 -> i
    4:4:void android.support.v7.view.menu.BaseMenuPresenter.updateMenuView(boolean):0 -> i
    4:4:void updateMenuView(boolean):0 -> i
    5:5:void android.support.v7.view.menu.BaseMenuPresenter.updateMenuView(boolean):0:0 -> i
    5:5:void updateMenuView(boolean):0 -> i
    6:6:boolean filterLeftoverView(android.view.ViewGroup,int):0:0 -> i
    6:6:void android.support.v7.view.menu.BaseMenuPresenter.updateMenuView(boolean):0 -> i
    6:6:void updateMenuView(boolean):0 -> i
    7:7:boolean android.support.v7.view.menu.BaseMenuPresenter.filterLeftoverView(android.view.ViewGroup,int):0:0 -> i
    7:7:boolean filterLeftoverView(android.view.ViewGroup,int):0 -> i
    7:7:void android.support.v7.view.menu.BaseMenuPresenter.updateMenuView(boolean):0 -> i
    7:7:void updateMenuView(boolean):0 -> i
    8:8:void updateMenuView(boolean):0:0 -> i
    9:9:java.util.ArrayList android.support.v7.view.menu.MenuBuilder.getActionItems():0:0 -> i
    9:9:void updateMenuView(boolean):0 -> i
    10:10:void updateMenuView(boolean):0:0 -> i
    11:11:android.support.v4.view.ActionProvider android.support.v7.view.menu.MenuItemImpl.getSupportActionProvider():0:0 -> i
    11:11:void updateMenuView(boolean):0 -> i
    12:12:void updateMenuView(boolean):0:0 -> i
    13:13:java.util.ArrayList android.support.v7.view.menu.MenuBuilder.getNonActionItems():0:0 -> i
    13:13:void updateMenuView(boolean):0 -> i
    14:14:void updateMenuView(boolean):0:0 -> i
    15:15:boolean android.support.v7.view.menu.MenuItemImpl.isActionViewExpanded():0:0 -> i
    15:15:void updateMenuView(boolean):0 -> i
    16:16:void updateMenuView(boolean):0:0 -> i
    17:17:android.support.v7.widget.ActionMenuView$LayoutParams android.support.v7.widget.ActionMenuView.generateOverflowButtonLayoutParams():0:0 -> i
    17:17:void updateMenuView(boolean):0 -> i
    18:18:void updateMenuView(boolean):0:0 -> i
    1:1:void android.support.v7.view.menu.BaseMenuPresenter.initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder):0:0 -> k
    1:1:void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder):0 -> k
    2:2:void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder):0:0 -> k
    3:3:int android.support.v7.view.ActionBarPolicy.getEmbeddedMenuWidthLimit():0:0 -> k
    3:3:void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder):0 -> k
    4:4:void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder):0:0 -> k
    5:5:int android.support.v7.view.ActionBarPolicy.getMaxActionButtons():0:0 -> k
    5:5:void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder):0 -> k
    6:6:void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder):0:0 -> k
    1:1:void android.support.v7.view.menu.MenuPopupHelper.dismiss():0:0 -> l
    1:1:boolean hideSubMenus():0 -> l
    boolean isOverflowMenuShowing() -> m
    1:1:java.util.ArrayList android.support.v7.view.menu.MenuBuilder.getNonActionItems():0:0 -> n
    1:1:boolean showOverflowMenu():0 -> n
    2:2:boolean showOverflowMenu():0:0 -> n
    3:3:boolean android.support.v7.view.menu.BaseMenuPresenter.onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder):0:0 -> n
    3:3:boolean showOverflowMenu():0 -> n
android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu -> android.support.v7.widget.a$a:
    android.support.v7.widget.ActionMenuPresenter this$0 -> m
    1:1:void android.support.v7.view.menu.MenuPopupHelper.<init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean,int):0:0 -> <init>
    1:1:void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
    2:2:android.view.MenuItem android.support.v7.view.menu.SubMenuBuilder.getItem():0:0 -> <init>
    2:2:void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
    3:3:void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.SubMenuBuilder,android.view.View):0:0 -> <init>
    4:4:android.support.v7.view.menu.MenuView android.support.v7.widget.ActionMenuPresenter.access$200(android.support.v7.widget.ActionMenuPresenter):0:0 -> <init>
    4:4:void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
    5:5:void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.SubMenuBuilder,android.view.View):0:0 -> <init>
    6:6:void android.support.v7.view.menu.MenuPopupHelper.setAnchorView(android.view.View):0:0 -> <init>
    6:6:void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
    7:7:void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.SubMenuBuilder,android.view.View):0:0 -> <init>
    void onDismiss() -> c
android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback -> android.support.v7.widget.a$b:
    android.support.v7.widget.ActionMenuPresenter this$0 -> a
android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable -> android.support.v7.widget.a$c:
    android.support.v7.widget.ActionMenuPresenter this$0 -> c
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup mPopup -> b
    1:1:android.support.v7.view.menu.MenuBuilder android.support.v7.widget.ActionMenuPresenter.access$300(android.support.v7.widget.ActionMenuPresenter):0:0 -> run
    1:1:void run():0 -> run
    2:2:void android.support.v7.view.menu.MenuBuilder.changeMenuMode():0:0 -> run
    2:2:void run():0 -> run
    3:3:void run():0:0 -> run
    4:4:android.support.v7.view.menu.MenuView android.support.v7.widget.ActionMenuPresenter.access$500(android.support.v7.widget.ActionMenuPresenter):0:0 -> run
    4:4:void run():0 -> run
    5:5:void run():0:0 -> run
android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton -> android.support.v7.widget.a$d:
    android.support.v7.widget.ActionMenuPresenter this$0 -> d
    boolean needsDividerBefore() -> a
    boolean needsDividerAfter() -> b
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int):0:0 -> setFrame
    1:1:boolean setFrame(int,int,int,int):0 -> setFrame
android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1 -> android.support.v7.widget.a$d$a:
    android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton this$1 -> k
    android.support.v7.view.menu.ShowableListMenu getPopup() -> b
    boolean onForwardingStarted() -> c
    boolean onForwardingStopped() -> d
android.support.v7.widget.ActionMenuPresenter$OverflowPopup -> android.support.v7.widget.a$e:
    android.support.v7.widget.ActionMenuPresenter this$0 -> m
    1:1:void android.support.v7.view.menu.MenuPopupHelper.<init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean,int):0:0 -> <init>
    1:1:void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean):0 -> <init>
    2:2:void android.support.v7.view.menu.MenuPopupHelper.setGravity(int):0:0 -> <init>
    2:2:void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean):0 -> <init>
    3:3:void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean):0:0 -> <init>
    1:1:android.support.v7.view.menu.MenuBuilder android.support.v7.widget.ActionMenuPresenter.access$000(android.support.v7.widget.ActionMenuPresenter):0:0 -> c
    1:1:void onDismiss():0 -> c
    2:2:void android.support.v7.view.menu.MenuBuilder.close():0:0 -> c
    2:2:void onDismiss():0 -> c
    3:3:void onDismiss():0:0 -> c
android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback -> android.support.v7.widget.a$f:
    android.support.v7.widget.ActionMenuPresenter this$0 -> b
    1:1:android.support.v7.view.menu.MenuPresenter$Callback android.support.v7.view.menu.BaseMenuPresenter.getCallback():0:0 -> a
    1:1:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean):0 -> a
    2:2:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean):0:0 -> a
    1:1:android.view.MenuItem android.support.v7.view.menu.SubMenuBuilder.getItem():0:0 -> b
    1:1:boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder):0 -> b
    2:2:boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder):0:0 -> b
    3:3:android.support.v7.view.menu.MenuPresenter$Callback android.support.v7.view.menu.BaseMenuPresenter.getCallback():0:0 -> b
    3:3:boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder):0 -> b
    4:4:boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder):0:0 -> b
android.support.v7.widget.ActionMenuView -> android.support.v7.widget.ActionMenuView:
    android.support.v7.widget.ActionMenuPresenter mPresenter -> u
    android.support.v7.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> w
    android.support.v7.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> v
    android.content.Context mPopupContext -> r
    android.support.v7.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener -> B
    android.support.v7.view.menu.MenuBuilder mMenu -> q
    int mMinCellSize -> z
    int mFormatItemsWidth -> y
    boolean mFormatItems -> x
    int mPopupTheme -> s
    boolean mReserveOverflow -> t
    int mGeneratedItemPadding -> A
    void initialize(android.support.v7.view.menu.MenuBuilder) -> b
    1:1:boolean android.support.v7.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int):0:0 -> c
    1:1:boolean invokeItem(android.support.v7.view.menu.MenuItemImpl):0 -> c
    1:1:android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> generateLayoutParams
    1:1:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> generateLayoutParams
    1:1:void android.support.v7.view.menu.MenuBuilder.setCallback(android.support.v7.view.menu.MenuBuilder$Callback):0:0 -> getMenu
    1:1:android.view.Menu getMenu():0 -> getMenu
    2:2:android.view.Menu getMenu():0:0 -> getMenu
    3:3:void android.support.v7.widget.ActionMenuPresenter.setReserveOverflow(boolean):0:0 -> getMenu
    3:3:android.view.Menu getMenu():0 -> getMenu
    4:4:android.view.Menu getMenu():0:0 -> getMenu
    5:5:void android.support.v7.view.menu.BaseMenuPresenter.setCallback(android.support.v7.view.menu.MenuPresenter$Callback):0:0 -> getMenu
    5:5:android.view.Menu getMenu():0 -> getMenu
    6:6:android.view.Menu getMenu():0:0 -> getMenu
    7:7:void android.support.v7.widget.ActionMenuPresenter.setMenuView(android.support.v7.widget.ActionMenuView):0:0 -> getMenu
    7:7:android.view.Menu getMenu():0 -> getMenu
    8:8:void initialize(android.support.v7.view.menu.MenuBuilder):0:0 -> getMenu
    8:8:void android.support.v7.widget.ActionMenuPresenter.setMenuView(android.support.v7.widget.ActionMenuView):0 -> getMenu
    8:8:android.view.Menu getMenu():0 -> getMenu
    9:9:android.view.Menu getMenu():0:0 -> getMenu
    1:1:android.graphics.drawable.Drawable android.support.v7.widget.ActionMenuPresenter.getOverflowIcon():0:0 -> getOverflowIcon
    1:1:android.graphics.drawable.Drawable getOverflowIcon():0 -> getOverflowIcon
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> h
    1:1:android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> i
    1:1:android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> i
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> j
    android.support.v7.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> l
    android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> m
    boolean hasSupportDividerBeforeChildAt(int) -> n
    int measureChildForCells(android.view.View,int,int,int,int) -> o
    1:1:void dismissPopupMenus():0:0 -> onDetachedFromWindow
    1:1:void onDetachedFromWindow():0 -> onDetachedFromWindow
    1:1:void onMeasureExactFormat(int,int):0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
    1:1:void android.support.v7.widget.ActionMenuPresenter.setExpandedActionViewsExclusive(boolean):0:0 -> setExpandedActionViewsExclusive
    1:1:void setExpandedActionViewsExclusive(boolean):0 -> setExpandedActionViewsExclusive
    1:1:void android.support.v7.widget.ActionMenuPresenter.setOverflowIcon(android.graphics.drawable.Drawable):0:0 -> setOverflowIcon
    1:1:void setOverflowIcon(android.graphics.drawable.Drawable):0 -> setOverflowIcon
    1:1:void android.support.v7.widget.ActionMenuPresenter.setMenuView(android.support.v7.widget.ActionMenuView):0:0 -> setPresenter
    1:1:void setPresenter(android.support.v7.widget.ActionMenuPresenter):0 -> setPresenter
    2:2:void initialize(android.support.v7.view.menu.MenuBuilder):0:0 -> setPresenter
    2:2:void android.support.v7.widget.ActionMenuPresenter.setMenuView(android.support.v7.widget.ActionMenuView):0 -> setPresenter
    2:2:void setPresenter(android.support.v7.widget.ActionMenuPresenter):0 -> setPresenter
android.support.v7.widget.ActionMenuView$ActionMenuChildView -> android.support.v7.widget.ActionMenuView$a:
    boolean needsDividerBefore() -> a
    boolean needsDividerAfter() -> b
android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback -> android.support.v7.widget.ActionMenuView$b:
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> b
android.support.v7.widget.ActionMenuView$LayoutParams -> android.support.v7.widget.ActionMenuView$c:
    boolean expandable -> f
    int cellsUsed -> d
    boolean preventEdgeOffset -> g
    int extraPixels -> e
    boolean expanded -> h
    boolean isOverflowButton -> c
android.support.v7.widget.ActionMenuView$MenuBuilderCallback -> android.support.v7.widget.ActionMenuView$d:
    android.support.v7.widget.ActionMenuView this$0 -> b
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> a
    1:1:boolean android.support.v7.widget.Toolbar$1.onMenuItemClick(android.view.MenuItem):0:0 -> b
    1:1:boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem):0 -> b
android.support.v7.widget.ActionMenuView$OnMenuItemClickListener -> android.support.v7.widget.ActionMenuView$e:
android.support.v7.widget.ActivityChooserView$InnerLayout -> android.support.v7.widget.ActivityChooserView$InnerLayout:
    int[] TINT_ATTRS -> b
    1:1:android.support.v7.widget.TintTypedArray android.support.v7.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:android.graphics.drawable.Drawable android.support.v7.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    4:4:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
android.support.v7.widget.AdapterHelper -> android.support.v7.widget.b:
    android.support.v7.widget.AdapterHelper$Callback mCallback -> d
    java.util.ArrayList mPostponedList -> c
    android.support.v4.util.Pools$Pool mUpdateOpPool -> a
    java.util.ArrayList mPendingUpdates -> b
    android.support.v7.widget.OpReorderer mOpReorderer -> e
    1:1:void <init>(android.support.v7.widget.AdapterHelper$Callback,boolean):0:0 -> <init>
    1:1:void <init>(android.support.v7.widget.AdapterHelper$Callback):0 -> <init>
    boolean canFindInPreLayout(int) -> a
    1:1:void android.support.v7.widget.RecyclerView$6.onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> b
    1:1:void consumePostponedUpdates():0 -> b
    2:2:void consumePostponedUpdates():0:0 -> b
    1:1:void android.support.v7.widget.RecyclerView$6.onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> c
    1:1:void consumeUpdatesInOnePass():0 -> c
    2:2:void consumeUpdatesInOnePass():0:0 -> c
    3:3:void android.support.v7.widget.RecyclerView$6.onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> c
    3:3:void consumeUpdatesInOnePass():0 -> c
    4:4:void consumeUpdatesInOnePass():0:0 -> c
    5:5:void android.support.v7.widget.RecyclerView$6.onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> c
    5:5:void consumeUpdatesInOnePass():0 -> c
    6:6:void consumeUpdatesInOnePass():0:0 -> c
    7:7:void android.support.v7.widget.RecyclerView$6.offsetPositionsForRemovingInvisible(int,int):0:0 -> c
    7:7:void consumeUpdatesInOnePass():0 -> c
    8:8:void consumeUpdatesInOnePass():0:0 -> c
    9:9:void android.support.v7.widget.RecyclerView$6.onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> c
    9:9:void consumeUpdatesInOnePass():0 -> c
    10:10:void consumeUpdatesInOnePass():0:0 -> c
    1:1:void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> d
    1:1:void dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp):0 -> d
    2:2:void dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> d
    3:3:void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> d
    3:3:void dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp):0 -> d
    4:4:void dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> d
    5:5:void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> d
    5:5:void dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp):0 -> d
    6:6:void dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> d
    1:1:void android.support.v7.widget.RecyclerView$6.onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> e
    1:1:void dispatchFirstPassAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp,int):0 -> e
    2:2:void dispatchFirstPassAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp,int):0:0 -> e
    3:3:void android.support.v7.widget.RecyclerView$6.offsetPositionsForRemovingInvisible(int,int):0:0 -> e
    3:3:void dispatchFirstPassAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp,int):0 -> e
    int findPositionOffset(int,int) -> f
    boolean hasPendingUpdates() -> g
    android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> h
    1:1:void android.support.v7.widget.RecyclerView$6.offsetPositionsForRemovingLaidOutOrNewView(int,int):0:0 -> i
    1:1:void postponeAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp):0 -> i
    2:2:void postponeAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> i
    1:1:int android.support.v7.widget.OpReorderer.getLastMoveOutOfOrder(java.util.List):0:0 -> j
    1:1:void android.support.v7.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    1:1:void preProcess():0 -> j
    2:2:void android.support.v7.widget.OpReorderer.swapMoveOp(java.util.List,int,int):0:0 -> j
    2:2:void android.support.v7.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    2:2:void preProcess():0 -> j
    3:3:void android.support.v7.widget.OpReorderer.swapMoveUpdate(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> j
    3:3:void android.support.v7.widget.OpReorderer.swapMoveOp(java.util.List,int,int):0 -> j
    3:3:void android.support.v7.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    3:3:void preProcess():0 -> j
    4:4:void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> j
    4:4:void android.support.v7.widget.OpReorderer.swapMoveUpdate(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp):0 -> j
    4:4:void android.support.v7.widget.OpReorderer.swapMoveOp(java.util.List,int,int):0 -> j
    4:4:void android.support.v7.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    4:4:void preProcess():0 -> j
    5:5:void android.support.v7.widget.OpReorderer.swapMoveUpdate(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> j
    5:5:void android.support.v7.widget.OpReorderer.swapMoveOp(java.util.List,int,int):0 -> j
    5:5:void android.support.v7.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    5:5:void preProcess():0 -> j
    6:6:void android.support.v7.widget.OpReorderer.swapMoveRemove(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> j
    6:6:void android.support.v7.widget.OpReorderer.swapMoveOp(java.util.List,int,int):0 -> j
    6:6:void android.support.v7.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    6:6:void preProcess():0 -> j
    7:7:void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> j
    7:7:void android.support.v7.widget.OpReorderer.swapMoveRemove(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp):0 -> j
    7:7:void android.support.v7.widget.OpReorderer.swapMoveOp(java.util.List,int,int):0 -> j
    7:7:void android.support.v7.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    7:7:void preProcess():0 -> j
    8:8:void android.support.v7.widget.OpReorderer.swapMoveRemove(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> j
    8:8:void android.support.v7.widget.OpReorderer.swapMoveOp(java.util.List,int,int):0 -> j
    8:8:void android.support.v7.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    8:8:void preProcess():0 -> j
    9:9:void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> j
    9:9:void android.support.v7.widget.OpReorderer.swapMoveRemove(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp):0 -> j
    9:9:void android.support.v7.widget.OpReorderer.swapMoveOp(java.util.List,int,int):0 -> j
    9:9:void android.support.v7.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    9:9:void preProcess():0 -> j
    10:10:void android.support.v7.widget.OpReorderer.swapMoveRemove(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> j
    10:10:void android.support.v7.widget.OpReorderer.swapMoveOp(java.util.List,int,int):0 -> j
    10:10:void android.support.v7.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    10:10:void preProcess():0 -> j
    11:11:void android.support.v7.widget.OpReorderer.swapMoveAdd(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> j
    11:11:void android.support.v7.widget.OpReorderer.swapMoveOp(java.util.List,int,int):0 -> j
    11:11:void android.support.v7.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    11:11:void preProcess():0 -> j
    12:12:void preProcess():0:0 -> j
    13:13:void applyMove(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> j
    13:13:void preProcess():0 -> j
    14:14:void applyUpdate(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> j
    14:14:void preProcess():0 -> j
    15:15:void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> j
    15:15:void applyUpdate(android.support.v7.widget.AdapterHelper$UpdateOp):0 -> j
    15:15:void preProcess():0 -> j
    16:16:void applyUpdate(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> j
    16:16:void preProcess():0 -> j
    17:17:void applyRemove(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> j
    17:17:void preProcess():0 -> j
    18:18:void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> j
    18:18:void applyRemove(android.support.v7.widget.AdapterHelper$UpdateOp):0 -> j
    18:18:void preProcess():0 -> j
    19:19:void applyRemove(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> j
    19:19:void preProcess():0 -> j
    20:20:void applyAdd(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> j
    20:20:void preProcess():0 -> j
    21:21:void preProcess():0:0 -> j
    void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp) -> k
    void recycleUpdateOpsAndClearList(java.util.List) -> l
    1:1:void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp):0:0 -> m
    1:1:int updatePositionWithPostponed(int,int):0 -> m
    2:2:int updatePositionWithPostponed(int,int):0:0 -> m
android.support.v7.widget.AdapterHelper$Callback -> android.support.v7.widget.b$a:
android.support.v7.widget.AdapterHelper$UpdateOp -> android.support.v7.widget.b$b:
    java.lang.Object payload -> c
    int itemCount -> d
    int positionStart -> b
    int cmd -> a
    1:1:java.lang.String cmdToString():0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
android.support.v7.widget.AlertDialogLayout -> android.support.v7.widget.AlertDialogLayout:
    1:1:int android.support.v4.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> l
    1:1:int resolveMinimumHeight(android.view.View):0 -> l
    2:2:int resolveMinimumHeight(android.view.View):0:0 -> l
    1:1:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:int android.support.v4.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0 -> onLayout
    3:3:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    4:4:void setChildFrame(android.view.View,int,int,int,int):0:0 -> onLayout
    4:4:void onLayout(boolean,int,int,int,int):0 -> onLayout
    5:5:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    1:1:boolean tryOnMeasure(int,int):0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void forceUniformWidth(int,int):0:0 -> onMeasure
    2:2:boolean tryOnMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0 -> onMeasure
    3:3:void onMeasure(int,int):0:0 -> onMeasure
android.support.v7.widget.AppCompatAutoCompleteTextView -> s0.c:
    int[] TINT_ATTRS -> d
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> c
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    1:1:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
android.support.v7.widget.AppCompatBackgroundHelper -> s0.d:
    android.support.v7.widget.TintInfo mInternalBackgroundTint -> d
    android.support.v7.widget.AppCompatDrawableManager mDrawableManager -> b
    android.view.View mView -> a
    android.support.v7.widget.TintInfo mTmpInfo -> f
    android.support.v7.widget.TintInfo mBackgroundTint -> e
    int mBackgroundResId -> c
    1:1:boolean android.support.v7.widget.AppCompatBackgroundHelper.shouldApplyFrameworkTintUsingColorFilter():0:0 -> a
    1:1:void applySupportBackgroundTint():0 -> a
    2:2:boolean android.support.v7.widget.AppCompatBackgroundHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    2:2:void applySupportBackgroundTint():0 -> a
    3:3:void android.support.v7.widget.TintInfo.clear():0:0 -> a
    3:3:boolean android.support.v7.widget.AppCompatBackgroundHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0 -> a
    3:3:void applySupportBackgroundTint():0 -> a
    4:4:boolean android.support.v7.widget.AppCompatBackgroundHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    4:4:void applySupportBackgroundTint():0 -> a
    5:5:android.content.res.ColorStateList android.support.v4.view.ViewCompat.getBackgroundTintList(android.view.View):0:0 -> a
    5:5:boolean android.support.v7.widget.AppCompatBackgroundHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0 -> a
    5:5:void applySupportBackgroundTint():0 -> a
    6:6:boolean android.support.v7.widget.AppCompatBackgroundHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    6:6:void applySupportBackgroundTint():0 -> a
    7:7:android.graphics.PorterDuff$Mode android.support.v4.view.ViewCompat.getBackgroundTintMode(android.view.View):0:0 -> a
    7:7:boolean android.support.v7.widget.AppCompatBackgroundHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0 -> a
    7:7:void applySupportBackgroundTint():0 -> a
    8:8:boolean android.support.v7.widget.AppCompatBackgroundHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    8:8:void applySupportBackgroundTint():0 -> a
    9:9:void applySupportBackgroundTint():0:0 -> a
    android.content.res.ColorStateList getSupportBackgroundTintList() -> b
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> c
    1:1:void android.support.v4.view.ViewCompat.setBackgroundTintList(android.view.View,android.content.res.ColorStateList):0:0 -> d
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    2:2:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    3:3:void android.support.v4.view.ViewCompat.setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode):0:0 -> d
    3:3:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    4:4:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> d
    4:4:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    5:5:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> e
    void onSetBackgroundResource(int) -> f
    void setInternalBackgroundTint(android.content.res.ColorStateList) -> g
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> h
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> i
android.support.v7.widget.AppCompatButton -> s0.e:
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> c
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    1:1:int android.support.v7.widget.AppCompatTextHelper.getAutoSizeMaxTextSize():0:0 -> getAutoSizeMaxTextSize
    1:1:int getAutoSizeMaxTextSize():0 -> getAutoSizeMaxTextSize
    2:2:int android.support.v7.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMaxTextSize():0:0 -> getAutoSizeMaxTextSize
    2:2:int android.support.v7.widget.AppCompatTextHelper.getAutoSizeMaxTextSize():0 -> getAutoSizeMaxTextSize
    2:2:int getAutoSizeMaxTextSize():0 -> getAutoSizeMaxTextSize
    1:1:int android.support.v7.widget.AppCompatTextHelper.getAutoSizeMinTextSize():0:0 -> getAutoSizeMinTextSize
    1:1:int getAutoSizeMinTextSize():0 -> getAutoSizeMinTextSize
    2:2:int android.support.v7.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMinTextSize():0:0 -> getAutoSizeMinTextSize
    2:2:int android.support.v7.widget.AppCompatTextHelper.getAutoSizeMinTextSize():0 -> getAutoSizeMinTextSize
    2:2:int getAutoSizeMinTextSize():0 -> getAutoSizeMinTextSize
    1:1:int android.support.v7.widget.AppCompatTextHelper.getAutoSizeStepGranularity():0:0 -> getAutoSizeStepGranularity
    1:1:int getAutoSizeStepGranularity():0 -> getAutoSizeStepGranularity
    2:2:int android.support.v7.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeStepGranularity():0:0 -> getAutoSizeStepGranularity
    2:2:int android.support.v7.widget.AppCompatTextHelper.getAutoSizeStepGranularity():0 -> getAutoSizeStepGranularity
    2:2:int getAutoSizeStepGranularity():0 -> getAutoSizeStepGranularity
    1:1:int[] android.support.v7.widget.AppCompatTextHelper.getAutoSizeTextAvailableSizes():0:0 -> getAutoSizeTextAvailableSizes
    1:1:int[] getAutoSizeTextAvailableSizes():0 -> getAutoSizeTextAvailableSizes
    2:2:int[] android.support.v7.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeTextAvailableSizes():0:0 -> getAutoSizeTextAvailableSizes
    2:2:int[] android.support.v7.widget.AppCompatTextHelper.getAutoSizeTextAvailableSizes():0 -> getAutoSizeTextAvailableSizes
    2:2:int[] getAutoSizeTextAvailableSizes():0 -> getAutoSizeTextAvailableSizes
    1:1:int android.support.v7.widget.AppCompatTextHelper.getAutoSizeTextType():0:0 -> getAutoSizeTextType
    1:1:int getAutoSizeTextType():0 -> getAutoSizeTextType
    2:2:int android.support.v7.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeTextType():0:0 -> getAutoSizeTextType
    2:2:int android.support.v7.widget.AppCompatTextHelper.getAutoSizeTextType():0 -> getAutoSizeTextType
    2:2:int getAutoSizeTextType():0 -> getAutoSizeTextType
    1:1:void android.support.v7.widget.AppCompatTextHelper.onLayout(boolean,int,int,int,int):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void android.support.v7.widget.AppCompatTextHelper.autoSizeText():0:0 -> onLayout
    2:2:void android.support.v7.widget.AppCompatTextHelper.onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0 -> onLayout
    1:1:void android.support.v7.widget.AppCompatTextHelper.autoSizeText():0:0 -> onTextChanged
    1:1:void onTextChanged(java.lang.CharSequence,int,int,int):0 -> onTextChanged
    1:1:void android.support.v7.widget.AppCompatTextHelper.setAllCaps(boolean):0:0 -> setSupportAllCaps
    1:1:void setSupportAllCaps(boolean):0 -> setSupportAllCaps
    1:1:void android.support.v7.widget.AppCompatTextHelper.setTextSize(int,float):0:0 -> setTextSize
    1:1:void setTextSize(int,float):0 -> setTextSize
    2:2:void android.support.v7.widget.AppCompatTextHelper.setTextSizeInternal(int,float):0:0 -> setTextSize
    2:2:void android.support.v7.widget.AppCompatTextHelper.setTextSize(int,float):0 -> setTextSize
    2:2:void setTextSize(int,float):0 -> setTextSize
android.support.v7.widget.AppCompatCheckBox -> s0.f:
    android.support.v7.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper -> b
    1:1:void android.support.v7.widget.AppCompatCheckBox.<init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:android.content.res.ColorStateList android.support.v7.widget.AppCompatCompoundButtonHelper.getSupportButtonTintList():0:0 -> getSupportButtonTintList
    1:1:android.content.res.ColorStateList getSupportButtonTintList():0 -> getSupportButtonTintList
    1:1:android.graphics.PorterDuff$Mode android.support.v7.widget.AppCompatCompoundButtonHelper.getSupportButtonTintMode():0:0 -> getSupportButtonTintMode
    1:1:android.graphics.PorterDuff$Mode getSupportButtonTintMode():0 -> getSupportButtonTintMode
    1:1:void android.support.v7.widget.AppCompatCompoundButtonHelper.onSetButtonDrawable():0:0 -> setButtonDrawable
    1:1:void setButtonDrawable(android.graphics.drawable.Drawable):0 -> setButtonDrawable
    1:1:void android.support.v7.widget.AppCompatCompoundButtonHelper.setSupportButtonTintList(android.content.res.ColorStateList):0:0 -> setSupportButtonTintList
    1:1:void setSupportButtonTintList(android.content.res.ColorStateList):0 -> setSupportButtonTintList
    1:1:void android.support.v7.widget.AppCompatCompoundButtonHelper.setSupportButtonTintMode(android.graphics.PorterDuff$Mode):0:0 -> setSupportButtonTintMode
    1:1:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode):0 -> setSupportButtonTintMode
android.support.v7.widget.AppCompatCheckedTextView -> s0.g:
    int[] TINT_ATTRS -> c
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> b
    1:1:void android.support.v7.widget.AppCompatCheckedTextView.<init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> <init>
    2:2:void android.support.v7.widget.AppCompatCheckedTextView.<init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
android.support.v7.widget.AppCompatCompoundButtonHelper -> s0.h:
    android.content.res.ColorStateList mButtonTintList -> b
    boolean mHasButtonTintMode -> e
    boolean mSkipNextApply -> f
    android.widget.CompoundButton mView -> a
    android.graphics.PorterDuff$Mode mButtonTintMode -> c
    boolean mHasButtonTint -> d
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> a
    1:1:void applyButtonTint():0 -> a
    2:2:void applyButtonTint():0:0 -> a
    3:3:void android.support.v4.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> a
    3:3:void applyButtonTint():0 -> a
    4:4:void applyButtonTint():0:0 -> a
    1:1:void android.support.v4.widget.CompoundButtonCompat.setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList):0:0 -> b
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0 -> b
    2:2:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> b
    3:3:void android.support.v4.widget.CompoundButtonCompat.setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode):0:0 -> b
    3:3:void loadFromAttributes(android.util.AttributeSet,int):0 -> b
    4:4:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> b
android.support.v7.widget.AppCompatDrawableManager -> s0.i:
    android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache COLOR_FILTER_CACHE -> i
    android.support.v7.widget.AppCompatDrawableManager INSTANCE -> h
    android.util.TypedValue mTypedValue -> e
    android.support.v4.util.SparseArrayCompat mKnownDrawableIdTags -> c
    android.support.v4.util.ArrayMap mDelegates -> b
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> g
    int[] TINT_COLOR_CONTROL_STATE_LIST -> n
    boolean mHasCheckedVectorDrawableSetup -> f
    int[] TINT_CHECKABLE_BUTTON_LIST -> o
    java.util.WeakHashMap mDrawableCaches -> d
    int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL -> j
    java.util.WeakHashMap mTintLists -> a
    int[] TINT_COLOR_CONTROL_NORMAL -> k
    int[] COLORFILTER_COLOR_CONTROL_ACTIVATED -> l
    int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY -> m
    void addDelegate(java.lang.String,android.support.v7.widget.AppCompatDrawableManager$InflateDelegate) -> a
    boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> b
    boolean arrayContains(int[],int) -> c
    android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> d
    1:1:long android.support.v7.widget.AppCompatDrawableManager.createCacheKey(android.util.TypedValue):0:0 -> e
    1:1:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int):0 -> e
    2:2:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int):0:0 -> e
    android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> f
    1:1:void android.support.v7.widget.AppCompatDrawableManager.installDefaultInflateDelegates(android.support.v7.widget.AppCompatDrawableManager):0:0 -> g
    1:1:android.support.v7.widget.AppCompatDrawableManager get():0 -> g
    2:2:android.support.v7.widget.AppCompatDrawableManager get():0:0 -> g
    1:1:java.lang.Object android.support.v4.util.LongSparseArray.get(long):0:0 -> h
    1:1:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long):0 -> h
    2:2:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long):0:0 -> h
    3:3:void android.support.v4.util.LongSparseArray.delete(long):0:0 -> h
    3:3:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long):0 -> h
    4:4:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long):0:0 -> h
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> i
    1:1:void android.support.v7.widget.AppCompatDrawableManager.checkVectorDrawableSetup(android.content.Context):0:0 -> j
    1:1:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> j
    2:2:boolean android.support.v7.widget.AppCompatDrawableManager.isVectorDrawable(android.graphics.drawable.Drawable):0:0 -> j
    2:2:void android.support.v7.widget.AppCompatDrawableManager.checkVectorDrawableSetup(android.content.Context):0 -> j
    2:2:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> j
    3:3:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0:0 -> j
    4:4:android.graphics.drawable.Drawable android.support.v4.content.ContextCompat.getDrawable(android.content.Context,int):0:0 -> j
    4:4:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> j
    5:5:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0:0 -> j
    6:6:void android.support.v7.widget.AppCompatDrawableManager.checkVectorDrawableSetup(android.content.Context):0:0 -> j
    6:6:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> j
    1:1:int android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache.generateCacheKey(int,android.graphics.PorterDuff$Mode):0:0 -> k
    1:1:android.graphics.PorterDuffColorFilter android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache.get(int,android.graphics.PorterDuff$Mode):0 -> k
    1:1:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0 -> k
    2:2:android.graphics.PorterDuffColorFilter android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache.get(int,android.graphics.PorterDuff$Mode):0:0 -> k
    2:2:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0 -> k
    3:3:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0:0 -> k
    4:4:int android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache.generateCacheKey(int,android.graphics.PorterDuff$Mode):0:0 -> k
    4:4:android.graphics.PorterDuffColorFilter android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache.put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter):0 -> k
    4:4:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0 -> k
    5:5:android.graphics.PorterDuffColorFilter android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache.put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter):0:0 -> k
    5:5:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0 -> k
    6:6:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0:0 -> k
    1:1:android.content.res.ColorStateList android.support.v7.widget.AppCompatDrawableManager.getTintListFromCache(android.content.Context,int):0:0 -> l
    1:1:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> l
    2:2:java.lang.Object android.support.v4.util.SparseArrayCompat.get(int):0:0 -> l
    2:2:android.content.res.ColorStateList android.support.v7.widget.AppCompatDrawableManager.getTintListFromCache(android.content.Context,int):0 -> l
    2:2:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> l
    3:3:android.content.res.ColorStateList android.support.v7.widget.AppCompatDrawableManager.getTintListFromCache(android.content.Context,int):0:0 -> l
    3:3:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> l
    4:4:android.content.res.ColorStateList getTintList(android.content.Context,int):0:0 -> l
    5:5:android.content.res.ColorStateList android.support.v7.widget.AppCompatDrawableManager.createDefaultButtonColorStateList(android.content.Context):0:0 -> l
    5:5:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> l
    6:6:android.content.res.ColorStateList android.support.v7.widget.AppCompatDrawableManager.createBorderlessButtonColorStateList(android.content.Context):0:0 -> l
    6:6:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> l
    7:7:android.content.res.ColorStateList android.support.v7.widget.AppCompatDrawableManager.createColoredButtonColorStateList(android.content.Context):0:0 -> l
    7:7:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> l
    8:8:android.content.res.ColorStateList getTintList(android.content.Context,int):0:0 -> l
    9:9:void android.support.v7.widget.AppCompatDrawableManager.addTintListToCache(android.content.Context,int,android.content.res.ColorStateList):0:0 -> l
    9:9:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> l
    10:10:void android.support.v4.util.SparseArrayCompat.<init>():0:0 -> l
    10:10:void android.support.v7.widget.AppCompatDrawableManager.addTintListToCache(android.content.Context,int,android.content.res.ColorStateList):0 -> l
    10:10:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> l
    11:11:void android.support.v7.widget.AppCompatDrawableManager.addTintListToCache(android.content.Context,int,android.content.res.ColorStateList):0:0 -> l
    11:11:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> l
    12:12:android.content.res.ColorStateList getTintList(android.content.Context,int):0:0 -> l
    1:1:java.lang.Object android.support.v4.util.SparseArrayCompat.get(int):0:0 -> m
    1:1:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0 -> m
    2:2:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0:0 -> m
    3:3:void android.support.v4.util.SparseArrayCompat.<init>():0:0 -> m
    3:3:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0 -> m
    4:4:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0:0 -> m
    5:5:long android.support.v7.widget.AppCompatDrawableManager.createCacheKey(android.util.TypedValue):0:0 -> m
    5:5:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0 -> m
    6:6:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0:0 -> m
    void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> n
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> o
    1:1:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> o
    2:2:android.graphics.PorterDuff$Mode android.support.v7.widget.AppCompatDrawableManager.getTintMode(int):0:0 -> o
    2:2:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> o
    3:3:void android.support.v4.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> o
    3:3:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> o
    4:4:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0:0 -> o
    1:1:android.graphics.PorterDuffColorFilter android.support.v7.widget.AppCompatDrawableManager.createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]):0:0 -> p
    1:1:void tintDrawable(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo,int[]):0 -> p
    2:2:void tintDrawable(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo,int[]):0:0 -> p
    boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> q
android.support.v7.widget.AppCompatDrawableManager$AsldcInflateDelegate -> s0.i$a:
    android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate -> s0.i$b:
    1:1:android.support.graphics.drawable.AnimatedVectorDrawableCompat android.support.graphics.drawable.AnimatedVectorDrawableCompat.createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    1:1:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    2:2:void android.support.graphics.drawable.AnimatedVectorDrawableCompat.<init>(android.content.Context):0:0 -> a
    2:2:android.support.graphics.drawable.AnimatedVectorDrawableCompat android.support.graphics.drawable.AnimatedVectorDrawableCompat.createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    2:2:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    3:3:android.support.graphics.drawable.AnimatedVectorDrawableCompat android.support.graphics.drawable.AnimatedVectorDrawableCompat.createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
    3:3:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0 -> a
    4:4:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme):0:0 -> a
android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache -> s0.i$c:
android.support.v7.widget.AppCompatDrawableManager$InflateDelegate -> s0.i$d:
    android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate -> s0.i$e:
    android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
android.support.v7.widget.AppCompatEditText -> s0.j:
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> c
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    1:1:void android.support.v7.widget.AppCompatEditText.<init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
android.support.v7.widget.AppCompatImageButton -> s0.k:
    android.support.v7.widget.AppCompatImageHelper mImageHelper -> c
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    1:1:android.content.res.ColorStateList android.support.v7.widget.AppCompatImageHelper.getSupportImageTintList():0:0 -> getSupportImageTintList
    1:1:android.content.res.ColorStateList getSupportImageTintList():0 -> getSupportImageTintList
    1:1:android.graphics.PorterDuff$Mode android.support.v7.widget.AppCompatImageHelper.getSupportImageTintMode():0:0 -> getSupportImageTintMode
    1:1:android.graphics.PorterDuff$Mode getSupportImageTintMode():0 -> getSupportImageTintMode
    1:1:boolean android.support.v7.widget.AppCompatImageHelper.hasOverlappingRendering():0:0 -> hasOverlappingRendering
    1:1:boolean hasOverlappingRendering():0 -> hasOverlappingRendering
    2:2:boolean hasOverlappingRendering():0:0 -> hasOverlappingRendering
android.support.v7.widget.AppCompatImageHelper -> s0.l:
    android.support.v7.widget.TintInfo mTmpInfo -> c
    android.support.v7.widget.TintInfo mImageTint -> b
    android.widget.ImageView mView -> a
    1:1:boolean android.support.v7.widget.AppCompatImageHelper.shouldApplyFrameworkTintUsingColorFilter():0:0 -> a
    1:1:void applySupportImageTint():0 -> a
    2:2:boolean android.support.v7.widget.AppCompatImageHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    2:2:void applySupportImageTint():0 -> a
    3:3:void android.support.v7.widget.TintInfo.clear():0:0 -> a
    3:3:boolean android.support.v7.widget.AppCompatImageHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0 -> a
    3:3:void applySupportImageTint():0 -> a
    4:4:boolean android.support.v7.widget.AppCompatImageHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    4:4:void applySupportImageTint():0 -> a
    5:5:android.content.res.ColorStateList android.support.v4.widget.ImageViewCompat.getImageTintList(android.widget.ImageView):0:0 -> a
    5:5:boolean android.support.v7.widget.AppCompatImageHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0 -> a
    5:5:void applySupportImageTint():0 -> a
    6:6:boolean android.support.v7.widget.AppCompatImageHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    6:6:void applySupportImageTint():0 -> a
    7:7:android.graphics.PorterDuff$Mode android.support.v4.widget.ImageViewCompat.getImageTintMode(android.widget.ImageView):0:0 -> a
    7:7:boolean android.support.v7.widget.AppCompatImageHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0 -> a
    7:7:void applySupportImageTint():0 -> a
    8:8:boolean android.support.v7.widget.AppCompatImageHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    8:8:void applySupportImageTint():0 -> a
    9:9:void applySupportImageTint():0:0 -> a
    1:1:void android.support.v4.widget.ImageViewCompat.setImageTintList(android.widget.ImageView,android.content.res.ColorStateList):0:0 -> b
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0 -> b
    2:2:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> b
    3:3:void android.support.v4.widget.ImageViewCompat.setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode):0:0 -> b
    3:3:void loadFromAttributes(android.util.AttributeSet,int):0 -> b
    4:4:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> b
    4:4:void loadFromAttributes(android.util.AttributeSet,int):0 -> b
    5:5:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> b
    void setImageResource(int) -> c
    void setSupportImageTintList(android.content.res.ColorStateList) -> d
    void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> e
android.support.v7.widget.AppCompatImageView -> android.support.v7.widget.AppCompatImageView:
    android.support.v7.widget.AppCompatImageHelper mImageHelper -> c
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    1:1:android.content.res.ColorStateList android.support.v7.widget.AppCompatImageHelper.getSupportImageTintList():0:0 -> getSupportImageTintList
    1:1:android.content.res.ColorStateList getSupportImageTintList():0 -> getSupportImageTintList
    1:1:android.graphics.PorterDuff$Mode android.support.v7.widget.AppCompatImageHelper.getSupportImageTintMode():0:0 -> getSupportImageTintMode
    1:1:android.graphics.PorterDuff$Mode getSupportImageTintMode():0 -> getSupportImageTintMode
    1:1:boolean android.support.v7.widget.AppCompatImageHelper.hasOverlappingRendering():0:0 -> hasOverlappingRendering
    1:1:boolean hasOverlappingRendering():0 -> hasOverlappingRendering
    2:2:boolean hasOverlappingRendering():0:0 -> hasOverlappingRendering
android.support.v7.widget.AppCompatMultiAutoCompleteTextView -> s0.m:
    int[] TINT_ATTRS -> d
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> c
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    1:1:void android.support.v7.widget.AppCompatMultiAutoCompleteTextView.<init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> <init>
    2:2:void android.support.v7.widget.AppCompatMultiAutoCompleteTextView.<init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void android.support.v7.widget.AppCompatMultiAutoCompleteTextView.<init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
android.support.v7.widget.AppCompatPopupWindow -> s0.n:
    1:1:void android.support.v7.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    2:2:android.support.v7.widget.TintTypedArray android.support.v7.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    2:2:void android.support.v7.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    3:3:boolean android.support.v7.widget.TintTypedArray.hasValue(int):0:0 -> <init>
    3:3:void android.support.v7.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    4:4:boolean android.support.v7.widget.TintTypedArray.getBoolean(int,boolean):0:0 -> <init>
    4:4:void android.support.v7.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    5:5:void android.support.v7.widget.AppCompatPopupWindow.setSupportOverlapAnchor(boolean):0:0 -> <init>
    5:5:void android.support.v7.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    6:6:android.graphics.drawable.Drawable android.support.v7.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    6:6:void android.support.v7.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    7:7:void android.support.v7.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    8:8:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> <init>
    8:8:void android.support.v7.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
android.support.v7.widget.AppCompatProgressBarHelper -> s0.o:
    android.widget.ProgressBar mView -> a
    android.graphics.Bitmap mSampleTile -> b
    int[] TINT_ATTRS -> c
    1:1:android.graphics.drawable.Drawable android.support.v7.widget.AppCompatProgressBarHelper.tileifyIndeterminate(android.graphics.drawable.Drawable):0:0 -> a
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    2:2:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    3:3:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> a
    3:3:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    1:1:android.graphics.drawable.shapes.Shape android.support.v7.widget.AppCompatProgressBarHelper.getDrawableShape():0:0 -> b
    1:1:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean):0 -> b
    2:2:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean):0:0 -> b
android.support.v7.widget.AppCompatRadioButton -> s0.p:
    android.support.v7.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper -> b
    1:1:void android.support.v7.widget.AppCompatRadioButton.<init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:android.content.res.ColorStateList android.support.v7.widget.AppCompatCompoundButtonHelper.getSupportButtonTintList():0:0 -> getSupportButtonTintList
    1:1:android.content.res.ColorStateList getSupportButtonTintList():0 -> getSupportButtonTintList
    1:1:android.graphics.PorterDuff$Mode android.support.v7.widget.AppCompatCompoundButtonHelper.getSupportButtonTintMode():0:0 -> getSupportButtonTintMode
    1:1:android.graphics.PorterDuff$Mode getSupportButtonTintMode():0 -> getSupportButtonTintMode
    1:1:void android.support.v7.widget.AppCompatCompoundButtonHelper.onSetButtonDrawable():0:0 -> setButtonDrawable
    1:1:void setButtonDrawable(android.graphics.drawable.Drawable):0 -> setButtonDrawable
    1:1:void android.support.v7.widget.AppCompatCompoundButtonHelper.setSupportButtonTintList(android.content.res.ColorStateList):0:0 -> setSupportButtonTintList
    1:1:void setSupportButtonTintList(android.content.res.ColorStateList):0 -> setSupportButtonTintList
    1:1:void android.support.v7.widget.AppCompatCompoundButtonHelper.setSupportButtonTintMode(android.graphics.PorterDuff$Mode):0:0 -> setSupportButtonTintMode
    1:1:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode):0 -> setSupportButtonTintMode
android.support.v7.widget.AppCompatRatingBar -> s0.q:
    android.support.v7.widget.AppCompatProgressBarHelper mAppCompatProgressBarHelper -> b
    1:1:void android.support.v7.widget.AppCompatRatingBar.<init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:android.graphics.Bitmap android.support.v7.widget.AppCompatProgressBarHelper.getSampleTime():0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
android.support.v7.widget.AppCompatSeekBar -> s0.r:
    android.support.v7.widget.AppCompatSeekBarHelper mAppCompatSeekBarHelper -> b
    1:1:void android.support.v7.widget.AppCompatSeekBar.<init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:void android.support.v7.widget.AppCompatSeekBarHelper.drawableStateChanged():0:0 -> drawableStateChanged
    1:1:void drawableStateChanged():0 -> drawableStateChanged
    1:1:void android.support.v7.widget.AppCompatSeekBarHelper.jumpDrawablesToCurrentState():0:0 -> jumpDrawablesToCurrentState
    1:1:void jumpDrawablesToCurrentState():0 -> jumpDrawablesToCurrentState
android.support.v7.widget.AppCompatSeekBarHelper -> s0.s:
    android.graphics.drawable.Drawable mTickMark -> e
    boolean mHasTickMarkTintMode -> i
    android.content.res.ColorStateList mTickMarkTintList -> f
    android.graphics.PorterDuff$Mode mTickMarkTintMode -> g
    boolean mHasTickMarkTint -> h
    android.widget.SeekBar mView -> d
    1:1:void android.support.v7.widget.AppCompatSeekBarHelper.setTickMark(android.graphics.drawable.Drawable):0:0 -> a
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    2:2:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> a
    2:2:void android.support.v7.widget.AppCompatSeekBarHelper.setTickMark(android.graphics.drawable.Drawable):0 -> a
    2:2:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    3:3:void android.support.v7.widget.AppCompatSeekBarHelper.setTickMark(android.graphics.drawable.Drawable):0:0 -> a
    3:3:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    4:4:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    5:5:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> a
    5:5:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    6:6:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    1:1:void android.support.v4.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> c
    1:1:void applyTickMarkTint():0 -> c
    2:2:void applyTickMarkTint():0:0 -> c
    3:3:void android.support.v4.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> c
    3:3:void applyTickMarkTint():0 -> c
    4:4:void applyTickMarkTint():0:0 -> c
    void drawTickMarks(android.graphics.Canvas) -> d
android.support.v7.widget.AppCompatSpinner -> s0.u:
    android.support.v7.widget.ForwardingListener mForwardingListener -> d
    android.support.v7.widget.AppCompatSpinner$DropdownPopup mPopup -> g
    android.content.Context mPopupContext -> c
    int mDropDownWidth -> h
    android.graphics.Rect mTempRect -> i
    boolean mPopupSet -> f
    android.widget.SpinnerAdapter mTempAdapter -> e
    int[] ATTRS_ANDROID_SPINNERMODE -> j
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    1:1:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    1:1:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:android.support.v7.widget.TintTypedArray android.support.v7.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    2:2:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    2:2:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    3:3:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:int android.support.v7.widget.TintTypedArray.getResourceId(int,int):0:0 -> <init>
    4:4:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    4:4:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    5:5:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    5:5:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void android.support.v7.widget.ListPopupWindow.setBackgroundDrawable(android.graphics.drawable.Drawable):0:0 -> <init>
    6:6:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    6:6:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    7:7:java.lang.String android.support.v7.widget.TintTypedArray.getString(int):0:0 -> <init>
    7:7:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    7:7:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    8:8:void android.support.v7.widget.AppCompatSpinner$DropdownPopup.setPromptText(java.lang.CharSequence):0:0 -> <init>
    8:8:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    8:8:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    9:9:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> <init>
    9:9:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    9:9:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    10:10:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    10:10:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    11:11:java.lang.CharSequence[] android.support.v7.widget.TintTypedArray.getTextArray(int):0:0 -> <init>
    11:11:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    11:11:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    12:12:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    12:12:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    13:13:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> <init>
    13:13:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    13:13:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    14:14:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    14:14:void android.support.v7.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    1:1:int android.support.v7.widget.ListPopupWindow.getHorizontalOffset():0:0 -> getDropDownHorizontalOffset
    1:1:int getDropDownHorizontalOffset():0 -> getDropDownHorizontalOffset
    2:2:int getDropDownHorizontalOffset():0:0 -> getDropDownHorizontalOffset
    1:1:int android.support.v7.widget.ListPopupWindow.getVerticalOffset():0:0 -> getDropDownVerticalOffset
    1:1:int getDropDownVerticalOffset():0 -> getDropDownVerticalOffset
    2:2:int getDropDownVerticalOffset():0:0 -> getDropDownVerticalOffset
    1:1:java.lang.CharSequence android.support.v7.widget.AppCompatSpinner$DropdownPopup.getHintText():0:0 -> getPrompt
    1:1:java.lang.CharSequence getPrompt():0 -> getPrompt
    2:2:java.lang.CharSequence getPrompt():0:0 -> getPrompt
    1:1:void android.support.v7.widget.ListPopupWindow.setHorizontalOffset(int):0:0 -> setDropDownHorizontalOffset
    1:1:void setDropDownHorizontalOffset(int):0 -> setDropDownHorizontalOffset
    2:2:void setDropDownHorizontalOffset(int):0:0 -> setDropDownHorizontalOffset
    1:1:void android.support.v7.widget.ListPopupWindow.setVerticalOffset(int):0:0 -> setDropDownVerticalOffset
    1:1:void setDropDownVerticalOffset(int):0 -> setDropDownVerticalOffset
    2:2:void setDropDownVerticalOffset(int):0:0 -> setDropDownVerticalOffset
    1:1:void android.support.v7.widget.ListPopupWindow.setBackgroundDrawable(android.graphics.drawable.Drawable):0:0 -> setPopupBackgroundDrawable
    1:1:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable):0 -> setPopupBackgroundDrawable
    2:2:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable):0:0 -> setPopupBackgroundDrawable
    1:1:void android.support.v7.widget.AppCompatSpinner$DropdownPopup.setPromptText(java.lang.CharSequence):0:0 -> setPrompt
    1:1:void setPrompt(java.lang.CharSequence):0 -> setPrompt
    2:2:void setPrompt(java.lang.CharSequence):0:0 -> setPrompt
android.support.v7.widget.AppCompatSpinner$1 -> s0.t:
    android.support.v7.widget.AppCompatSpinner this$0 -> l
    android.support.v7.widget.AppCompatSpinner$DropdownPopup val$popup -> k
    android.support.v7.view.menu.ShowableListMenu getPopup() -> b
    boolean onForwardingStarted() -> c
android.support.v7.widget.AppCompatSpinner$DropDownAdapter -> s0.u$a:
    android.widget.ListAdapter mListAdapter -> c
    android.widget.SpinnerAdapter mAdapter -> b
    1:1:android.view.View android.support.v7.widget.AppCompatSpinner$DropDownAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup):0:0 -> getView
    1:1:android.view.View getView(int,android.view.View,android.view.ViewGroup):0 -> getView
android.support.v7.widget.AppCompatSpinner$DropdownPopup -> s0.u$b:
    android.widget.ListAdapter mAdapter -> E
    android.support.v7.widget.AppCompatSpinner this$0 -> G
    java.lang.CharSequence mHintText -> D
    android.graphics.Rect mVisibleRect -> F
    1:1:void android.support.v7.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.support.v7.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.support.v7.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:void android.support.v7.widget.ListPopupWindow.setAnchorView(android.view.View):0:0 -> <init>
    3:3:void <init>(android.support.v7.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.support.v7.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    5:5:void android.support.v7.widget.ListPopupWindow.setOnItemClickListener(android.widget.AdapterView$OnItemClickListener):0:0 -> <init>
    5:5:void <init>(android.support.v7.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int):0 -> <init>
    1:1:void android.support.v7.widget.ListPopupWindow.setInputMethodMode(int):0:0 -> f
    1:1:void show():0 -> f
    2:2:void show():0:0 -> f
    3:3:android.widget.ListView android.support.v7.widget.ListPopupWindow.getListView():0:0 -> f
    3:3:void show():0 -> f
    4:4:void show():0:0 -> f
    5:5:void android.support.v7.widget.ListPopupWindow.setSelection(int):0:0 -> f
    5:5:void show():0 -> f
    6:6:void show():0:0 -> f
    7:7:void android.support.v7.widget.ListPopupWindow.setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> f
    7:7:void show():0 -> f
    void setAdapter(android.widget.ListAdapter) -> h
    void access$001(android.support.v7.widget.AppCompatSpinner$DropdownPopup) -> l
    1:1:int android.support.v7.widget.ListPopupWindow.getWidth():0:0 -> m
    1:1:void computeContentWidth():0 -> m
    2:2:void android.support.v7.widget.ListPopupWindow.setHorizontalOffset(int):0:0 -> m
    2:2:void computeContentWidth():0 -> m
android.support.v7.widget.AppCompatSpinner$DropdownPopup$1 -> s0.u$b$a:
    android.support.v7.widget.AppCompatSpinner$DropdownPopup this$1 -> b
android.support.v7.widget.AppCompatSpinner$DropdownPopup$2 -> s0.u$b$b:
    android.support.v7.widget.AppCompatSpinner$DropdownPopup this$1 -> b
    1:1:boolean android.support.v7.widget.AppCompatSpinner$DropdownPopup.isVisibleToUser(android.view.View):0:0 -> onGlobalLayout
    1:1:void onGlobalLayout():0 -> onGlobalLayout
    2:2:boolean android.support.v4.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> onGlobalLayout
    2:2:boolean android.support.v7.widget.AppCompatSpinner$DropdownPopup.isVisibleToUser(android.view.View):0 -> onGlobalLayout
    2:2:void onGlobalLayout():0 -> onGlobalLayout
    3:3:boolean android.support.v7.widget.AppCompatSpinner$DropdownPopup.isVisibleToUser(android.view.View):0:0 -> onGlobalLayout
    3:3:void onGlobalLayout():0 -> onGlobalLayout
    4:4:void onGlobalLayout():0:0 -> onGlobalLayout
android.support.v7.widget.AppCompatSpinner$DropdownPopup$3 -> s0.u$b$c:
    android.view.ViewTreeObserver$OnGlobalLayoutListener val$layoutListener -> b
    android.support.v7.widget.AppCompatSpinner$DropdownPopup this$1 -> c
android.support.v7.widget.AppCompatTextHelper -> s0.v:
    android.widget.TextView mView -> a
    android.support.v7.widget.AppCompatTextViewAutoSizeHelper mAutoSizeTextHelper -> h
    android.support.v7.widget.TintInfo mDrawableRightTint -> d
    android.support.v7.widget.TintInfo mDrawableTopTint -> c
    android.support.v7.widget.TintInfo mDrawableLeftTint -> b
    boolean mAsyncFontPending -> k
    int mStyle -> i
    android.support.v7.widget.TintInfo mDrawableEndTint -> g
    android.support.v7.widget.TintInfo mDrawableStartTint -> f
    android.graphics.Typeface mFontTypeface -> j
    android.support.v7.widget.TintInfo mDrawableBottomTint -> e
    void applyCompoundDrawableTint(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo) -> a
    void applyCompoundDrawablesTints() -> b
    android.support.v7.widget.TintInfo createTintInfo(android.content.Context,android.support.v7.widget.AppCompatDrawableManager,int) -> c
    1:1:boolean android.support.v7.widget.AppCompatTextViewAutoSizeHelper.isAutoSizeEnabled():0:0 -> d
    1:1:boolean isAutoSizeEnabled():0 -> d
    1:1:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> e
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0 -> e
    2:2:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> e
    3:3:android.support.v7.widget.TintTypedArray android.support.v7.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,int,int[]):0:0 -> e
    3:3:void loadFromAttributes(android.util.AttributeSet,int):0 -> e
    4:4:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> e
    5:5:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> e
    5:5:void loadFromAttributes(android.util.AttributeSet,int):0 -> e
    6:6:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> e
    7:7:android.support.v7.widget.TintTypedArray android.support.v7.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> e
    7:7:void loadFromAttributes(android.util.AttributeSet,int):0 -> e
    8:8:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> e
    9:9:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> e
    9:9:void loadFromAttributes(android.util.AttributeSet,int):0 -> e
    10:10:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> e
    11:11:void android.support.v7.widget.AppCompatTextHelper.setAllCaps(boolean):0:0 -> e
    11:11:void loadFromAttributes(android.util.AttributeSet,int):0 -> e
    12:12:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> e
    13:13:void android.support.v7.widget.AppCompatTextViewAutoSizeHelper.loadFromAttributes(android.util.AttributeSet,int):0:0 -> e
    13:13:void loadFromAttributes(android.util.AttributeSet,int):0 -> e
    14:14:void android.support.v7.widget.AppCompatTextViewAutoSizeHelper.setupAutoSizeUniformPresetSizes(android.content.res.TypedArray):0:0 -> e
    14:14:void android.support.v7.widget.AppCompatTextViewAutoSizeHelper.loadFromAttributes(android.util.AttributeSet,int):0 -> e
    14:14:void loadFromAttributes(android.util.AttributeSet,int):0 -> e
    15:15:void android.support.v7.widget.AppCompatTextViewAutoSizeHelper.loadFromAttributes(android.util.AttributeSet,int):0:0 -> e
    15:15:void loadFromAttributes(android.util.AttributeSet,int):0 -> e
    16:16:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> e
    17:17:int android.support.v7.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeTextType():0:0 -> e
    17:17:void loadFromAttributes(android.util.AttributeSet,int):0 -> e
    18:18:int[] android.support.v7.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeTextAvailableSizes():0:0 -> e
    18:18:void loadFromAttributes(android.util.AttributeSet,int):0 -> e
    19:19:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> e
    20:20:int android.support.v7.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMinTextSize():0:0 -> e
    20:20:void loadFromAttributes(android.util.AttributeSet,int):0 -> e
    21:21:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> e
    22:22:int android.support.v7.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMaxTextSize():0:0 -> e
    22:22:void loadFromAttributes(android.util.AttributeSet,int):0 -> e
    23:23:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> e
    24:24:int android.support.v7.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeStepGranularity():0:0 -> e
    24:24:void loadFromAttributes(android.util.AttributeSet,int):0 -> e
    25:25:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> e
    26:26:android.support.v7.widget.TintTypedArray android.support.v7.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]):0:0 -> e
    26:26:void loadFromAttributes(android.util.AttributeSet,int):0 -> e
    27:27:int android.support.v7.widget.TintTypedArray.getDimensionPixelSize(int,int):0:0 -> e
    27:27:void loadFromAttributes(android.util.AttributeSet,int):0 -> e
    28:28:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> e
    28:28:void loadFromAttributes(android.util.AttributeSet,int):0 -> e
    29:29:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> e
    1:1:android.support.v7.widget.TintTypedArray android.support.v7.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,int,int[]):0:0 -> f
    1:1:void onSetTextAppearance(android.content.Context,int):0 -> f
    2:2:void onSetTextAppearance(android.content.Context,int):0:0 -> f
    3:3:void android.support.v7.widget.AppCompatTextHelper.setAllCaps(boolean):0:0 -> f
    3:3:void onSetTextAppearance(android.content.Context,int):0 -> f
    4:4:void onSetTextAppearance(android.content.Context,int):0:0 -> f
    5:5:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> f
    5:5:void onSetTextAppearance(android.content.Context,int):0 -> f
    6:6:void onSetTextAppearance(android.content.Context,int):0:0 -> f
    1:1:void android.support.v7.widget.AppCompatTextViewAutoSizeHelper.setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int):0:0 -> g
    1:1:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int):0 -> g
    1:1:void android.support.v7.widget.AppCompatTextViewAutoSizeHelper.setAutoSizeTextTypeUniformWithPresetSizes(int[],int):0:0 -> h
    1:1:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int):0 -> h
    1:1:void android.support.v7.widget.AppCompatTextViewAutoSizeHelper.setAutoSizeTextTypeWithDefaults(int):0:0 -> i
    1:1:void setAutoSizeTextTypeWithDefaults(int):0 -> i
    2:2:void android.support.v7.widget.AppCompatTextViewAutoSizeHelper.clearAutoSizeConfiguration():0:0 -> i
    2:2:void android.support.v7.widget.AppCompatTextViewAutoSizeHelper.setAutoSizeTextTypeWithDefaults(int):0 -> i
    2:2:void setAutoSizeTextTypeWithDefaults(int):0 -> i
    1:1:java.lang.String android.support.v7.widget.TintTypedArray.getString(int):0:0 -> j
    1:1:void updateTypefaceAndStyle(android.content.Context,android.support.v7.widget.TintTypedArray):0 -> j
    2:2:void updateTypefaceAndStyle(android.content.Context,android.support.v7.widget.TintTypedArray):0:0 -> j
android.support.v7.widget.AppCompatTextHelper$1 -> s0.v$a:
    android.support.v7.widget.AppCompatTextHelper this$0 -> b
    java.lang.ref.WeakReference val$textViewWeak -> a
    1:1:void android.support.v7.widget.AppCompatTextHelper.onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface):0:0 -> c
    1:1:void onFontRetrieved(android.graphics.Typeface):0 -> c
android.support.v7.widget.AppCompatTextView -> s0.w:
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> c
    java.util.concurrent.Future mPrecomputedTextFuture -> d
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    1:1:int android.support.v7.widget.AppCompatTextHelper.getAutoSizeMaxTextSize():0:0 -> getAutoSizeMaxTextSize
    1:1:int getAutoSizeMaxTextSize():0 -> getAutoSizeMaxTextSize
    2:2:int android.support.v7.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMaxTextSize():0:0 -> getAutoSizeMaxTextSize
    2:2:int android.support.v7.widget.AppCompatTextHelper.getAutoSizeMaxTextSize():0 -> getAutoSizeMaxTextSize
    2:2:int getAutoSizeMaxTextSize():0 -> getAutoSizeMaxTextSize
    1:1:int android.support.v7.widget.AppCompatTextHelper.getAutoSizeMinTextSize():0:0 -> getAutoSizeMinTextSize
    1:1:int getAutoSizeMinTextSize():0 -> getAutoSizeMinTextSize
    2:2:int android.support.v7.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMinTextSize():0:0 -> getAutoSizeMinTextSize
    2:2:int android.support.v7.widget.AppCompatTextHelper.getAutoSizeMinTextSize():0 -> getAutoSizeMinTextSize
    2:2:int getAutoSizeMinTextSize():0 -> getAutoSizeMinTextSize
    1:1:int android.support.v7.widget.AppCompatTextHelper.getAutoSizeStepGranularity():0:0 -> getAutoSizeStepGranularity
    1:1:int getAutoSizeStepGranularity():0 -> getAutoSizeStepGranularity
    2:2:int android.support.v7.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeStepGranularity():0:0 -> getAutoSizeStepGranularity
    2:2:int android.support.v7.widget.AppCompatTextHelper.getAutoSizeStepGranularity():0 -> getAutoSizeStepGranularity
    2:2:int getAutoSizeStepGranularity():0 -> getAutoSizeStepGranularity
    1:1:int[] android.support.v7.widget.AppCompatTextHelper.getAutoSizeTextAvailableSizes():0:0 -> getAutoSizeTextAvailableSizes
    1:1:int[] getAutoSizeTextAvailableSizes():0 -> getAutoSizeTextAvailableSizes
    2:2:int[] android.support.v7.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeTextAvailableSizes():0:0 -> getAutoSizeTextAvailableSizes
    2:2:int[] android.support.v7.widget.AppCompatTextHelper.getAutoSizeTextAvailableSizes():0 -> getAutoSizeTextAvailableSizes
    2:2:int[] getAutoSizeTextAvailableSizes():0 -> getAutoSizeTextAvailableSizes
    1:1:int android.support.v7.widget.AppCompatTextHelper.getAutoSizeTextType():0:0 -> getAutoSizeTextType
    1:1:int getAutoSizeTextType():0 -> getAutoSizeTextType
    2:2:int android.support.v7.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeTextType():0:0 -> getAutoSizeTextType
    2:2:int android.support.v7.widget.AppCompatTextHelper.getAutoSizeTextType():0 -> getAutoSizeTextType
    2:2:int getAutoSizeTextType():0 -> getAutoSizeTextType
    1:1:int android.support.v4.widget.TextViewCompat.getFirstBaselineToTopHeight(android.widget.TextView):0:0 -> getFirstBaselineToTopHeight
    1:1:int getFirstBaselineToTopHeight():0 -> getFirstBaselineToTopHeight
    1:1:int android.support.v4.widget.TextViewCompat.getLastBaselineToBottomHeight(android.widget.TextView):0:0 -> getLastBaselineToBottomHeight
    1:1:int getLastBaselineToBottomHeight():0 -> getLastBaselineToBottomHeight
    1:1:void android.support.v7.widget.AppCompatTextView.consumeTextFutureAndSetBlocking():0:0 -> getText
    1:1:java.lang.CharSequence getText():0 -> getText
    2:2:java.lang.CharSequence getText():0:0 -> getText
    1:1:void android.support.v7.widget.AppCompatTextHelper.onLayout(boolean,int,int,int,int):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void android.support.v7.widget.AppCompatTextHelper.autoSizeText():0:0 -> onLayout
    2:2:void android.support.v7.widget.AppCompatTextHelper.onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0 -> onLayout
    1:1:void android.support.v7.widget.AppCompatTextView.consumeTextFutureAndSetBlocking():0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
    1:1:void android.support.v7.widget.AppCompatTextHelper.autoSizeText():0:0 -> onTextChanged
    1:1:void onTextChanged(java.lang.CharSequence,int,int,int):0 -> onTextChanged
    1:1:void android.support.v4.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,android.support.v4.text.PrecomputedTextCompat$Params):0:0 -> setTextMetricsParamsCompat
    1:1:void setTextMetricsParamsCompat(android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    2:2:android.text.TextDirectionHeuristic android.support.v4.text.PrecomputedTextCompat$Params.getTextDirection():0:0 -> setTextMetricsParamsCompat
    2:2:void android.support.v4.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    2:2:void setTextMetricsParamsCompat(android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    3:3:int android.support.v4.widget.TextViewCompat.getTextDirection(android.text.TextDirectionHeuristic):0:0 -> setTextMetricsParamsCompat
    3:3:void android.support.v4.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    3:3:void setTextMetricsParamsCompat(android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    4:4:void android.support.v4.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,android.support.v4.text.PrecomputedTextCompat$Params):0:0 -> setTextMetricsParamsCompat
    4:4:void setTextMetricsParamsCompat(android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    5:5:android.text.TextPaint android.support.v4.text.PrecomputedTextCompat$Params.getTextPaint():0:0 -> setTextMetricsParamsCompat
    5:5:void android.support.v4.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    5:5:void setTextMetricsParamsCompat(android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    6:6:void android.support.v4.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,android.support.v4.text.PrecomputedTextCompat$Params):0:0 -> setTextMetricsParamsCompat
    6:6:void setTextMetricsParamsCompat(android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    7:7:android.text.TextPaint android.support.v4.text.PrecomputedTextCompat$Params.getTextPaint():0:0 -> setTextMetricsParamsCompat
    7:7:void android.support.v4.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    7:7:void setTextMetricsParamsCompat(android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    8:8:void android.support.v4.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,android.support.v4.text.PrecomputedTextCompat$Params):0:0 -> setTextMetricsParamsCompat
    8:8:void setTextMetricsParamsCompat(android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    9:9:android.text.TextPaint android.support.v4.text.PrecomputedTextCompat$Params.getTextPaint():0:0 -> setTextMetricsParamsCompat
    9:9:void android.support.v4.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    9:9:void setTextMetricsParamsCompat(android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    10:10:void android.support.v4.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,android.support.v4.text.PrecomputedTextCompat$Params):0:0 -> setTextMetricsParamsCompat
    10:10:void setTextMetricsParamsCompat(android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    11:11:int android.support.v4.text.PrecomputedTextCompat$Params.getBreakStrategy():0:0 -> setTextMetricsParamsCompat
    11:11:void android.support.v4.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    11:11:void setTextMetricsParamsCompat(android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    12:12:void android.support.v4.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,android.support.v4.text.PrecomputedTextCompat$Params):0:0 -> setTextMetricsParamsCompat
    12:12:void setTextMetricsParamsCompat(android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    13:13:int android.support.v4.text.PrecomputedTextCompat$Params.getHyphenationFrequency():0:0 -> setTextMetricsParamsCompat
    13:13:void android.support.v4.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    13:13:void setTextMetricsParamsCompat(android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    14:14:void android.support.v4.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,android.support.v4.text.PrecomputedTextCompat$Params):0:0 -> setTextMetricsParamsCompat
    14:14:void setTextMetricsParamsCompat(android.support.v4.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    1:1:void android.support.v7.widget.AppCompatTextHelper.setTextSize(int,float):0:0 -> setTextSize
    1:1:void setTextSize(int,float):0 -> setTextSize
    2:2:void android.support.v7.widget.AppCompatTextHelper.setTextSizeInternal(int,float):0:0 -> setTextSize
    2:2:void android.support.v7.widget.AppCompatTextHelper.setTextSize(int,float):0 -> setTextSize
    2:2:void setTextSize(int,float):0 -> setTextSize
android.support.v7.widget.AppCompatTextViewAutoSizeHelper -> s0.x:
    int[] mAutoSizeTextSizesInPx -> f
    float mAutoSizeMaxTextSizeInPx -> e
    float mAutoSizeMinTextSizeInPx -> d
    float mAutoSizeStepGranularityInPx -> c
    boolean mHasPresetAutoSizeValues -> g
    android.widget.TextView mTextView -> i
    android.content.Context mContext -> j
    java.util.concurrent.ConcurrentHashMap sTextViewMethodByNameCache -> l
    boolean mNeedsAutoSizeText -> b
    android.graphics.RectF TEMP_RECTF -> k
    android.text.TextPaint mTempTextPaint -> h
    int mAutoSizeTextType -> a
    1:1:boolean android.support.v7.widget.AppCompatTextViewAutoSizeHelper.isAutoSizeEnabled():0:0 -> a
    1:1:void autoSizeText():0 -> a
    2:2:void autoSizeText():0:0 -> a
    int[] cleanupAutoSizePresetSizes(int[]) -> b
    1:1:boolean android.support.v7.widget.AppCompatTextViewAutoSizeHelper.suggestedSizeFitsInSpace(int,android.graphics.RectF):0:0 -> c
    1:1:int findLargestTextSizeWhichFits(android.graphics.RectF):0 -> c
    2:2:android.text.StaticLayout android.support.v7.widget.AppCompatTextViewAutoSizeHelper.createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int):0:0 -> c
    2:2:boolean android.support.v7.widget.AppCompatTextViewAutoSizeHelper.suggestedSizeFitsInSpace(int,android.graphics.RectF):0 -> c
    2:2:int findLargestTextSizeWhichFits(android.graphics.RectF):0 -> c
    3:3:boolean android.support.v7.widget.AppCompatTextViewAutoSizeHelper.suggestedSizeFitsInSpace(int,android.graphics.RectF):0:0 -> c
    3:3:int findLargestTextSizeWhichFits(android.graphics.RectF):0 -> c
    4:4:android.text.StaticLayout android.support.v7.widget.AppCompatTextViewAutoSizeHelper.createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int):0:0 -> c
    4:4:boolean android.support.v7.widget.AppCompatTextViewAutoSizeHelper.suggestedSizeFitsInSpace(int,android.graphics.RectF):0 -> c
    4:4:int findLargestTextSizeWhichFits(android.graphics.RectF):0 -> c
    5:5:boolean android.support.v7.widget.AppCompatTextViewAutoSizeHelper.suggestedSizeFitsInSpace(int,android.graphics.RectF):0:0 -> c
    5:5:int findLargestTextSizeWhichFits(android.graphics.RectF):0 -> c
    6:6:int findLargestTextSizeWhichFits(android.graphics.RectF):0:0 -> c
    java.lang.reflect.Method getTextViewMethod(java.lang.String) -> d
    java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> e
    1:1:void android.support.v7.widget.AppCompatTextViewAutoSizeHelper.setRawTextSize(float):0:0 -> f
    1:1:void setTextSizeInternal(int,float):0 -> f
    boolean setupAutoSizeText() -> g
    boolean setupAutoSizeUniformPresetSizesConfiguration() -> h
    boolean supportsAutoSizeText() -> i
    void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> j
android.support.v7.widget.ButtonBarLayout -> android.support.v7.widget.ButtonBarLayout:
    boolean mAllowStacking -> b
    int mLastWidthSize -> c
    int getNextVisibleChildIndex(int) -> a
    boolean isStacked() -> b
    1:1:int android.support.v4.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
android.support.v7.widget.CardView -> s0.y:
    boolean mCompatPadding -> b
    boolean mPreventCornerOverlap -> c
    android.support.v7.widget.CardViewImpl IMPL -> d
    1:1:android.content.res.ColorStateList android.support.v7.widget.CardViewApi21Impl.getBackgroundColor(android.support.v7.widget.CardViewDelegate):0:0 -> getCardBackgroundColor
    1:1:android.content.res.ColorStateList getCardBackgroundColor():0 -> getCardBackgroundColor
    1:1:float android.support.v7.widget.CardViewApi21Impl.getElevation(android.support.v7.widget.CardViewDelegate):0:0 -> getCardElevation
    1:1:float getCardElevation():0 -> getCardElevation
    1:1:void android.support.v7.widget.CardViewApi21Impl.setElevation(android.support.v7.widget.CardViewDelegate,float):0:0 -> setCardElevation
    1:1:void setCardElevation(float):0 -> setCardElevation
    1:1:float android.support.v7.widget.CardViewApi21Impl.getMaxElevation(android.support.v7.widget.CardViewDelegate):0:0 -> setPreventCornerOverlap
    1:1:void android.support.v7.widget.CardViewApi21Impl.onPreventCornerOverlapChanged(android.support.v7.widget.CardViewDelegate):0 -> setPreventCornerOverlap
    1:1:void setPreventCornerOverlap(boolean):0 -> setPreventCornerOverlap
    1:1:void android.support.v7.widget.CardViewApi21Impl.setRadius(android.support.v7.widget.CardViewDelegate,float):0:0 -> setRadius
    1:1:void setRadius(float):0 -> setRadius
    1:1:float android.support.v7.widget.CardViewApi21Impl.getMaxElevation(android.support.v7.widget.CardViewDelegate):0:0 -> setUseCompatPadding
    1:1:void android.support.v7.widget.CardViewApi21Impl.onCompatPaddingChanged(android.support.v7.widget.CardViewDelegate):0 -> setUseCompatPadding
    1:1:void setUseCompatPadding(boolean):0 -> setUseCompatPadding
android.support.v7.widget.CardViewApi21Impl -> s0.z:
    android.support.v7.widget.RoundRectDrawable getCardBackground(android.support.v7.widget.CardViewDelegate) -> a
    float getMaxElevation(android.support.v7.widget.CardViewDelegate) -> b
    float getRadius(android.support.v7.widget.CardViewDelegate) -> c
    void setBackgroundColor(android.support.v7.widget.CardViewDelegate,android.content.res.ColorStateList) -> d
    1:1:void android.support.v7.widget.RoundRectDrawable.setPadding(float,boolean,boolean):0:0 -> e
    1:1:void setMaxElevation(android.support.v7.widget.CardViewDelegate,float):0 -> e
    2:2:void android.support.v7.widget.CardViewApi21Impl.updatePadding(android.support.v7.widget.CardViewDelegate):0:0 -> e
    2:2:void setMaxElevation(android.support.v7.widget.CardViewDelegate,float):0 -> e
    3:3:float android.support.v7.widget.CardViewApi21Impl.getMaxElevation(android.support.v7.widget.CardViewDelegate):0:0 -> e
    3:3:void android.support.v7.widget.CardViewApi21Impl.updatePadding(android.support.v7.widget.CardViewDelegate):0 -> e
    3:3:void setMaxElevation(android.support.v7.widget.CardViewDelegate,float):0 -> e
    4:4:float android.support.v7.widget.RoundRectDrawable.getPadding():0:0 -> e
    4:4:float android.support.v7.widget.CardViewApi21Impl.getMaxElevation(android.support.v7.widget.CardViewDelegate):0 -> e
    4:4:void android.support.v7.widget.CardViewApi21Impl.updatePadding(android.support.v7.widget.CardViewDelegate):0 -> e
    4:4:void setMaxElevation(android.support.v7.widget.CardViewDelegate,float):0 -> e
    5:5:float android.support.v7.widget.CardViewApi21Impl.getRadius(android.support.v7.widget.CardViewDelegate):0:0 -> e
    5:5:void android.support.v7.widget.CardViewApi21Impl.updatePadding(android.support.v7.widget.CardViewDelegate):0 -> e
    5:5:void setMaxElevation(android.support.v7.widget.CardViewDelegate,float):0 -> e
    6:6:float android.support.v7.widget.RoundRectDrawable.getRadius():0:0 -> e
    6:6:float android.support.v7.widget.CardViewApi21Impl.getRadius(android.support.v7.widget.CardViewDelegate):0 -> e
    6:6:void android.support.v7.widget.CardViewApi21Impl.updatePadding(android.support.v7.widget.CardViewDelegate):0 -> e
    6:6:void setMaxElevation(android.support.v7.widget.CardViewDelegate,float):0 -> e
    7:7:void android.support.v7.widget.CardViewApi21Impl.updatePadding(android.support.v7.widget.CardViewDelegate):0:0 -> e
    7:7:void setMaxElevation(android.support.v7.widget.CardViewDelegate,float):0 -> e
    8:8:void android.support.v7.widget.RoundRectDrawable.setPadding(float,boolean,boolean):0:0 -> e
    8:8:void setMaxElevation(android.support.v7.widget.CardViewDelegate,float):0 -> e
android.support.v7.widget.CardViewDelegate -> s0.a0:
    boolean getUseCompatPadding() -> a
    void setShadowPadding(int,int,int,int) -> b
    android.graphics.drawable.Drawable getCardBackground() -> c
    boolean getPreventCornerOverlap() -> d
android.support.v7.widget.CardViewImpl -> s0.b0:
android.support.v7.widget.ChildHelper -> android.support.v7.widget.c:
    java.util.List mHiddenViews -> c
    android.support.v7.widget.ChildHelper$Callback mCallback -> a
    android.support.v7.widget.ChildHelper$Bucket mBucket -> b
    1:1:void android.support.v7.widget.RecyclerView$5.addView(android.view.View,int):0:0 -> a
    1:1:void addView(android.view.View,int,boolean):0 -> a
    2:2:void android.support.v7.widget.RecyclerView.dispatchChildAttached(android.view.View):0:0 -> a
    2:2:void android.support.v7.widget.RecyclerView$5.addView(android.view.View,int):0 -> a
    2:2:void addView(android.view.View,int,boolean):0 -> a
    1:1:void android.support.v7.widget.RecyclerView$5.attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams):0:0 -> b
    1:1:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean):0 -> b
    2:2:void android.support.v7.widget.RecyclerView$ViewHolder.clearTmpDetachFlag():0:0 -> b
    2:2:void android.support.v7.widget.RecyclerView$5.attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams):0 -> b
    2:2:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean):0 -> b
    3:3:void android.support.v7.widget.RecyclerView$5.attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams):0:0 -> b
    3:3:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean):0 -> b
    1:1:android.view.View android.support.v7.widget.RecyclerView$5.getChildAt(int):0:0 -> c
    1:1:void android.support.v7.widget.RecyclerView$5.detachViewFromParent(int):0 -> c
    1:1:void detachViewFromParent(int):0 -> c
    2:2:void android.support.v7.widget.RecyclerView$5.detachViewFromParent(int):0:0 -> c
    2:2:void detachViewFromParent(int):0 -> c
    android.view.View getChildAt(int) -> d
    int getChildCount() -> e
    int getOffset(int) -> f
    1:1:android.view.View android.support.v7.widget.RecyclerView$5.getChildAt(int):0:0 -> g
    1:1:android.view.View getUnfilteredChildAt(int):0 -> g
    int getUnfilteredChildCount() -> h
    1:1:void android.support.v7.widget.RecyclerView$5.onEnteredHiddenState(android.view.View):0:0 -> i
    1:1:void hideViewInternal(android.view.View):0 -> i
    2:2:void android.support.v7.widget.RecyclerView$ViewHolder.onEnteredHiddenState(android.support.v7.widget.RecyclerView):0:0 -> i
    2:2:void android.support.v7.widget.RecyclerView$5.onEnteredHiddenState(android.view.View):0 -> i
    2:2:void hideViewInternal(android.view.View):0 -> i
    3:3:int android.support.v4.view.ViewCompat.getImportantForAccessibility(android.view.View):0:0 -> i
    3:3:void android.support.v7.widget.RecyclerView$ViewHolder.onEnteredHiddenState(android.support.v7.widget.RecyclerView):0 -> i
    3:3:void android.support.v7.widget.RecyclerView$5.onEnteredHiddenState(android.view.View):0 -> i
    3:3:void hideViewInternal(android.view.View):0 -> i
    4:4:void android.support.v7.widget.RecyclerView$ViewHolder.onEnteredHiddenState(android.support.v7.widget.RecyclerView):0:0 -> i
    4:4:void android.support.v7.widget.RecyclerView$5.onEnteredHiddenState(android.view.View):0 -> i
    4:4:void hideViewInternal(android.view.View):0 -> i
    1:1:int android.support.v7.widget.RecyclerView$5.indexOfChild(android.view.View):0:0 -> j
    1:1:int indexOfChild(android.view.View):0 -> j
    2:2:int indexOfChild(android.view.View):0:0 -> j
    boolean isHidden(android.view.View) -> k
    1:1:void android.support.v7.widget.RecyclerView$5.onLeftHiddenState(android.view.View):0:0 -> l
    1:1:boolean unhideViewInternal(android.view.View):0 -> l
    2:2:void android.support.v7.widget.RecyclerView$ViewHolder.onLeftHiddenState(android.support.v7.widget.RecyclerView):0:0 -> l
    2:2:void android.support.v7.widget.RecyclerView$5.onLeftHiddenState(android.view.View):0 -> l
    2:2:boolean unhideViewInternal(android.view.View):0 -> l
android.support.v7.widget.ChildHelper$Bucket -> android.support.v7.widget.c$a:
    long mData -> a
    android.support.v7.widget.ChildHelper$Bucket mNext -> b
    void clear(int) -> a
    int countOnesBefore(int) -> b
    void ensureNext() -> c
    boolean get(int) -> d
    void insert(int,boolean) -> e
    boolean remove(int) -> f
    void reset() -> g
    void set(int) -> h
android.support.v7.widget.ChildHelper$Callback -> android.support.v7.widget.c$b:
android.support.v7.widget.ContentFrameLayout -> android.support.v7.widget.ContentFrameLayout:
    android.util.TypedValue mFixedWidthMajor -> d
    android.util.TypedValue mMinWidthMinor -> c
    android.util.TypedValue mMinWidthMajor -> b
    android.graphics.Rect mDecorPadding -> h
    android.util.TypedValue mFixedHeightMinor -> g
    android.util.TypedValue mFixedHeightMajor -> f
    android.support.v7.widget.ContentFrameLayout$OnAttachListener mAttachListener -> i
    android.util.TypedValue mFixedWidthMinor -> e
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    void dispatchFitSystemWindows(android.graphics.Rect) -> a
    1:1:void android.support.v7.app.AppCompatDelegateImpl$5.onDetachedFromWindow():0:0 -> onDetachedFromWindow
    1:1:void onDetachedFromWindow():0 -> onDetachedFromWindow
    2:2:void android.support.v7.app.AppCompatDelegateImpl.dismissPopups():0:0 -> onDetachedFromWindow
    2:2:void android.support.v7.app.AppCompatDelegateImpl$5.onDetachedFromWindow():0 -> onDetachedFromWindow
    2:2:void onDetachedFromWindow():0 -> onDetachedFromWindow
    3:3:void android.support.v7.view.menu.MenuBuilder.close():0:0 -> onDetachedFromWindow
    3:3:void android.support.v7.app.AppCompatDelegateImpl.dismissPopups():0 -> onDetachedFromWindow
    3:3:void android.support.v7.app.AppCompatDelegateImpl$5.onDetachedFromWindow():0 -> onDetachedFromWindow
    3:3:void onDetachedFromWindow():0 -> onDetachedFromWindow
android.support.v7.widget.ContentFrameLayout$OnAttachListener -> android.support.v7.widget.ContentFrameLayout$a:
android.support.v7.widget.DecorContentParent -> s0.d0:
    boolean showOverflowMenu() -> a
    boolean isOverflowMenuShowPending() -> b
    void setMenuPrepared() -> c
    boolean isOverflowMenuShowing() -> d
    boolean canShowOverflowMenu() -> e
    void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback) -> f
    boolean hideOverflowMenu() -> g
    void initFeature(int) -> h
    void dismissPopups() -> i
android.support.v7.widget.DecorToolbar -> s0.e0:
    boolean showOverflowMenu() -> a
    boolean isOverflowMenuShowPending() -> b
    void setMenuPrepared() -> c
    boolean isOverflowMenuShowing() -> d
    boolean canShowOverflowMenu() -> e
    void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback) -> f
    boolean hideOverflowMenu() -> g
    void dismissPopupMenus() -> h
    void setEmbeddedTabView(android.support.v7.widget.ScrollingTabContainerView) -> i
    android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> j
    int getDisplayOptions() -> k
    void setVisibility(int) -> l
    void initProgress() -> m
    boolean hasExpandedActionView() -> n
    void setLogo(int) -> o
    android.view.ViewGroup getViewGroup() -> p
    void setHomeButtonEnabled(boolean) -> q
    void initIndeterminateProgress() -> r
    void setCollapsible(boolean) -> s
    android.content.Context getContext() -> t
    void setDisplayOptions(int) -> u
    int getNavigationMode() -> v
android.support.v7.widget.DefaultItemAnimator -> android.support.v7.widget.l:
    java.util.ArrayList mAddAnimations -> o
    java.util.ArrayList mChangesList -> n
    java.util.ArrayList mMovesList -> m
    java.util.ArrayList mAdditionsList -> l
    java.util.ArrayList mPendingChanges -> k
    java.util.ArrayList mPendingMoves -> j
    android.animation.TimeInterpolator sDefaultInterpolator -> s
    java.util.ArrayList mPendingAdditions -> i
    java.util.ArrayList mPendingRemovals -> h
    java.util.ArrayList mChangeAnimations -> r
    java.util.ArrayList mRemoveAnimations -> q
    java.util.ArrayList mMoveAnimations -> p
    1:1:void android.support.v7.widget.SimpleItemAnimator.dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> e
    1:1:void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder):0 -> e
    2:2:void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> e
    3:3:void android.support.v7.widget.SimpleItemAnimator.dispatchRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> e
    3:3:void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder):0 -> e
    4:4:void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> e
    5:5:void android.support.v7.widget.SimpleItemAnimator.dispatchAddFinished(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> e
    5:5:void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder):0 -> e
    6:6:void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> e
    7:7:void android.support.v7.widget.SimpleItemAnimator.dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> e
    7:7:void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder):0 -> e
    8:8:void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> e
    9:9:void android.support.v7.widget.SimpleItemAnimator.dispatchAddFinished(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> e
    9:9:void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder):0 -> e
    10:10:void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> e
    1:1:void android.support.v7.widget.SimpleItemAnimator.dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> f
    1:1:void endAnimations():0 -> f
    2:2:void endAnimations():0:0 -> f
    3:3:void android.support.v7.widget.SimpleItemAnimator.dispatchRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> f
    3:3:void endAnimations():0 -> f
    4:4:void endAnimations():0:0 -> f
    5:5:void android.support.v7.widget.SimpleItemAnimator.dispatchAddFinished(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> f
    5:5:void endAnimations():0 -> f
    6:6:void endAnimations():0:0 -> f
    7:7:void endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo):0:0 -> f
    7:7:void endAnimations():0 -> f
    8:8:void endAnimations():0:0 -> f
    9:9:void android.support.v7.widget.SimpleItemAnimator.dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> f
    9:9:void endAnimations():0 -> f
    10:10:void endAnimations():0:0 -> f
    11:11:void android.support.v7.widget.SimpleItemAnimator.dispatchAddFinished(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> f
    11:11:void endAnimations():0 -> f
    12:12:void endAnimations():0:0 -> f
    13:13:void endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo):0:0 -> f
    13:13:void endAnimations():0 -> f
    14:14:void endAnimations():0:0 -> f
    boolean isRunning() -> g
    1:1:void android.support.v7.widget.SimpleItemAnimator.dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> i
    1:1:boolean animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int):0 -> i
    2:2:boolean animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int):0:0 -> i
    void cancelAll(java.util.List) -> j
    void dispatchFinishedWhenDone() -> k
    void endChangeAnimation(java.util.List,android.support.v7.widget.RecyclerView$ViewHolder) -> l
    1:1:void android.support.v7.widget.SimpleItemAnimator.dispatchChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean):0:0 -> m
    1:1:boolean endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.support.v7.widget.RecyclerView$ViewHolder):0 -> m
    void resetAnimation(android.support.v7.widget.RecyclerView$ViewHolder) -> n
android.support.v7.widget.DefaultItemAnimator$1 -> android.support.v7.widget.d:
    android.support.v7.widget.DefaultItemAnimator this$0 -> c
    java.util.ArrayList val$moves -> b
    1:1:void android.support.v7.widget.DefaultItemAnimator.animateMoveImpl(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int):0:0 -> run
    1:1:void run():0 -> run
    2:2:long android.support.v7.widget.RecyclerView$ItemAnimator.getMoveDuration():0:0 -> run
    2:2:void android.support.v7.widget.DefaultItemAnimator.animateMoveImpl(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int):0 -> run
    2:2:void run():0 -> run
    3:3:void android.support.v7.widget.DefaultItemAnimator.animateMoveImpl(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int):0:0 -> run
    3:3:void run():0 -> run
    4:4:void run():0:0 -> run
android.support.v7.widget.DefaultItemAnimator$2 -> android.support.v7.widget.e:
    android.support.v7.widget.DefaultItemAnimator this$0 -> c
    java.util.ArrayList val$changes -> b
    1:1:void android.support.v7.widget.DefaultItemAnimator.animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo):0:0 -> run
    1:1:void run():0 -> run
    2:2:long android.support.v7.widget.RecyclerView$ItemAnimator.getChangeDuration():0:0 -> run
    2:2:void android.support.v7.widget.DefaultItemAnimator.animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo):0 -> run
    2:2:void run():0 -> run
    3:3:void android.support.v7.widget.DefaultItemAnimator.animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo):0:0 -> run
    3:3:void run():0 -> run
    4:4:long android.support.v7.widget.RecyclerView$ItemAnimator.getChangeDuration():0:0 -> run
    4:4:void android.support.v7.widget.DefaultItemAnimator.animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo):0 -> run
    4:4:void run():0 -> run
    5:5:void android.support.v7.widget.DefaultItemAnimator.animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo):0:0 -> run
    5:5:void run():0 -> run
    6:6:void run():0:0 -> run
android.support.v7.widget.DefaultItemAnimator$3 -> android.support.v7.widget.f:
    android.support.v7.widget.DefaultItemAnimator this$0 -> c
    java.util.ArrayList val$additions -> b
    1:1:void android.support.v7.widget.DefaultItemAnimator.animateAddImpl(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> run
    1:1:void run():0 -> run
    2:2:long android.support.v7.widget.RecyclerView$ItemAnimator.getAddDuration():0:0 -> run
    2:2:void android.support.v7.widget.DefaultItemAnimator.animateAddImpl(android.support.v7.widget.RecyclerView$ViewHolder):0 -> run
    2:2:void run():0 -> run
    3:3:void android.support.v7.widget.DefaultItemAnimator.animateAddImpl(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> run
    3:3:void run():0 -> run
    4:4:void run():0:0 -> run
android.support.v7.widget.DefaultItemAnimator$4 -> android.support.v7.widget.g:
    android.support.v7.widget.DefaultItemAnimator this$0 -> d
    android.view.ViewPropertyAnimator val$animation -> b
    android.view.View val$view -> c
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> a
    1:1:void android.support.v7.widget.SimpleItemAnimator.dispatchRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
    2:2:void onAnimationEnd(android.animation.Animator):0:0 -> onAnimationEnd
android.support.v7.widget.DefaultItemAnimator$5 -> android.support.v7.widget.h:
    android.support.v7.widget.DefaultItemAnimator this$0 -> d
    android.view.ViewPropertyAnimator val$animation -> c
    android.view.View val$view -> b
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> a
    1:1:void android.support.v7.widget.SimpleItemAnimator.dispatchAddFinished(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
    2:2:void onAnimationEnd(android.animation.Animator):0:0 -> onAnimationEnd
android.support.v7.widget.DefaultItemAnimator$6 -> android.support.v7.widget.i:
    android.view.ViewPropertyAnimator val$animation -> e
    android.support.v7.widget.DefaultItemAnimator this$0 -> f
    android.view.View val$view -> c
    int val$deltaY -> d
    int val$deltaX -> b
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> a
    1:1:void android.support.v7.widget.SimpleItemAnimator.dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
    2:2:void onAnimationEnd(android.animation.Animator):0:0 -> onAnimationEnd
android.support.v7.widget.DefaultItemAnimator$7 -> android.support.v7.widget.j:
    android.support.v7.widget.DefaultItemAnimator this$0 -> d
    android.support.v7.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> a
    android.view.ViewPropertyAnimator val$oldViewAnim -> b
    android.view.View val$view -> c
    1:1:void android.support.v7.widget.SimpleItemAnimator.dispatchChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean):0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
    2:2:void onAnimationEnd(android.animation.Animator):0:0 -> onAnimationEnd
android.support.v7.widget.DefaultItemAnimator$8 -> android.support.v7.widget.k:
    android.support.v7.widget.DefaultItemAnimator this$0 -> d
    android.support.v7.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> a
    android.view.ViewPropertyAnimator val$newViewAnimation -> b
    android.view.View val$newView -> c
    1:1:void android.support.v7.widget.SimpleItemAnimator.dispatchChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean):0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
    2:2:void onAnimationEnd(android.animation.Animator):0:0 -> onAnimationEnd
android.support.v7.widget.DefaultItemAnimator$ChangeInfo -> android.support.v7.widget.l$a:
    int toY -> f
    int fromY -> d
    int toX -> e
    int fromX -> c
    android.support.v7.widget.RecyclerView$ViewHolder oldHolder -> a
    android.support.v7.widget.RecyclerView$ViewHolder newHolder -> b
    1:1:void <init>(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> <init>
    1:1:void <init>(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int):0 -> <init>
    2:2:void <init>(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int):0:0 -> <init>
android.support.v7.widget.DefaultItemAnimator$MoveInfo -> android.support.v7.widget.l$b:
    int toX -> d
    int toY -> e
    int fromX -> b
    int fromY -> c
    android.support.v7.widget.RecyclerView$ViewHolder holder -> a
android.support.v7.widget.DrawableUtils -> s0.f0:
    1:1:android.graphics.drawable.Drawable android.support.v7.graphics.drawable.DrawableWrapper.getWrappedDrawable():0:0 -> a
    1:1:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable):0 -> a
    2:3:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable):0:0 -> a
    1:1:void android.support.v7.widget.DrawableUtils.fixVectorDrawableTinting(android.graphics.drawable.Drawable):0:0 -> b
    1:1:void fixDrawable(android.graphics.drawable.Drawable):0 -> b
    android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> c
android.support.v7.widget.DropDownListView -> s0.g0:
    boolean mListSelectionHidden -> j
    boolean mHijackFocus -> k
    boolean mDrawsInPressedState -> l
    int mSelectionBottomPadding -> f
    android.support.v7.widget.DropDownListView$GateKeeperDrawable mSelector -> i
    int mMotionPosition -> g
    int mSelectionTopPadding -> d
    int mSelectionRightPadding -> e
    android.support.v7.widget.DropDownListView$ResolveHoverRunnable mResolveHoverRunnable -> n
    int mSelectionLeftPadding -> c
    android.graphics.Rect mSelectorRect -> b
    java.lang.reflect.Field mIsChildViewEnabled -> h
    android.support.v4.widget.ListViewAutoScrollHelper mScrollHelper -> m
    int measureHeightOfChildrenCompat(int,int,int,int,int) -> a
    1:1:void android.support.v7.widget.DropDownListView.setPressedItem(android.view.View,int,float,float):0:0 -> b
    1:1:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    2:2:void android.support.v7.widget.DropDownListView.positionSelectorLikeFocusCompat(int,android.view.View):0:0 -> b
    2:2:void android.support.v7.widget.DropDownListView.positionSelectorLikeTouchCompat(int,android.view.View,float,float):0 -> b
    2:2:void android.support.v7.widget.DropDownListView.setPressedItem(android.view.View,int,float,float):0 -> b
    2:2:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    3:3:void android.support.v7.widget.DropDownListView.positionSelectorCompat(int,android.view.View):0:0 -> b
    3:3:void android.support.v7.widget.DropDownListView.positionSelectorLikeFocusCompat(int,android.view.View):0 -> b
    3:3:void android.support.v7.widget.DropDownListView.positionSelectorLikeTouchCompat(int,android.view.View,float,float):0 -> b
    3:3:void android.support.v7.widget.DropDownListView.setPressedItem(android.view.View,int,float,float):0 -> b
    3:3:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    4:4:void android.support.v7.widget.DropDownListView.positionSelectorLikeFocusCompat(int,android.view.View):0:0 -> b
    4:4:void android.support.v7.widget.DropDownListView.positionSelectorLikeTouchCompat(int,android.view.View,float,float):0 -> b
    4:4:void android.support.v7.widget.DropDownListView.setPressedItem(android.view.View,int,float,float):0 -> b
    4:4:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    5:5:void android.support.v4.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> b
    5:5:void android.support.v7.widget.DropDownListView.positionSelectorLikeFocusCompat(int,android.view.View):0 -> b
    5:5:void android.support.v7.widget.DropDownListView.positionSelectorLikeTouchCompat(int,android.view.View,float,float):0 -> b
    5:5:void android.support.v7.widget.DropDownListView.setPressedItem(android.view.View,int,float,float):0 -> b
    5:5:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    6:6:void android.support.v7.widget.DropDownListView.positionSelectorLikeTouchCompat(int,android.view.View,float,float):0:0 -> b
    6:6:void android.support.v7.widget.DropDownListView.setPressedItem(android.view.View,int,float,float):0 -> b
    6:6:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    7:7:void android.support.v4.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> b
    7:7:void android.support.v7.widget.DropDownListView.positionSelectorLikeTouchCompat(int,android.view.View,float,float):0 -> b
    7:7:void android.support.v7.widget.DropDownListView.setPressedItem(android.view.View,int,float,float):0 -> b
    7:7:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    8:8:void android.support.v7.widget.DropDownListView.setPressedItem(android.view.View,int,float,float):0:0 -> b
    8:8:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    9:9:void android.support.v7.widget.DropDownListView.clickPressedItem(android.view.View,int):0:0 -> b
    9:9:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    10:10:void android.support.v7.widget.DropDownListView.clearPressedItem():0:0 -> b
    10:10:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    11:11:boolean onForwardedEvent(android.view.MotionEvent,int):0:0 -> b
    12:12:android.support.v4.widget.AutoScrollHelper android.support.v4.widget.AutoScrollHelper.setEnabled(boolean):0:0 -> b
    12:12:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    13:13:boolean onForwardedEvent(android.view.MotionEvent,int):0:0 -> b
    14:14:android.support.v4.widget.AutoScrollHelper android.support.v4.widget.AutoScrollHelper.setEnabled(boolean):0:0 -> b
    14:14:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    1:1:boolean android.support.v7.widget.DropDownListView.touchModeDrawsInPressedStateCompat():0:0 -> c
    1:1:void updateSelectorStateCompat():0 -> c
    2:2:void updateSelectorStateCompat():0:0 -> c
    1:1:void android.support.v7.widget.DropDownListView.drawSelectorCompat(android.graphics.Canvas):0:0 -> dispatchDraw
    1:1:void dispatchDraw(android.graphics.Canvas):0 -> dispatchDraw
    2:2:void dispatchDraw(android.graphics.Canvas):0:0 -> dispatchDraw
    1:1:void android.support.v7.widget.DropDownListView$ResolveHoverRunnable.post():0:0 -> onHoverEvent
    1:1:boolean onHoverEvent(android.view.MotionEvent):0 -> onHoverEvent
    2:2:boolean onHoverEvent(android.view.MotionEvent):0:0 -> onHoverEvent
    1:1:void android.support.v7.widget.DropDownListView$ResolveHoverRunnable.cancel():0:0 -> onTouchEvent
    1:1:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    2:2:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    1:1:void android.support.v7.widget.DropDownListView$GateKeeperDrawable.setEnabled(boolean):0:0 -> setSelectorEnabled
    1:1:void setSelectorEnabled(boolean):0 -> setSelectorEnabled
android.support.v7.widget.DropDownListView$GateKeeperDrawable -> s0.g0$a:
    boolean mEnabled -> c
    1:1:void android.support.v7.graphics.drawable.DrawableWrapper.draw(android.graphics.Canvas):0:0 -> draw
    1:1:void draw(android.graphics.Canvas):0 -> draw
    1:1:void android.support.v7.graphics.drawable.DrawableWrapper.setHotspot(float,float):0:0 -> setHotspot
    1:1:void setHotspot(float,float):0 -> setHotspot
    2:2:void android.support.v4.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> setHotspot
    2:2:void android.support.v7.graphics.drawable.DrawableWrapper.setHotspot(float,float):0 -> setHotspot
    2:2:void setHotspot(float,float):0 -> setHotspot
    1:1:void android.support.v7.graphics.drawable.DrawableWrapper.setHotspotBounds(int,int,int,int):0:0 -> setHotspotBounds
    1:1:void setHotspotBounds(int,int,int,int):0 -> setHotspotBounds
    2:2:void android.support.v4.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int):0:0 -> setHotspotBounds
    2:2:void android.support.v7.graphics.drawable.DrawableWrapper.setHotspotBounds(int,int,int,int):0 -> setHotspotBounds
    2:2:void setHotspotBounds(int,int,int,int):0 -> setHotspotBounds
    1:1:boolean android.support.v7.graphics.drawable.DrawableWrapper.setState(int[]):0:0 -> setState
    1:1:boolean setState(int[]):0 -> setState
android.support.v7.widget.DropDownListView$ResolveHoverRunnable -> s0.g0$b:
    android.support.v7.widget.DropDownListView this$0 -> b
android.support.v7.widget.FastScroller -> android.support.v7.widget.m:
    int mHorizontalThumbWidth -> n
    int mVerticalThumbCenterY -> l
    android.support.v7.widget.RecyclerView$OnScrollListener mOnScrollListener -> C
    int[] mHorizontalRange -> y
    int mHorizontalTrackHeight -> j
    int mVerticalTrackWidth -> f
    boolean mNeedHorizontalScrollbar -> u
    int mMargin -> b
    int mAnimationState -> A
    java.lang.Runnable mHideRunnable -> B
    int[] EMPTY_STATE_SET -> E
    int mDragState -> w
    float mVerticalDragY -> m
    int mRecyclerViewWidth -> q
    android.graphics.drawable.Drawable mVerticalTrackDrawable -> d
    int mHorizontalThumbCenterX -> o
    int[] mVerticalRange -> x
    android.support.v7.widget.RecyclerView mRecyclerView -> s
    android.graphics.drawable.Drawable mHorizontalTrackDrawable -> h
    int mVerticalThumbHeight -> k
    android.animation.ValueAnimator mShowHideAnimator -> z
    int mHorizontalThumbHeight -> i
    android.graphics.drawable.StateListDrawable mVerticalThumbDrawable -> c
    int mVerticalThumbWidth -> e
    android.graphics.drawable.StateListDrawable mHorizontalThumbDrawable -> g
    int mScrollbarMinimumRange -> a
    boolean mNeedVerticalScrollbar -> t
    int[] PRESSED_STATE_SET -> D
    int mState -> v
    float mHorizontalDragX -> p
    int mRecyclerViewHeight -> r
    1:1:void attachToRecyclerView(android.support.v7.widget.RecyclerView):0:0 -> <init>
    1:1:void <init>(android.support.v7.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    2:2:void android.support.v7.widget.RecyclerView.removeItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration):0:0 -> <init>
    2:2:void destroyCallbacks():0 -> <init>
    2:2:void attachToRecyclerView(android.support.v7.widget.RecyclerView):0 -> <init>
    2:2:void <init>(android.support.v7.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    3:3:void destroyCallbacks():0:0 -> <init>
    3:3:void attachToRecyclerView(android.support.v7.widget.RecyclerView):0 -> <init>
    3:3:void <init>(android.support.v7.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    4:4:void android.support.v7.widget.RecyclerView.removeOnItemTouchListener(android.support.v7.widget.RecyclerView$OnItemTouchListener):0:0 -> <init>
    4:4:void destroyCallbacks():0 -> <init>
    4:4:void attachToRecyclerView(android.support.v7.widget.RecyclerView):0 -> <init>
    4:4:void <init>(android.support.v7.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    5:5:void destroyCallbacks():0:0 -> <init>
    5:5:void attachToRecyclerView(android.support.v7.widget.RecyclerView):0 -> <init>
    5:5:void <init>(android.support.v7.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    6:6:void android.support.v7.widget.RecyclerView.removeOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener):0:0 -> <init>
    6:6:void destroyCallbacks():0 -> <init>
    6:6:void attachToRecyclerView(android.support.v7.widget.RecyclerView):0 -> <init>
    6:6:void <init>(android.support.v7.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    7:7:void destroyCallbacks():0:0 -> <init>
    7:7:void attachToRecyclerView(android.support.v7.widget.RecyclerView):0 -> <init>
    7:7:void <init>(android.support.v7.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    8:8:void attachToRecyclerView(android.support.v7.widget.RecyclerView):0:0 -> <init>
    8:8:void <init>(android.support.v7.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    9:9:void android.support.v7.widget.RecyclerView.addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration,int):0:0 -> <init>
    9:9:void android.support.v7.widget.RecyclerView.addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration):0 -> <init>
    9:9:void setupCallbacks():0 -> <init>
    9:9:void attachToRecyclerView(android.support.v7.widget.RecyclerView):0 -> <init>
    9:9:void <init>(android.support.v7.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    10:10:void setupCallbacks():0:0 -> <init>
    10:10:void attachToRecyclerView(android.support.v7.widget.RecyclerView):0 -> <init>
    10:10:void <init>(android.support.v7.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    11:11:void android.support.v7.widget.RecyclerView.addOnItemTouchListener(android.support.v7.widget.RecyclerView$OnItemTouchListener):0:0 -> <init>
    11:11:void setupCallbacks():0 -> <init>
    11:11:void attachToRecyclerView(android.support.v7.widget.RecyclerView):0 -> <init>
    11:11:void <init>(android.support.v7.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    12:12:void setupCallbacks():0:0 -> <init>
    12:12:void attachToRecyclerView(android.support.v7.widget.RecyclerView):0 -> <init>
    12:12:void <init>(android.support.v7.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    13:13:void android.support.v7.widget.RecyclerView.addOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener):0:0 -> <init>
    13:13:void setupCallbacks():0 -> <init>
    13:13:void attachToRecyclerView(android.support.v7.widget.RecyclerView):0 -> <init>
    13:13:void <init>(android.support.v7.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    void onRequestDisallowInterceptTouchEvent(boolean) -> a
    boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> b
    1:1:int[] getHorizontalRange():0:0 -> c
    1:1:void horizontalScrollTo(float):0 -> c
    1:1:void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent):0 -> c
    2:2:void horizontalScrollTo(float):0:0 -> c
    2:2:void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent):0 -> c
    3:3:void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent):0:0 -> c
    4:4:int[] getVerticalRange():0:0 -> c
    4:4:void verticalScrollTo(float):0 -> c
    4:4:void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent):0 -> c
    5:5:void verticalScrollTo(float):0:0 -> c
    5:5:void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent):0 -> c
    1:1:void drawVerticalScrollbar(android.graphics.Canvas):0:0 -> d
    1:1:void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State):0 -> d
    2:2:boolean isLayoutRTL():0:0 -> d
    2:2:void drawVerticalScrollbar(android.graphics.Canvas):0 -> d
    2:2:void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State):0 -> d
    3:3:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> d
    3:3:boolean isLayoutRTL():0 -> d
    3:3:void drawVerticalScrollbar(android.graphics.Canvas):0 -> d
    3:3:void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State):0 -> d
    4:4:void drawVerticalScrollbar(android.graphics.Canvas):0:0 -> d
    4:4:void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State):0 -> d
    5:5:void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State):0:0 -> d
    6:6:void drawHorizontalScrollbar(android.graphics.Canvas):0:0 -> d
    6:6:void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State):0 -> d
    7:7:void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State):0:0 -> d
    void cancelHide() -> e
    boolean isPointInsideHorizontalThumb(float,float) -> f
    1:1:boolean isLayoutRTL():0:0 -> g
    1:1:boolean isPointInsideVerticalThumb(float,float):0 -> g
    2:2:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> g
    2:2:boolean isLayoutRTL():0 -> g
    2:2:boolean isPointInsideVerticalThumb(float,float):0 -> g
    3:3:boolean isPointInsideVerticalThumb(float,float):0:0 -> g
    int scrollTo(float,float,int[],int,int,int) -> h
    1:1:void requestRedraw():0:0 -> i
    1:1:void setState(int):0 -> i
    2:2:void setState(int):0:0 -> i
    3:3:void resetHideDelay(int):0:0 -> i
    3:3:void setState(int):0 -> i
    4:4:void setState(int):0:0 -> i
    void show() -> j
android.support.v7.widget.FastScroller$1 -> android.support.v7.widget.m$a:
    android.support.v7.widget.FastScroller this$0 -> b
    1:1:void android.support.v7.widget.FastScroller.hide(int):0:0 -> run
    1:1:void run():0 -> run
android.support.v7.widget.FastScroller$2 -> android.support.v7.widget.m$b:
    android.support.v7.widget.FastScroller this$0 -> a
    1:1:void android.support.v7.widget.FastScroller.updateScrollPosition(int,int):0:0 -> a
    1:1:void onScrolled(android.support.v7.widget.RecyclerView,int,int):0 -> a
android.support.v7.widget.FastScroller$AnimatorListener -> android.support.v7.widget.m$c:
    android.support.v7.widget.FastScroller this$0 -> b
    boolean mCanceled -> a
    1:1:void android.support.v7.widget.FastScroller.requestRedraw():0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
android.support.v7.widget.FastScroller$AnimatorUpdater -> android.support.v7.widget.m$d:
    android.support.v7.widget.FastScroller this$0 -> a
    1:1:void android.support.v7.widget.FastScroller.requestRedraw():0:0 -> onAnimationUpdate
    1:1:void onAnimationUpdate(android.animation.ValueAnimator):0 -> onAnimationUpdate
android.support.v7.widget.FitWindowsFrameLayout -> android.support.v7.widget.FitWindowsFrameLayout:
    android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> b
android.support.v7.widget.FitWindowsLinearLayout -> android.support.v7.widget.FitWindowsLinearLayout:
    android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> b
android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener -> s0.h0:
    void onFitSystemWindows(android.graphics.Rect) -> a
android.support.v7.widget.ForwardingListener -> s0.i0:
    java.lang.Runnable mTriggerLongPress -> g
    java.lang.Runnable mDisallowIntercept -> f
    int mActivePointerId -> i
    float mScaledTouchSlop -> b
    int mLongPressTimeout -> d
    boolean mForwarding -> h
    android.view.View mSrc -> e
    int[] mTmpLocation -> j
    int mTapTimeout -> c
    void clearCallbacks() -> a
    android.support.v7.view.menu.ShowableListMenu getPopup() -> b
    boolean onForwardingStarted() -> c
    boolean onForwardingStopped() -> d
    1:1:boolean android.support.v7.widget.ForwardingListener.onTouchForwarded(android.view.MotionEvent):0:0 -> onTouch
    1:1:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    2:2:boolean android.support.v7.widget.ForwardingListener.toGlobalMotionEvent(android.view.View,android.view.MotionEvent):0:0 -> onTouch
    2:2:boolean android.support.v7.widget.ForwardingListener.onTouchForwarded(android.view.MotionEvent):0 -> onTouch
    2:2:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    3:3:boolean android.support.v7.widget.ForwardingListener.toLocalMotionEvent(android.view.View,android.view.MotionEvent):0:0 -> onTouch
    3:3:boolean android.support.v7.widget.ForwardingListener.onTouchForwarded(android.view.MotionEvent):0 -> onTouch
    3:3:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    4:4:boolean android.support.v7.widget.ForwardingListener.onTouchForwarded(android.view.MotionEvent):0:0 -> onTouch
    4:4:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    5:5:boolean onTouch(android.view.View,android.view.MotionEvent):0:0 -> onTouch
    6:6:boolean android.support.v7.widget.ForwardingListener.onTouchObserved(android.view.MotionEvent):0:0 -> onTouch
    6:6:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    7:7:boolean android.support.v7.widget.ForwardingListener.pointInView(android.view.View,float,float,float):0:0 -> onTouch
    7:7:boolean android.support.v7.widget.ForwardingListener.onTouchObserved(android.view.MotionEvent):0 -> onTouch
    7:7:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    8:8:boolean android.support.v7.widget.ForwardingListener.onTouchObserved(android.view.MotionEvent):0:0 -> onTouch
    8:8:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    9:9:boolean onTouch(android.view.View,android.view.MotionEvent):0:0 -> onTouch
android.support.v7.widget.ForwardingListener$DisallowIntercept -> s0.i0$a:
    android.support.v7.widget.ForwardingListener this$0 -> b
android.support.v7.widget.ForwardingListener$TriggerLongPress -> s0.i0$b:
    android.support.v7.widget.ForwardingListener this$0 -> b
    1:1:void android.support.v7.widget.ForwardingListener.onLongPress():0:0 -> run
    1:1:void run():0 -> run
android.support.v7.widget.GapWorker -> android.support.v7.widget.n:
    java.util.Comparator sTaskComparator -> g
    java.lang.ThreadLocal sGapWorker -> f
    long mFrameIntervalNs -> d
    java.util.ArrayList mTasks -> e
    long mPostTimeNs -> c
    java.util.ArrayList mRecyclerViews -> b
    1:1:void android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl.setPrefetchVector(int,int):0:0 -> a
    1:1:void postFromTraversal(android.support.v7.widget.RecyclerView,int,int):0 -> a
    1:1:void buildTaskList():0:0 -> b
    1:1:void prefetch(long):0 -> b
    2:2:void flushTasksWithDeadline(long):0:0 -> b
    2:2:void prefetch(long):0 -> b
    3:3:void flushTaskWithDeadline(android.support.v7.widget.GapWorker$Task,long):0:0 -> b
    3:3:void flushTasksWithDeadline(long):0 -> b
    3:3:void prefetch(long):0 -> b
    4:4:void prefetchInnerRecyclerViewWithDeadline(android.support.v7.widget.RecyclerView,long):0:0 -> b
    4:4:void flushTaskWithDeadline(android.support.v7.widget.GapWorker$Task,long):0 -> b
    4:4:void flushTasksWithDeadline(long):0 -> b
    4:4:void prefetch(long):0 -> b
    5:5:void android.support.v4.os.TraceCompat.beginSection(java.lang.String):0:0 -> b
    5:5:void prefetchInnerRecyclerViewWithDeadline(android.support.v7.widget.RecyclerView,long):0 -> b
    5:5:void flushTaskWithDeadline(android.support.v7.widget.GapWorker$Task,long):0 -> b
    5:5:void flushTasksWithDeadline(long):0 -> b
    5:5:void prefetch(long):0 -> b
    6:6:void prefetchInnerRecyclerViewWithDeadline(android.support.v7.widget.RecyclerView,long):0:0 -> b
    6:6:void flushTaskWithDeadline(android.support.v7.widget.GapWorker$Task,long):0 -> b
    6:6:void flushTasksWithDeadline(long):0 -> b
    6:6:void prefetch(long):0 -> b
    7:7:void android.support.v7.widget.RecyclerView$State.prepareForNestedPrefetch(android.support.v7.widget.RecyclerView$Adapter):0:0 -> b
    7:7:void prefetchInnerRecyclerViewWithDeadline(android.support.v7.widget.RecyclerView,long):0 -> b
    7:7:void flushTaskWithDeadline(android.support.v7.widget.GapWorker$Task,long):0 -> b
    7:7:void flushTasksWithDeadline(long):0 -> b
    7:7:void prefetch(long):0 -> b
    8:8:void prefetchInnerRecyclerViewWithDeadline(android.support.v7.widget.RecyclerView,long):0:0 -> b
    8:8:void flushTaskWithDeadline(android.support.v7.widget.GapWorker$Task,long):0 -> b
    8:8:void flushTasksWithDeadline(long):0 -> b
    8:8:void prefetch(long):0 -> b
    9:9:void android.support.v4.os.TraceCompat.endSection():0:0 -> b
    9:9:void prefetchInnerRecyclerViewWithDeadline(android.support.v7.widget.RecyclerView,long):0 -> b
    9:9:void flushTaskWithDeadline(android.support.v7.widget.GapWorker$Task,long):0 -> b
    9:9:void flushTasksWithDeadline(long):0 -> b
    9:9:void prefetch(long):0 -> b
    10:10:void prefetchInnerRecyclerViewWithDeadline(android.support.v7.widget.RecyclerView,long):0:0 -> b
    10:10:void flushTaskWithDeadline(android.support.v7.widget.GapWorker$Task,long):0 -> b
    10:10:void flushTasksWithDeadline(long):0 -> b
    10:10:void prefetch(long):0 -> b
    11:11:void android.support.v7.widget.GapWorker$Task.clear():0:0 -> b
    11:11:void flushTasksWithDeadline(long):0 -> b
    11:11:void prefetch(long):0 -> b
    1:1:boolean isPrefetchPositionAttached(android.support.v7.widget.RecyclerView,int):0:0 -> c
    1:1:android.support.v7.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(android.support.v7.widget.RecyclerView,int,long):0 -> c
    2:2:android.support.v7.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(android.support.v7.widget.RecyclerView,int,long):0:0 -> c
    1:1:void android.support.v4.os.TraceCompat.beginSection(java.lang.String):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:void android.support.v4.os.TraceCompat.endSection():0:0 -> run
    3:3:void run():0 -> run
    4:4:void run():0:0 -> run
    5:5:void android.support.v4.os.TraceCompat.endSection():0:0 -> run
    5:5:void run():0 -> run
    6:6:void run():0:0 -> run
    7:7:void android.support.v4.os.TraceCompat.endSection():0:0 -> run
    7:7:void run():0 -> run
    8:8:void run():0:0 -> run
    9:9:void android.support.v4.os.TraceCompat.endSection():0:0 -> run
    9:9:void run():0 -> run
    10:10:void run():0:0 -> run
android.support.v7.widget.GapWorker$1 -> android.support.v7.widget.n$a:
    1:1:int compare(android.support.v7.widget.GapWorker$Task,android.support.v7.widget.GapWorker$Task):0:0 -> compare
    1:1:int compare(java.lang.Object,java.lang.Object):0 -> compare
android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl -> android.support.v7.widget.n$b:
    int[] mPrefetchArray -> c
    int mCount -> d
    int mPrefetchDy -> b
    int mPrefetchDx -> a
    void addPosition(int,int) -> a
    1:1:boolean android.support.v7.widget.RecyclerView$LayoutManager.isItemPrefetchEnabled():0:0 -> b
    1:1:void collectPrefetchPositionsFromView(android.support.v7.widget.RecyclerView,boolean):0 -> b
    2:2:void collectPrefetchPositionsFromView(android.support.v7.widget.RecyclerView,boolean):0:0 -> b
    boolean lastPrefetchIncludedPosition(int) -> c
android.support.v7.widget.GapWorker$Task -> android.support.v7.widget.n$c:
    android.support.v7.widget.RecyclerView view -> d
    int position -> e
    boolean immediate -> a
    int viewVelocity -> b
    int distanceToItem -> c
android.support.v7.widget.GridLayoutManager -> android.support.v7.widget.GridLayoutManager:
    android.util.SparseIntArray mPreLayoutSpanSizeCache -> G
    android.view.View[] mSet -> F
    int[] mCachedBorders -> E
    android.graphics.Rect mDecorInsets -> J
    android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup -> I
    int mSpanCount -> D
    android.util.SparseIntArray mPreLayoutSpanIndexCache -> H
    boolean mPendingSpanCountChange -> C
    1:1:void setSpanCount(int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    2:2:void android.support.v7.widget.GridLayoutManager$SpanSizeLookup.invalidateSpanIndexCache():0:0 -> <init>
    2:2:void setSpanCount(int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    3:3:void setSpanCount(int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    void collectPrefetchPositionsForLayoutState(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> A0
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> M
    android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int) -> N0
    1:1:void assignSpans(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,boolean):0:0 -> T0
    1:1:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0 -> T0
    2:2:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0:0 -> T0
    3:3:void android.support.v7.widget.RecyclerView$LayoutManager.addView(android.view.View,int):0:0 -> T0
    3:3:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0 -> T0
    4:4:void android.support.v7.widget.RecyclerView$LayoutManager.addDisappearingView(android.view.View,int):0:0 -> T0
    4:4:void android.support.v7.widget.RecyclerView$LayoutManager.addDisappearingView(android.view.View):0 -> T0
    4:4:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0 -> T0
    5:5:void android.support.v7.widget.RecyclerView$LayoutManager.addDisappearingView(android.view.View,int):0:0 -> T0
    5:5:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0 -> T0
    6:6:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0:0 -> T0
    7:7:void android.support.v7.widget.RecyclerView$LayoutManager.calculateItemDecorationsForChild(android.view.View,android.graphics.Rect):0:0 -> T0
    7:7:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0 -> T0
    8:8:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0:0 -> T0
    9:9:void guessMeasurement(float,int):0:0 -> T0
    9:9:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0 -> T0
    10:10:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0:0 -> T0
    1:1:boolean android.support.v7.widget.RecyclerView$LayoutManager.isViewPartiallyVisible(android.view.View,boolean,boolean):0:0 -> U
    1:1:android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> U
    2:2:android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> U
    1:1:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> U0
    1:1:void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int):0 -> U0
    2:2:void ensureAnchorIsInCorrectSpan(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int):0:0 -> U0
    2:2:void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int):0 -> U0
    3:3:void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int):0:0 -> U0
    1:1:int android.support.v7.widget.GridLayoutManager$LayoutParams.getSpanIndex():0:0 -> W
    1:1:void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> W
    2:2:int android.support.v7.widget.GridLayoutManager$LayoutParams.getSpanSize():0:0 -> W
    2:2:void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> W
    3:3:void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> W
    4:4:int android.support.v7.widget.GridLayoutManager$LayoutParams.getSpanIndex():0:0 -> W
    4:4:void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> W
    5:5:int android.support.v7.widget.GridLayoutManager$LayoutParams.getSpanSize():0:0 -> W
    5:5:void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> W
    6:6:void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> W
    1:1:void android.support.v7.widget.GridLayoutManager$SpanSizeLookup.invalidateSpanIndexCache():0:0 -> Y
    1:1:void onItemsAdded(android.support.v7.widget.RecyclerView,int,int):0 -> Y
    1:1:void android.support.v7.widget.GridLayoutManager$SpanSizeLookup.invalidateSpanIndexCache():0:0 -> Z
    1:1:void onItemsChanged(android.support.v7.widget.RecyclerView):0 -> Z
    1:1:void android.support.v7.widget.GridLayoutManager$SpanSizeLookup.invalidateSpanIndexCache():0:0 -> a0
    1:1:void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int):0 -> a0
    1:1:void android.support.v7.widget.GridLayoutManager$SpanSizeLookup.invalidateSpanIndexCache():0:0 -> b0
    1:1:void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int):0 -> b0
    1:1:void android.support.v7.widget.LinearLayoutManager.setStackFromEnd(boolean):0:0 -> b1
    1:1:void setStackFromEnd(boolean):0 -> b1
    2:2:void setStackFromEnd(boolean):0:0 -> b1
    1:1:void android.support.v7.widget.GridLayoutManager$SpanSizeLookup.invalidateSpanIndexCache():0:0 -> c0
    1:1:void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int,java.lang.Object):0 -> c0
    1:1:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> d0
    1:1:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    2:2:void cachePreLayoutSpanMapping():0:0 -> d0
    2:2:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    3:3:int android.support.v7.widget.GridLayoutManager$LayoutParams.getSpanSize():0:0 -> d0
    3:3:void cachePreLayoutSpanMapping():0 -> d0
    3:3:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    4:4:void cachePreLayoutSpanMapping():0:0 -> d0
    4:4:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    5:5:int android.support.v7.widget.GridLayoutManager$LayoutParams.getSpanIndex():0:0 -> d0
    5:5:void cachePreLayoutSpanMapping():0 -> d0
    5:5:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    6:6:void cachePreLayoutSpanMapping():0:0 -> d0
    6:6:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    7:7:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> d0
    8:8:void clearPreLayoutSpanMappingCache():0:0 -> d0
    8:8:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    1:1:void android.support.v7.widget.LinearLayoutManager.onLayoutCompleted(android.support.v7.widget.RecyclerView$State):0:0 -> e0
    1:1:void onLayoutCompleted(android.support.v7.widget.RecyclerView$State):0 -> e0
    2:2:void onLayoutCompleted(android.support.v7.widget.RecyclerView$State):0:0 -> e0
    boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> f
    1:1:int[] calculateItemBorders(int[],int,int):0:0 -> f1
    1:1:void calculateItemBorders(int):0 -> f1
    2:2:void calculateItemBorders(int):0:0 -> f1
    void ensureViewSet() -> g1
    int getSpaceForSpanRange(int,int) -> h1
    1:1:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> i1
    1:1:int getSpanGroupIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int):0 -> i1
    2:2:int getSpanGroupIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int):0:0 -> i1
    1:1:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> j1
    1:1:int getSpanIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int):0 -> j1
    2:2:int getSpanIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int):0:0 -> j1
    3:3:int android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup.getSpanIndex(int,int):0:0 -> j1
    3:3:int android.support.v7.widget.GridLayoutManager$SpanSizeLookup.getCachedSpanIndex(int,int):0 -> j1
    3:3:int getSpanIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int):0 -> j1
    4:4:int getSpanIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int):0:0 -> j1
    5:5:int android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup.getSpanIndex(int,int):0:0 -> j1
    5:5:int android.support.v7.widget.GridLayoutManager$SpanSizeLookup.getCachedSpanIndex(int,int):0 -> j1
    5:5:int getSpanIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int):0 -> j1
    1:1:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> k1
    1:1:int getSpanSize(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int):0 -> k1
    2:2:int getSpanSize(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int):0:0 -> k1
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getHeightMode():0:0 -> l1
    1:1:void measureChild(android.view.View,int,boolean):0 -> l1
    2:2:void measureChild(android.view.View,int,boolean):0:0 -> l1
    3:3:int android.support.v7.widget.RecyclerView$LayoutManager.getWidthMode():0:0 -> l1
    3:3:void measureChild(android.view.View,int,boolean):0 -> l1
    4:4:void measureChild(android.view.View,int,boolean):0:0 -> l1
    void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> m1
    1:1:int android.support.v7.widget.LinearLayoutManager.getOrientation():0:0 -> n1
    1:1:void updateMeasurements():0 -> n1
    2:2:int android.support.v7.widget.RecyclerView$LayoutManager.getWidth():0:0 -> n1
    2:2:void updateMeasurements():0 -> n1
    3:3:void updateMeasurements():0:0 -> n1
    4:4:int android.support.v7.widget.RecyclerView$LayoutManager.getHeight():0:0 -> n1
    4:4:void updateMeasurements():0 -> n1
    5:5:void updateMeasurements():0:0 -> n1
    1:1:int android.support.v7.widget.LinearLayoutManager.scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> p0
    1:1:int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> p0
    1:1:int android.support.v7.widget.LinearLayoutManager.scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> q0
    1:1:int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> q0
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> s
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> t
    1:1:void android.support.v7.widget.RecyclerView$LayoutManager.setMeasuredDimension(int,int):0:0 -> t0
    1:1:void setMeasuredDimension(android.graphics.Rect,int,int):0 -> t0
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> u
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> y
    boolean supportsPredictiveItemAnimations() -> z0
android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup -> android.support.v7.widget.GridLayoutManager$a:
android.support.v7.widget.GridLayoutManager$LayoutParams -> android.support.v7.widget.GridLayoutManager$b:
    int mSpanSize -> f
    int mSpanIndex -> e
android.support.v7.widget.GridLayoutManager$SpanSizeLookup -> android.support.v7.widget.GridLayoutManager$c:
    android.util.SparseIntArray mSpanIndexCache -> a
    int getSpanGroupIndex(int,int) -> a
android.support.v7.widget.LayoutState -> android.support.v7.widget.o:
    boolean mInfinite -> i
    int mStartLine -> f
    int mEndLine -> g
    int mItemDirection -> d
    int mLayoutDirection -> e
    boolean mStopInFocusable -> h
    boolean mRecycle -> a
    int mAvailable -> b
    int mCurrentPosition -> c
android.support.v7.widget.LinearLayoutCompat -> android.support.v7.widget.p:
    int mDividerHeight -> n
    int mShowDividers -> o
    int mDividerWidth -> m
    float mWeightSum -> h
    boolean mUseLargestChild -> i
    int mGravity -> f
    int mTotalLength -> g
    int mBaselineChildTop -> d
    int mOrientation -> e
    int mBaselineAlignedChildIndex -> c
    android.graphics.drawable.Drawable mDivider -> l
    int[] mMaxAscent -> j
    boolean mBaselineAligned -> b
    int[] mMaxDescent -> k
    int mDividerPadding -> p
    1:1:android.support.v7.widget.TintTypedArray android.support.v7.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:int android.support.v7.widget.TintTypedArray.getInt(int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    4:4:int android.support.v7.widget.TintTypedArray.getInt(int,int):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    6:6:boolean android.support.v7.widget.TintTypedArray.getBoolean(int,boolean):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    8:8:float android.support.v7.widget.TintTypedArray.getFloat(int,float):0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    10:10:int android.support.v7.widget.TintTypedArray.getInt(int,int):0:0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    12:12:boolean android.support.v7.widget.TintTypedArray.getBoolean(int,boolean):0:0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    14:14:android.graphics.drawable.Drawable android.support.v7.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    15:15:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    16:16:int android.support.v7.widget.TintTypedArray.getInt(int,int):0:0 -> <init>
    16:16:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    17:17:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    18:18:int android.support.v7.widget.TintTypedArray.getDimensionPixelSize(int,int):0:0 -> <init>
    18:18:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    19:19:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    20:20:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> <init>
    20:20:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    void drawHorizontalDivider(android.graphics.Canvas,int) -> f
    void drawVerticalDivider(android.graphics.Canvas,int) -> g
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> h
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> i
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> j
    boolean hasDividerBeforeChildAt(int) -> k
    1:1:void drawDividersVertical(android.graphics.Canvas):0:0 -> onDraw
    1:1:void onDraw(android.graphics.Canvas):0 -> onDraw
    2:2:android.view.View getVirtualChildAt(int):0:0 -> onDraw
    2:2:void drawDividersVertical(android.graphics.Canvas):0 -> onDraw
    2:2:void onDraw(android.graphics.Canvas):0 -> onDraw
    3:3:void drawDividersVertical(android.graphics.Canvas):0:0 -> onDraw
    3:3:void onDraw(android.graphics.Canvas):0 -> onDraw
    4:4:android.view.View getVirtualChildAt(int):0:0 -> onDraw
    4:4:void drawDividersVertical(android.graphics.Canvas):0 -> onDraw
    4:4:void onDraw(android.graphics.Canvas):0 -> onDraw
    5:5:void drawDividersVertical(android.graphics.Canvas):0:0 -> onDraw
    5:5:void onDraw(android.graphics.Canvas):0 -> onDraw
    6:6:void drawDividersHorizontal(android.graphics.Canvas):0:0 -> onDraw
    6:6:void onDraw(android.graphics.Canvas):0 -> onDraw
    7:7:android.view.View getVirtualChildAt(int):0:0 -> onDraw
    7:7:void drawDividersHorizontal(android.graphics.Canvas):0 -> onDraw
    7:7:void onDraw(android.graphics.Canvas):0 -> onDraw
    8:8:void drawDividersHorizontal(android.graphics.Canvas):0:0 -> onDraw
    8:8:void onDraw(android.graphics.Canvas):0 -> onDraw
    9:9:android.view.View getVirtualChildAt(int):0:0 -> onDraw
    9:9:void drawDividersHorizontal(android.graphics.Canvas):0 -> onDraw
    9:9:void onDraw(android.graphics.Canvas):0 -> onDraw
    10:10:void drawDividersHorizontal(android.graphics.Canvas):0:0 -> onDraw
    10:10:void onDraw(android.graphics.Canvas):0 -> onDraw
    1:1:void layoutVertical(int,int,int,int):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:android.view.View getVirtualChildAt(int):0:0 -> onLayout
    2:2:void layoutVertical(int,int,int,int):0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0 -> onLayout
    3:3:void layoutVertical(int,int,int,int):0:0 -> onLayout
    3:3:void onLayout(boolean,int,int,int,int):0 -> onLayout
    4:4:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> onLayout
    4:4:void layoutVertical(int,int,int,int):0 -> onLayout
    4:4:void onLayout(boolean,int,int,int,int):0 -> onLayout
    5:5:int android.support.v4.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> onLayout
    5:5:void layoutVertical(int,int,int,int):0 -> onLayout
    5:5:void onLayout(boolean,int,int,int,int):0 -> onLayout
    6:6:void layoutVertical(int,int,int,int):0:0 -> onLayout
    6:6:void onLayout(boolean,int,int,int,int):0 -> onLayout
    7:7:void setChildFrame(android.view.View,int,int,int,int):0:0 -> onLayout
    7:7:void layoutVertical(int,int,int,int):0 -> onLayout
    7:7:void onLayout(boolean,int,int,int,int):0 -> onLayout
    8:8:void layoutVertical(int,int,int,int):0:0 -> onLayout
    8:8:void onLayout(boolean,int,int,int,int):0 -> onLayout
    9:9:void layoutHorizontal(int,int,int,int):0:0 -> onLayout
    9:9:void onLayout(boolean,int,int,int,int):0 -> onLayout
    10:10:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> onLayout
    10:10:void layoutHorizontal(int,int,int,int):0 -> onLayout
    10:10:void onLayout(boolean,int,int,int,int):0 -> onLayout
    11:11:int android.support.v4.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> onLayout
    11:11:void layoutHorizontal(int,int,int,int):0 -> onLayout
    11:11:void onLayout(boolean,int,int,int,int):0 -> onLayout
    12:12:void layoutHorizontal(int,int,int,int):0:0 -> onLayout
    12:12:void onLayout(boolean,int,int,int,int):0 -> onLayout
    13:13:android.view.View getVirtualChildAt(int):0:0 -> onLayout
    13:13:void layoutHorizontal(int,int,int,int):0 -> onLayout
    13:13:void onLayout(boolean,int,int,int,int):0 -> onLayout
    14:14:void layoutHorizontal(int,int,int,int):0:0 -> onLayout
    14:14:void onLayout(boolean,int,int,int,int):0 -> onLayout
    15:15:void setChildFrame(android.view.View,int,int,int,int):0:0 -> onLayout
    15:15:void layoutHorizontal(int,int,int,int):0 -> onLayout
    15:15:void onLayout(boolean,int,int,int,int):0 -> onLayout
    16:16:void layoutHorizontal(int,int,int,int):0:0 -> onLayout
    16:16:void onLayout(boolean,int,int,int,int):0 -> onLayout
    1:1:void measureVertical(int,int):0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:android.view.View getVirtualChildAt(int):0:0 -> onMeasure
    2:2:void measureVertical(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0 -> onMeasure
    3:3:void measureVertical(int,int):0:0 -> onMeasure
    3:3:void onMeasure(int,int):0 -> onMeasure
    4:4:void measureChildBeforeLayout(android.view.View,int,int,int,int,int):0:0 -> onMeasure
    4:4:void measureVertical(int,int):0 -> onMeasure
    4:4:void onMeasure(int,int):0 -> onMeasure
    5:5:void measureVertical(int,int):0:0 -> onMeasure
    5:5:void onMeasure(int,int):0 -> onMeasure
    6:6:android.view.View getVirtualChildAt(int):0:0 -> onMeasure
    6:6:void measureVertical(int,int):0 -> onMeasure
    6:6:void onMeasure(int,int):0 -> onMeasure
    7:7:void measureVertical(int,int):0:0 -> onMeasure
    7:7:void onMeasure(int,int):0 -> onMeasure
    8:8:android.view.View getVirtualChildAt(int):0:0 -> onMeasure
    8:8:void measureVertical(int,int):0 -> onMeasure
    8:8:void onMeasure(int,int):0 -> onMeasure
    9:9:void measureVertical(int,int):0:0 -> onMeasure
    9:9:void onMeasure(int,int):0 -> onMeasure
    10:10:android.view.View getVirtualChildAt(int):0:0 -> onMeasure
    10:10:void measureVertical(int,int):0 -> onMeasure
    10:10:void onMeasure(int,int):0 -> onMeasure
    11:11:void measureVertical(int,int):0:0 -> onMeasure
    11:11:void onMeasure(int,int):0 -> onMeasure
    12:12:void forceUniformWidth(int,int):0:0 -> onMeasure
    12:12:void measureVertical(int,int):0 -> onMeasure
    12:12:void onMeasure(int,int):0 -> onMeasure
    13:13:android.view.View getVirtualChildAt(int):0:0 -> onMeasure
    13:13:void forceUniformWidth(int,int):0 -> onMeasure
    13:13:void measureVertical(int,int):0 -> onMeasure
    13:13:void onMeasure(int,int):0 -> onMeasure
    14:14:void forceUniformWidth(int,int):0:0 -> onMeasure
    14:14:void measureVertical(int,int):0 -> onMeasure
    14:14:void onMeasure(int,int):0 -> onMeasure
    15:15:void measureHorizontal(int,int):0:0 -> onMeasure
    15:15:void onMeasure(int,int):0 -> onMeasure
    16:16:android.view.View getVirtualChildAt(int):0:0 -> onMeasure
    16:16:void measureHorizontal(int,int):0 -> onMeasure
    16:16:void onMeasure(int,int):0 -> onMeasure
    17:17:void measureHorizontal(int,int):0:0 -> onMeasure
    17:17:void onMeasure(int,int):0 -> onMeasure
    18:18:void measureChildBeforeLayout(android.view.View,int,int,int,int,int):0:0 -> onMeasure
    18:18:void measureHorizontal(int,int):0 -> onMeasure
    18:18:void onMeasure(int,int):0 -> onMeasure
    19:19:void measureHorizontal(int,int):0:0 -> onMeasure
    19:19:void onMeasure(int,int):0 -> onMeasure
    20:20:android.view.View getVirtualChildAt(int):0:0 -> onMeasure
    20:20:void measureHorizontal(int,int):0 -> onMeasure
    20:20:void onMeasure(int,int):0 -> onMeasure
    21:21:void measureHorizontal(int,int):0:0 -> onMeasure
    21:21:void onMeasure(int,int):0 -> onMeasure
    22:22:android.view.View getVirtualChildAt(int):0:0 -> onMeasure
    22:22:void measureHorizontal(int,int):0 -> onMeasure
    22:22:void onMeasure(int,int):0 -> onMeasure
    23:23:void measureHorizontal(int,int):0:0 -> onMeasure
    23:23:void onMeasure(int,int):0 -> onMeasure
    24:24:android.view.View getVirtualChildAt(int):0:0 -> onMeasure
    24:24:void measureHorizontal(int,int):0 -> onMeasure
    24:24:void onMeasure(int,int):0 -> onMeasure
    25:25:void measureHorizontal(int,int):0:0 -> onMeasure
    25:25:void onMeasure(int,int):0 -> onMeasure
    26:26:void forceUniformHeight(int,int):0:0 -> onMeasure
    26:26:void measureHorizontal(int,int):0 -> onMeasure
    26:26:void onMeasure(int,int):0 -> onMeasure
    27:27:android.view.View getVirtualChildAt(int):0:0 -> onMeasure
    27:27:void forceUniformHeight(int,int):0 -> onMeasure
    27:27:void measureHorizontal(int,int):0 -> onMeasure
    27:27:void onMeasure(int,int):0 -> onMeasure
    28:28:void forceUniformHeight(int,int):0:0 -> onMeasure
    28:28:void measureHorizontal(int,int):0 -> onMeasure
    28:28:void onMeasure(int,int):0 -> onMeasure
android.support.v7.widget.LinearLayoutCompat$LayoutParams -> android.support.v7.widget.p$a:
    float weight -> a
    int gravity -> b
android.support.v7.widget.LinearLayoutManager -> android.support.v7.widget.LinearLayoutManager:
    int mOrientation -> o
    android.support.v7.widget.OrientationHelper mOrientationHelper -> q
    boolean mStackFromEnd -> u
    boolean mSmoothScrollbarEnabled -> v
    android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState -> p
    int mInitialPrefetchItemCount -> B
    boolean mLastStackFromEnd -> r
    boolean mReverseLayout -> s
    boolean mShouldReverseLayout -> t
    android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo -> z
    int mPendingScrollPositionOffset -> x
    android.support.v7.widget.LinearLayoutManager$LayoutChunkResult mLayoutChunkResult -> A
    int mPendingScrollPosition -> w
    android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState -> y
    1:1:void setReverseLayout(boolean):0:0 -> <init>
    1:1:void <init>(android.content.Context,int,boolean):0 -> <init>
    2:2:void setReverseLayout(boolean):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    void collectPrefetchPositionsForLayoutState(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> A0
    int computeScrollExtent(android.support.v7.widget.RecyclerView$State) -> B0
    int computeScrollOffset(android.support.v7.widget.RecyclerView$State) -> C0
    int computeScrollRange(android.support.v7.widget.RecyclerView$State) -> D0
    int convertFocusDirectionToLayoutDirection(int) -> E0
    1:1:android.support.v7.widget.LinearLayoutManager$LayoutState createLayoutState():0:0 -> F0
    1:1:void ensureLayoutState():0 -> F0
    2:2:void ensureLayoutState():0:0 -> F0
    1:1:void android.support.v7.widget.LinearLayoutManager$LayoutChunkResult.resetInternal():0:0 -> G0
    1:1:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean):0 -> G0
    2:2:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean):0:0 -> G0
    3:3:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> G0
    3:3:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean):0 -> G0
    4:4:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean):0:0 -> G0
    android.view.View findFirstReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> H0
    android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> I0
    android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> J0
    android.view.View findLastReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> K0
    android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> L0
    android.view.View findOneVisibleChild(int,int,boolean,boolean) -> M0
    android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int) -> N0
    boolean isAutoMeasureEnabled() -> O
    int fixLayoutEndGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> O0
    int fixLayoutStartGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> P0
    android.view.View getChildClosestToEnd() -> Q0
    android.view.View getChildClosestToStart() -> R0
    boolean isLayoutRTL() -> S0
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> T
    1:1:void android.support.v7.widget.RecyclerView$LayoutManager.addView(android.view.View,int):0:0 -> T0
    1:1:void android.support.v7.widget.RecyclerView$LayoutManager.addView(android.view.View):0 -> T0
    1:1:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0 -> T0
    2:2:void android.support.v7.widget.RecyclerView$LayoutManager.addView(android.view.View,int):0:0 -> T0
    2:2:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0 -> T0
    3:3:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0:0 -> T0
    4:4:void android.support.v7.widget.RecyclerView$LayoutManager.addDisappearingView(android.view.View,int):0:0 -> T0
    4:4:void android.support.v7.widget.RecyclerView$LayoutManager.addDisappearingView(android.view.View):0 -> T0
    4:4:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0 -> T0
    5:5:void android.support.v7.widget.RecyclerView$LayoutManager.addDisappearingView(android.view.View,int):0:0 -> T0
    5:5:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0 -> T0
    6:6:void android.support.v7.widget.RecyclerView$LayoutManager.measureChildWithMargins(android.view.View,int,int):0:0 -> T0
    6:6:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0 -> T0
    7:7:int android.support.v7.widget.RecyclerView$LayoutManager.getWidth():0:0 -> T0
    7:7:void android.support.v7.widget.RecyclerView$LayoutManager.measureChildWithMargins(android.view.View,int,int):0 -> T0
    7:7:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0 -> T0
    8:8:int android.support.v7.widget.RecyclerView$LayoutManager.getWidthMode():0:0 -> T0
    8:8:void android.support.v7.widget.RecyclerView$LayoutManager.measureChildWithMargins(android.view.View,int,int):0 -> T0
    8:8:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0 -> T0
    9:9:void android.support.v7.widget.RecyclerView$LayoutManager.measureChildWithMargins(android.view.View,int,int):0:0 -> T0
    9:9:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0 -> T0
    10:10:int android.support.v7.widget.RecyclerView$LayoutManager.getHeight():0:0 -> T0
    10:10:void android.support.v7.widget.RecyclerView$LayoutManager.measureChildWithMargins(android.view.View,int,int):0 -> T0
    10:10:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0 -> T0
    11:11:int android.support.v7.widget.RecyclerView$LayoutManager.getHeightMode():0:0 -> T0
    11:11:void android.support.v7.widget.RecyclerView$LayoutManager.measureChildWithMargins(android.view.View,int,int):0 -> T0
    11:11:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0 -> T0
    12:12:void android.support.v7.widget.RecyclerView$LayoutManager.measureChildWithMargins(android.view.View,int,int):0:0 -> T0
    12:12:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0 -> T0
    13:13:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0:0 -> T0
    14:14:int android.support.v7.widget.RecyclerView$LayoutManager.getWidth():0:0 -> T0
    14:14:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0 -> T0
    15:15:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult):0:0 -> T0
    1:1:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> U
    1:1:android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> U
    2:2:android.view.View findLastPartiallyOrCompletelyInvisibleChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> U
    2:2:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> U
    2:2:android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> U
    3:3:android.view.View findFirstPartiallyOrCompletelyInvisibleChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> U
    3:3:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> U
    3:3:android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> U
    4:4:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> U
    4:4:android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> U
    5:5:android.view.View findFirstPartiallyOrCompletelyInvisibleChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> U
    5:5:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> U
    5:5:android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> U
    6:6:android.view.View findLastPartiallyOrCompletelyInvisibleChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> U
    6:6:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> U
    6:6:android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> U
    7:7:android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> U
    void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int) -> U0
    1:1:int findFirstVisibleItemPosition():0:0 -> V
    1:1:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0 -> V
    2:2:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0:0 -> V
    3:3:int findLastVisibleItemPosition():0:0 -> V
    3:3:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0 -> V
    4:4:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0:0 -> V
    1:1:void recycleViewsFromEnd(android.support.v7.widget.RecyclerView$Recycler,int):0:0 -> V0
    1:1:void recycleByLayoutState(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState):0 -> V0
    2:2:void recycleViewsFromStart(android.support.v7.widget.RecyclerView$Recycler,int):0:0 -> V0
    2:2:void recycleByLayoutState(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState):0 -> V0
    void recycleChildren(android.support.v7.widget.RecyclerView$Recycler,int,int) -> W0
    boolean resolveIsInfinite() -> X0
    void resolveShouldLayoutReverse() -> Y0
    int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> Z0
    void setOrientation(int) -> a1
    void setStackFromEnd(boolean) -> b1
    1:1:void android.support.v7.widget.RecyclerView$LayoutManager.assertNotInLayoutOrScroll(java.lang.String):0:0 -> c
    1:1:void assertNotInLayoutOrScroll(java.lang.String):0 -> c
    1:1:int getExtraLayoutSpace(android.support.v7.widget.RecyclerView$State):0:0 -> c1
    1:1:void updateLayoutState(int,int,boolean,android.support.v7.widget.RecyclerView$State):0 -> c1
    2:2:void updateLayoutState(int,int,boolean,android.support.v7.widget.RecyclerView$State):0:0 -> c1
    boolean canScrollHorizontally() -> d
    1:1:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> d0
    1:1:boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0 -> d0
    1:1:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0 -> d0
    1:1:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    2:2:boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0:0 -> d0
    2:2:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0 -> d0
    2:2:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    3:3:boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0:0 -> d0
    3:3:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0 -> d0
    3:3:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    4:4:boolean android.support.v7.widget.LinearLayoutManager$AnchorInfo.isViewValidAsAnchor(android.view.View,android.support.v7.widget.RecyclerView$State):0:0 -> d0
    4:4:boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0 -> d0
    4:4:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0 -> d0
    4:4:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    5:5:boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0:0 -> d0
    5:5:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0 -> d0
    5:5:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    6:6:android.view.View findReferenceChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> d0
    6:6:boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0 -> d0
    6:6:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0 -> d0
    6:6:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    7:7:android.view.View findReferenceChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> d0
    7:7:boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0 -> d0
    7:7:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0 -> d0
    7:7:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    8:8:boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0:0 -> d0
    8:8:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0 -> d0
    8:8:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    9:9:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> d0
    9:9:boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0 -> d0
    9:9:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0 -> d0
    9:9:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    10:10:boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0:0 -> d0
    10:10:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0 -> d0
    10:10:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    11:11:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo):0:0 -> d0
    11:11:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    12:12:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> d0
    13:13:int getExtraLayoutSpace(android.support.v7.widget.RecyclerView$State):0:0 -> d0
    13:13:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    14:14:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> d0
    15:15:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> d0
    15:15:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    16:16:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> d0
    17:17:void updateLayoutStateToFillStart(android.support.v7.widget.LinearLayoutManager$AnchorInfo):0:0 -> d0
    17:17:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    18:18:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> d0
    19:19:void updateLayoutStateToFillEnd(android.support.v7.widget.LinearLayoutManager$AnchorInfo):0:0 -> d0
    19:19:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    20:20:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> d0
    21:21:void updateLayoutStateToFillEnd(android.support.v7.widget.LinearLayoutManager$AnchorInfo):0:0 -> d0
    21:21:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    22:22:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> d0
    23:23:void updateLayoutStateToFillStart(android.support.v7.widget.LinearLayoutManager$AnchorInfo):0:0 -> d0
    23:23:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    24:24:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> d0
    25:25:boolean android.support.v7.widget.RecyclerView$State.willRunPredictiveAnimations():0:0 -> d0
    25:25:void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int):0 -> d0
    25:25:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    26:26:void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int):0:0 -> d0
    26:26:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    27:27:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> d0
    27:27:void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int):0 -> d0
    27:27:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    28:28:void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int):0:0 -> d0
    28:28:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    29:29:java.util.List android.support.v7.widget.RecyclerView$Recycler.getScrapList():0:0 -> d0
    29:29:void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int):0 -> d0
    29:29:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    30:30:void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int):0:0 -> d0
    30:30:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    31:31:void android.support.v7.widget.LinearLayoutManager$LayoutState.assignPositionFromScrapList():0:0 -> d0
    31:31:void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int):0 -> d0
    31:31:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    32:32:void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int):0:0 -> d0
    32:32:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    33:33:void android.support.v7.widget.LinearLayoutManager$LayoutState.assignPositionFromScrapList():0:0 -> d0
    33:33:void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int):0 -> d0
    33:33:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    34:34:void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int):0:0 -> d0
    34:34:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    35:35:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> d0
    35:35:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    36:36:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> d0
    37:37:void android.support.v7.widget.OrientationHelper.onLayoutComplete():0:0 -> d0
    37:37:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> d0
    38:38:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> d0
    void updateLayoutStateToFillEnd(int,int) -> d1
    boolean canScrollVertically() -> e
    void onLayoutCompleted(android.support.v7.widget.RecyclerView$State) -> e0
    void updateLayoutStateToFillStart(int,int) -> e1
    void onRestoreInstanceState(android.os.Parcelable) -> f0
    1:1:void android.support.v7.widget.LinearLayoutManager$SavedState.invalidateAnchor():0:0 -> g0
    1:1:android.os.Parcelable onSaveInstanceState():0 -> g0
    void collectAdjacentPrefetchPositions(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> h
    void collectInitialPrefetchPositions(int,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> i
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> j
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> k
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> l
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> m
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> n
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> o
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> p0
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> q0
    android.view.View findViewByPosition(int) -> r
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> s
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getHeightMode():0:0 -> x0
    1:1:boolean shouldMeasureTwice():0 -> x0
    2:2:int android.support.v7.widget.RecyclerView$LayoutManager.getWidthMode():0:0 -> x0
    2:2:boolean shouldMeasureTwice():0 -> x0
    3:3:boolean android.support.v7.widget.RecyclerView$LayoutManager.hasFlexibleChildInBothOrientations():0:0 -> x0
    3:3:boolean shouldMeasureTwice():0 -> x0
    boolean supportsPredictiveItemAnimations() -> z0
android.support.v7.widget.LinearLayoutManager$AnchorInfo -> android.support.v7.widget.LinearLayoutManager$a:
    android.support.v7.widget.OrientationHelper mOrientationHelper -> a
    boolean mValid -> e
    int mPosition -> b
    int mCoordinate -> c
    boolean mLayoutFromEnd -> d
    void assignCoordinateFromPadding() -> a
    void assignFromView(android.view.View,int) -> b
    void assignFromViewAndKeepVisibleRect(android.view.View,int) -> c
    void reset() -> d
android.support.v7.widget.LinearLayoutManager$LayoutChunkResult -> android.support.v7.widget.LinearLayoutManager$b:
    boolean mFinished -> b
    boolean mIgnoreConsumed -> c
    int mConsumed -> a
    boolean mFocusable -> d
android.support.v7.widget.LinearLayoutManager$LayoutState -> android.support.v7.widget.LinearLayoutManager$c:
    int mExtra -> h
    boolean mInfinite -> k
    int mLastScrollDelta -> i
    int mLayoutDirection -> f
    java.util.List mScrapList -> j
    int mScrollingOffset -> g
    int mCurrentPosition -> d
    int mItemDirection -> e
    boolean mRecycle -> a
    int mOffset -> b
    int mAvailable -> c
    1:1:android.view.View nextViewInLimitedList(android.view.View):0:0 -> a
    1:1:void assignPositionFromScrapList(android.view.View):0 -> a
    2:2:void assignPositionFromScrapList(android.view.View):0:0 -> a
    boolean hasMore(android.support.v7.widget.RecyclerView$State) -> b
    1:1:android.view.View nextViewFromScrapList():0:0 -> c
    1:1:android.view.View next(android.support.v7.widget.RecyclerView$Recycler):0 -> c
    2:2:android.view.View next(android.support.v7.widget.RecyclerView$Recycler):0:0 -> c
    3:3:android.view.View android.support.v7.widget.RecyclerView$Recycler.getViewForPosition(int,boolean):0:0 -> c
    3:3:android.view.View android.support.v7.widget.RecyclerView$Recycler.getViewForPosition(int):0 -> c
    3:3:android.view.View next(android.support.v7.widget.RecyclerView$Recycler):0 -> c
    4:4:android.view.View next(android.support.v7.widget.RecyclerView$Recycler):0:0 -> c
android.support.v7.widget.LinearLayoutManager$SavedState -> android.support.v7.widget.LinearLayoutManager$d:
    int mAnchorOffset -> b
    boolean mAnchorLayoutFromEnd -> c
    int mAnchorPosition -> a
    boolean hasValidAnchor() -> a
android.support.v7.widget.LinearLayoutManager$SavedState$1 -> android.support.v7.widget.LinearLayoutManager$d$a:
    1:1:android.support.v7.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:android.support.v7.widget.LinearLayoutManager$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
android.support.v7.widget.ListPopupWindow -> s0.k0:
    int mListItemExpandMaximum -> n
    int mDropDownVerticalOffset -> h
    boolean mOverlapAnchor -> k
    int mDropDownWidth -> f
    android.view.View mDropDownAnchorView -> p
    android.database.DataSetObserver mObserver -> o
    android.support.v7.widget.ListPopupWindow$PopupScrollListener mScrollListener -> t
    boolean mModal -> y
    android.support.v7.widget.ListPopupWindow$ListSelectorHider mHideSelector -> u
    android.graphics.Rect mEpicenterBounds -> x
    android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> s
    java.lang.reflect.Method sGetMaxAvailableHeightMethod -> B
    android.os.Handler mHandler -> v
    android.content.Context mContext -> b
    int mDropDownGravity -> m
    boolean mDropDownVerticalOffsetSet -> j
    int mDropDownWindowLayoutType -> i
    boolean mOverlapAnchorSet -> l
    int mDropDownHorizontalOffset -> g
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> q
    int mDropDownHeight -> e
    android.widget.PopupWindow mPopup -> z
    android.widget.ListAdapter mAdapter -> c
    android.support.v7.widget.DropDownListView mDropDownList -> d
    android.graphics.Rect mTempRect -> w
    java.lang.reflect.Method sSetEpicenterBoundsMethod -> C
    android.support.v7.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> r
    java.lang.reflect.Method sClipToWindowEnabledMethod -> A
    boolean isShowing() -> c
    android.widget.ListView getListView() -> d
    android.support.v7.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> e
    1:1:int android.support.v7.widget.ListPopupWindow.buildDropDown():0:0 -> f
    1:1:void show():0 -> f
    2:2:android.view.View android.support.v7.widget.ListPopupWindow.getAnchorView():0:0 -> f
    2:2:int android.support.v7.widget.ListPopupWindow.buildDropDown():0 -> f
    2:2:void show():0 -> f
    3:3:int android.support.v7.widget.ListPopupWindow.buildDropDown():0:0 -> f
    3:3:void show():0 -> f
    4:4:int android.support.v7.widget.ListPopupWindow.getMaxAvailableHeight(android.view.View,int,boolean):0:0 -> f
    4:4:int android.support.v7.widget.ListPopupWindow.buildDropDown():0 -> f
    4:4:void show():0 -> f
    5:5:int android.support.v7.widget.ListPopupWindow.buildDropDown():0:0 -> f
    5:5:void show():0 -> f
    6:6:boolean android.support.v7.widget.ListPopupWindow.isInputMethodNotNeeded():0:0 -> f
    6:6:void show():0 -> f
    7:7:void show():0:0 -> f
    8:8:android.view.View android.support.v7.widget.ListPopupWindow.getAnchorView():0:0 -> f
    8:8:void show():0 -> f
    9:9:void show():0:0 -> f
    10:10:boolean android.support.v4.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> f
    10:10:void show():0 -> f
    11:11:void show():0:0 -> f
    12:12:android.view.View android.support.v7.widget.ListPopupWindow.getAnchorView():0:0 -> f
    12:12:void show():0 -> f
    13:13:void show():0:0 -> f
    14:14:android.view.View android.support.v7.widget.ListPopupWindow.getAnchorView():0:0 -> f
    14:14:void show():0 -> f
    15:15:void show():0:0 -> f
    16:16:android.view.View android.support.v7.widget.ListPopupWindow.getAnchorView():0:0 -> f
    16:16:void show():0 -> f
    17:17:void show():0:0 -> f
    18:18:void android.support.v7.widget.ListPopupWindow.setPopupClipToScreenEnabled(boolean):0:0 -> f
    18:18:void show():0 -> f
    19:19:void show():0:0 -> f
    20:20:android.view.View android.support.v7.widget.ListPopupWindow.getAnchorView():0:0 -> f
    20:20:void show():0 -> f
    21:21:void show():0:0 -> f
    22:22:void android.support.v4.widget.PopupWindowCompat.showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int):0:0 -> f
    22:22:void show():0 -> f
    23:23:void show():0:0 -> f
    24:24:void android.support.v7.widget.ListPopupWindow.clearListSelection():0:0 -> f
    24:24:void show():0 -> f
    25:25:void show():0:0 -> f
    android.graphics.drawable.Drawable getBackground() -> g
    void setAdapter(android.widget.ListAdapter) -> h
    1:1:void android.support.v7.widget.ListPopupWindow.setWidth(int):0:0 -> i
    1:1:void setContentWidth(int):0 -> i
    void setModal(boolean) -> j
    void setVerticalOffset(int) -> k
android.support.v7.widget.ListPopupWindow$3 -> s0.j0:
    android.support.v7.widget.ListPopupWindow this$0 -> b
android.support.v7.widget.ListPopupWindow$ListSelectorHider -> s0.k0$a:
    android.support.v7.widget.ListPopupWindow this$0 -> b
    1:1:void android.support.v7.widget.ListPopupWindow.clearListSelection():0:0 -> run
    1:1:void run():0 -> run
android.support.v7.widget.ListPopupWindow$PopupDataSetObserver -> s0.k0$b:
    android.support.v7.widget.ListPopupWindow this$0 -> a
android.support.v7.widget.ListPopupWindow$PopupScrollListener -> s0.k0$c:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    1:1:boolean android.support.v7.widget.ListPopupWindow.isInputMethodNotNeeded():0:0 -> onScrollStateChanged
    1:1:void onScrollStateChanged(android.widget.AbsListView,int):0 -> onScrollStateChanged
    2:2:void onScrollStateChanged(android.widget.AbsListView,int):0:0 -> onScrollStateChanged
android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor -> s0.k0$d:
    android.support.v7.widget.ListPopupWindow this$0 -> b
android.support.v7.widget.ListPopupWindow$ResizePopupRunnable -> s0.k0$e:
    android.support.v7.widget.ListPopupWindow this$0 -> b
    1:1:boolean android.support.v4.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
android.support.v7.widget.MenuItemHoverListener -> s0.l0:
    void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onItemHoverExit(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> b
android.support.v7.widget.MenuPopupWindow -> s0.m0:
    android.support.v7.widget.MenuItemHoverListener mHoverListener -> D
    java.lang.reflect.Method sSetTouchModalMethod -> E
    void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onItemHoverExit(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> b
    android.support.v7.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> e
android.support.v7.widget.MenuPopupWindow$MenuDropDownListView -> s0.m0$a:
    int mAdvanceKey -> o
    android.view.MenuItem mHoveredMenuItem -> r
    android.support.v7.widget.MenuItemHoverListener mHoverListener -> q
    int mRetreatKey -> p
    1:1:android.support.v7.view.menu.MenuBuilder android.support.v7.view.menu.MenuAdapter.getAdapterMenu():0:0 -> onHoverEvent
    1:1:boolean onHoverEvent(android.view.MotionEvent):0 -> onHoverEvent
    2:2:boolean onHoverEvent(android.view.MotionEvent):0:0 -> onHoverEvent
    1:1:android.support.v7.view.menu.MenuBuilder android.support.v7.view.menu.MenuAdapter.getAdapterMenu():0:0 -> onKeyDown
    1:1:boolean onKeyDown(int,android.view.KeyEvent):0 -> onKeyDown
    2:2:boolean onKeyDown(int,android.view.KeyEvent):0:0 -> onKeyDown
android.support.v7.widget.OpReorderer -> android.support.v7.widget.q:
    android.support.v7.widget.OpReorderer$Callback mCallback -> a
android.support.v7.widget.OpReorderer$Callback -> android.support.v7.widget.q$a:
android.support.v7.widget.OrientationHelper -> android.support.v7.widget.t:
    android.support.v7.widget.RecyclerView$LayoutManager mLayoutManager -> a
    int mLastTotalSpace -> b
    android.graphics.Rect mTmpRect -> c
    1:1:void <init>(android.support.v7.widget.RecyclerView$LayoutManager):0:0 -> <init>
    1:1:void <init>(android.support.v7.widget.RecyclerView$LayoutManager,android.support.v7.widget.OrientationHelper$1):0 -> <init>
    1:1:android.support.v7.widget.OrientationHelper createVerticalHelper(android.support.v7.widget.RecyclerView$LayoutManager):0:0 -> a
    1:1:android.support.v7.widget.OrientationHelper createOrientationHelper(android.support.v7.widget.RecyclerView$LayoutManager,int):0 -> a
    2:2:android.support.v7.widget.OrientationHelper createOrientationHelper(android.support.v7.widget.RecyclerView$LayoutManager,int):0:0 -> a
    3:3:android.support.v7.widget.OrientationHelper createHorizontalHelper(android.support.v7.widget.RecyclerView$LayoutManager):0:0 -> a
    3:3:android.support.v7.widget.OrientationHelper createOrientationHelper(android.support.v7.widget.RecyclerView$LayoutManager,int):0 -> a
    int getDecoratedEnd(android.view.View) -> b
    int getDecoratedMeasurement(android.view.View) -> c
    int getDecoratedMeasurementInOther(android.view.View) -> d
    int getDecoratedStart(android.view.View) -> e
    int getEnd() -> f
    int getEndAfterPadding() -> g
    int getEndPadding() -> h
    int getMode() -> i
    int getModeInOther() -> j
    int getStartAfterPadding() -> k
    int getTotalSpace() -> l
    int getTotalSpaceChange() -> m
    int getTransformedEndWithDecoration(android.view.View) -> n
    int getTransformedStartWithDecoration(android.view.View) -> o
    void offsetChildren(int) -> p
android.support.v7.widget.OrientationHelper$1 -> android.support.v7.widget.r:
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getDecoratedRight(android.view.View):0:0 -> b
    1:1:int getDecoratedEnd(android.view.View):0 -> b
    2:2:int android.support.v7.widget.RecyclerView$LayoutManager.getRightDecorationWidth(android.view.View):0:0 -> b
    2:2:int android.support.v7.widget.RecyclerView$LayoutManager.getDecoratedRight(android.view.View):0 -> b
    2:2:int getDecoratedEnd(android.view.View):0 -> b
    3:3:int getDecoratedEnd(android.view.View):0:0 -> b
    int getDecoratedMeasurement(android.view.View) -> c
    int getDecoratedMeasurementInOther(android.view.View) -> d
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getDecoratedLeft(android.view.View):0:0 -> e
    1:1:int getDecoratedStart(android.view.View):0 -> e
    2:2:int android.support.v7.widget.RecyclerView$LayoutManager.getLeftDecorationWidth(android.view.View):0:0 -> e
    2:2:int android.support.v7.widget.RecyclerView$LayoutManager.getDecoratedLeft(android.view.View):0 -> e
    2:2:int getDecoratedStart(android.view.View):0 -> e
    3:3:int getDecoratedStart(android.view.View):0:0 -> e
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getWidth():0:0 -> f
    1:1:int getEnd():0 -> f
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getWidth():0:0 -> g
    1:1:int getEndAfterPadding():0 -> g
    2:2:int getEndAfterPadding():0:0 -> g
    int getEndPadding() -> h
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getWidthMode():0:0 -> i
    1:1:int getMode():0 -> i
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getHeightMode():0:0 -> j
    1:1:int getModeInOther():0 -> j
    int getStartAfterPadding() -> k
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getWidth():0:0 -> l
    1:1:int getTotalSpace():0 -> l
    2:2:int getTotalSpace():0:0 -> l
    int getTransformedEndWithDecoration(android.view.View) -> n
    int getTransformedStartWithDecoration(android.view.View) -> o
    void offsetChildren(int) -> p
android.support.v7.widget.OrientationHelper$2 -> android.support.v7.widget.s:
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getDecoratedBottom(android.view.View):0:0 -> b
    1:1:int getDecoratedEnd(android.view.View):0 -> b
    2:2:int android.support.v7.widget.RecyclerView$LayoutManager.getBottomDecorationHeight(android.view.View):0:0 -> b
    2:2:int android.support.v7.widget.RecyclerView$LayoutManager.getDecoratedBottom(android.view.View):0 -> b
    2:2:int getDecoratedEnd(android.view.View):0 -> b
    3:3:int getDecoratedEnd(android.view.View):0:0 -> b
    int getDecoratedMeasurement(android.view.View) -> c
    int getDecoratedMeasurementInOther(android.view.View) -> d
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getDecoratedTop(android.view.View):0:0 -> e
    1:1:int getDecoratedStart(android.view.View):0 -> e
    2:2:int android.support.v7.widget.RecyclerView$LayoutManager.getTopDecorationHeight(android.view.View):0:0 -> e
    2:2:int android.support.v7.widget.RecyclerView$LayoutManager.getDecoratedTop(android.view.View):0 -> e
    2:2:int getDecoratedStart(android.view.View):0 -> e
    3:3:int getDecoratedStart(android.view.View):0:0 -> e
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getHeight():0:0 -> f
    1:1:int getEnd():0 -> f
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getHeight():0:0 -> g
    1:1:int getEndAfterPadding():0 -> g
    2:2:int getEndAfterPadding():0:0 -> g
    int getEndPadding() -> h
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getHeightMode():0:0 -> i
    1:1:int getMode():0 -> i
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getWidthMode():0:0 -> j
    1:1:int getModeInOther():0 -> j
    int getStartAfterPadding() -> k
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getHeight():0:0 -> l
    1:1:int getTotalSpace():0 -> l
    2:2:int getTotalSpace():0:0 -> l
    int getTransformedEndWithDecoration(android.view.View) -> n
    int getTransformedStartWithDecoration(android.view.View) -> o
    void offsetChildren(int) -> p
android.support.v7.widget.RecyclerView -> android.support.v7.widget.RecyclerView:
    int mInitialTouchY -> O
    int mScrollState -> K
    android.support.v7.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate -> k0
    android.support.v7.widget.RecyclerView$Adapter mAdapter -> l
    int mLayoutOrScrollCounter -> C
    java.util.List mPendingAccessibilityImportanceChange -> s0
    android.widget.EdgeEffect mLeftGlow -> F
    android.support.v7.widget.RecyclerView$State mState -> d0
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> z
    android.view.animation.Interpolator sQuinticInterpolator -> A0
    android.support.v7.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback -> u0
    float mScaledVerticalScrollFactor -> V
    int mEatenAccessibilityChangeFlags -> y
    int mMaxFlingVelocity -> T
    boolean mClipToPadding -> h
    int mInterceptRequestLayoutDepth -> u
    android.support.v7.widget.RecyclerView$ViewFlinger mViewFlinger -> a0
    int mLastTouchX -> P
    int mScrollPointerId -> L
    android.view.VelocityTracker mVelocityTracker -> M
    boolean mLayoutWasDefered -> v
    int mDispatchScrollCounter -> D
    int[] NESTED_SCROLLING_ATTRS -> v0
    int[] mScrollConsumed -> p0
    android.graphics.RectF mTempRectF -> k
    boolean mIsAttached -> r
    boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC -> x0
    int[] mScrollStepConsumed -> r0
    android.support.v7.widget.RecyclerView$RecyclerViewDataObserver mObserver -> b
    android.widget.EdgeEffect mBottomGlow -> I
    android.graphics.Rect mTempRect -> i
    android.support.v7.widget.AdapterHelper mAdapterHelper -> e
    android.support.v7.widget.RecyclerView$Recycler mRecycler -> c
    boolean mItemsChanged -> h0
    boolean mPostedAnimatorRunner -> j0
    int mLastTouchY -> Q
    boolean mItemsAddedOrRemoved -> g0
    android.support.v7.widget.RecyclerView$SavedState mPendingSavedState -> d
    android.support.v4.view.NestedScrollingChildHelper mScrollingChildHelper -> n0
    java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE -> z0
    android.support.v7.widget.ViewInfoStore mViewInfoStore -> g
    android.support.v7.widget.RecyclerView$RecyclerListener mRecyclerListener -> n
    boolean mLayoutFrozen -> w
    java.lang.Runnable mItemAnimatorRunner -> t0
    android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator -> J
    boolean mHasFixedSize -> s
    java.util.ArrayList mItemDecorations -> o
    android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback -> l0
    android.widget.EdgeEffect mRightGlow -> H
    android.graphics.Rect mTempRect2 -> j
    android.support.v7.widget.RecyclerView$OnScrollListener mScrollListener -> e0
    boolean mDataSetHasChangedAfterLayout -> A
    int mTouchSlop -> R
    android.support.v7.widget.ChildHelper mChildHelper -> f
    android.support.v7.widget.GapWorker mGapWorker -> b0
    android.support.v7.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory -> E
    int mInitialTouchX -> N
    int[] CLIP_TO_PADDING_ATTR -> w0
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener -> i0
    boolean mPreserveFocusAfterLayout -> W
    boolean mIgnoreMotionEventTillDown -> x
    boolean ALLOW_THREAD_GAP_WORK -> y0
    int[] mScrollOffset -> o0
    boolean mFirstLayoutComplete -> t
    int[] mNestedOffsets -> q0
    android.widget.EdgeEffect mTopGlow -> G
    int[] mMinMaxLayoutPositions -> m0
    android.support.v7.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener -> q
    android.support.v7.widget.RecyclerView$LayoutManager mLayout -> m
    float mScaledHorizontalScrollFactor -> U
    java.util.List mScrollListeners -> f0
    android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry -> c0
    boolean mDispatchItemsChangedEvent -> B
    int mMinFlingVelocity -> S
    java.util.ArrayList mOnItemTouchListeners -> p
    1:1:float android.support.v4.view.ViewConfigurationCompat.getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:float android.support.v4.view.ViewConfigurationCompat.getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    5:5:void android.support.v7.widget.RecyclerView$ItemAnimator.setListener(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void initAdapterManager():0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    7:7:void initChildrenHelper():0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    8:8:void initAutofill():0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    9:9:int android.support.v4.view.ViewCompat.getImportantForAutofill(android.view.View):0:0 -> <init>
    9:9:void initAutofill():0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    10:10:void android.support.v4.view.ViewCompat.setImportantForAutofill(android.view.View,int):0:0 -> <init>
    10:10:void initAutofill():0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    11:11:int android.support.v4.view.ViewCompat.getImportantForAccessibility(android.view.View):0:0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    12:12:void android.support.v4.view.ViewCompat.setImportantForAccessibility(android.view.View,int):0:0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    14:14:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable):0:0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    15:15:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    16:16:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int):0:0 -> <init>
    16:16:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    17:17:java.lang.String getFullClassName(android.content.Context,java.lang.String):0:0 -> <init>
    17:17:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int):0 -> <init>
    17:17:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    18:18:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int):0:0 -> <init>
    18:18:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    19:19:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    void fillRemainingScrollValues(android.support.v7.widget.RecyclerView$State) -> A
    android.view.View findContainingItemView(android.view.View) -> B
    void findMinMaxChildLayoutPositions(int[]) -> C
    android.support.v7.widget.RecyclerView findNestedRecyclerView(android.view.View) -> D
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> E
    1:1:int android.support.v7.widget.AdapterHelper.applyPendingUpdatesToPosition(int):0:0 -> F
    1:1:int getAdapterPositionFor(android.support.v7.widget.RecyclerView$ViewHolder):0 -> F
    long getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder) -> G
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> H
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> I
    1:1:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> J
    1:1:android.graphics.Rect getItemDecorInsetsForChild(android.view.View):0 -> J
    2:2:android.graphics.Rect getItemDecorInsetsForChild(android.view.View):0:0 -> J
    3:3:boolean android.support.v7.widget.RecyclerView$LayoutParams.isViewInvalid():0:0 -> J
    3:3:android.graphics.Rect getItemDecorInsetsForChild(android.view.View):0 -> J
    4:4:android.graphics.Rect getItemDecorInsetsForChild(android.view.View):0:0 -> J
    5:5:void android.support.v7.widget.RecyclerView$ItemDecoration.getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State):0:0 -> J
    5:5:android.graphics.Rect getItemDecorInsetsForChild(android.view.View):0 -> J
    6:6:void android.support.v7.widget.RecyclerView$ItemDecoration.getItemOffsets(android.graphics.Rect,int,android.support.v7.widget.RecyclerView):0:0 -> J
    6:6:void android.support.v7.widget.RecyclerView$ItemDecoration.getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State):0 -> J
    6:6:android.graphics.Rect getItemDecorInsetsForChild(android.view.View):0 -> J
    7:7:android.graphics.Rect getItemDecorInsetsForChild(android.view.View):0:0 -> J
    1:1:boolean android.support.v4.view.NestedScrollingChildHelper.hasNestedScrollingParent(int):0:0 -> K
    1:1:boolean hasNestedScrollingParent(int):0 -> K
    boolean hasPendingAdapterUpdates() -> L
    void invalidateGlows() -> M
    boolean isComputingLayout() -> N
    1:1:void android.support.v7.widget.RecyclerView$Recycler.markItemDecorInsetsDirty():0:0 -> O
    1:1:void markItemDecorInsetsDirty():0 -> O
    1:1:void android.support.v7.widget.RecyclerView$ViewHolder.flagRemovedAndOffsetPosition(int,int,boolean):0:0 -> P
    1:1:void offsetPositionRecordsForRemove(int,int,boolean):0 -> P
    2:2:void offsetPositionRecordsForRemove(int,int,boolean):0:0 -> P
    3:3:void android.support.v7.widget.RecyclerView$Recycler.offsetPositionRecordsForRemove(int,int,boolean):0:0 -> P
    3:3:void offsetPositionRecordsForRemove(int,int,boolean):0 -> P
    4:4:void offsetPositionRecordsForRemove(int,int,boolean):0:0 -> P
    void onEnterLayoutOrScroll() -> Q
    1:1:void dispatchContentChangedIfNecessary():0:0 -> R
    1:1:void onExitLayoutOrScroll(boolean):0 -> R
    2:2:boolean isAccessibilityEnabled():0:0 -> R
    2:2:void dispatchContentChangedIfNecessary():0 -> R
    2:2:void onExitLayoutOrScroll(boolean):0 -> R
    3:3:void dispatchContentChangedIfNecessary():0:0 -> R
    3:3:void onExitLayoutOrScroll(boolean):0 -> R
    4:4:void android.support.v4.view.accessibility.AccessibilityEventCompat.setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int):0:0 -> R
    4:4:void dispatchContentChangedIfNecessary():0 -> R
    4:4:void onExitLayoutOrScroll(boolean):0 -> R
    5:5:void dispatchContentChangedIfNecessary():0:0 -> R
    5:5:void onExitLayoutOrScroll(boolean):0 -> R
    6:6:void dispatchPendingImportantForAccessibilityChanges():0:0 -> R
    6:6:void onExitLayoutOrScroll(boolean):0 -> R
    7:7:void android.support.v4.view.ViewCompat.setImportantForAccessibility(android.view.View,int):0:0 -> R
    7:7:void dispatchPendingImportantForAccessibilityChanges():0 -> R
    7:7:void onExitLayoutOrScroll(boolean):0 -> R
    8:8:void dispatchPendingImportantForAccessibilityChanges():0:0 -> R
    8:8:void onExitLayoutOrScroll(boolean):0 -> R
    void onPointerUp(android.view.MotionEvent) -> S
    1:1:void android.support.v4.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> T
    1:1:void postAnimationRunner():0 -> T
    2:2:void postAnimationRunner():0:0 -> T
    1:1:void android.support.v7.widget.AdapterHelper.reset():0:0 -> U
    1:1:void processAdapterUpdatesAndSetAnimationFlags():0 -> U
    2:2:void processAdapterUpdatesAndSetAnimationFlags():0:0 -> U
    3:3:boolean predictiveItemAnimationsEnabled():0:0 -> U
    3:3:void processAdapterUpdatesAndSetAnimationFlags():0 -> U
    4:4:void processAdapterUpdatesAndSetAnimationFlags():0:0 -> U
    5:5:boolean predictiveItemAnimationsEnabled():0:0 -> U
    5:5:void processAdapterUpdatesAndSetAnimationFlags():0 -> U
    6:6:void processAdapterUpdatesAndSetAnimationFlags():0:0 -> U
    1:1:void markKnownViewsInvalid():0:0 -> V
    1:1:void processDataSetCompletelyChanged(boolean):0 -> V
    2:2:void android.support.v7.widget.RecyclerView$Recycler.markKnownViewsInvalid():0:0 -> V
    2:2:void markKnownViewsInvalid():0 -> V
    2:2:void processDataSetCompletelyChanged(boolean):0 -> V
    1:1:long getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> W
    1:1:void recordAnimationInfoIfBouncedHiddenView(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> W
    2:2:void recordAnimationInfoIfBouncedHiddenView(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> W
    3:3:void android.support.v7.widget.ViewInfoStore.addToOldChangeHolders(long,android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> W
    3:3:void recordAnimationInfoIfBouncedHiddenView(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> W
    4:4:void recordAnimationInfoIfBouncedHiddenView(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> W
    void removeAndRecycleViews() -> X
    void requestChildOnScreen(android.view.View,android.view.View) -> Y
    1:1:void releaseGlows():0:0 -> Z
    1:1:void resetTouch():0 -> Z
    2:2:void android.support.v4.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> Z
    2:2:void releaseGlows():0 -> Z
    2:2:void resetTouch():0 -> Z
    void access$000(android.support.v7.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    1:1:boolean android.support.v4.view.MotionEventCompat.isFromSource(android.view.MotionEvent,int):0:0 -> a0
    1:1:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> a0
    2:2:boolean scrollByInternal(int,int,android.view.MotionEvent):0:0 -> a0
    3:3:void pullGlows(float,float,float,float):0:0 -> a0
    3:3:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> a0
    4:4:void android.support.v4.widget.EdgeEffectCompat.onPull(android.widget.EdgeEffect,float,float):0:0 -> a0
    4:4:void pullGlows(float,float,float,float):0 -> a0
    4:4:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> a0
    5:5:void pullGlows(float,float,float,float):0:0 -> a0
    5:5:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> a0
    6:6:void android.support.v4.widget.EdgeEffectCompat.onPull(android.widget.EdgeEffect,float,float):0:0 -> a0
    6:6:void pullGlows(float,float,float,float):0 -> a0
    6:6:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> a0
    7:7:void pullGlows(float,float,float,float):0:0 -> a0
    7:7:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> a0
    8:8:void android.support.v4.widget.EdgeEffectCompat.onPull(android.widget.EdgeEffect,float,float):0:0 -> a0
    8:8:void pullGlows(float,float,float,float):0 -> a0
    8:8:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> a0
    9:9:void pullGlows(float,float,float,float):0:0 -> a0
    9:9:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> a0
    10:10:void android.support.v4.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> a0
    10:10:void pullGlows(float,float,float,float):0 -> a0
    10:10:boolean scrollByInternal(int,int,android.view.MotionEvent):0 -> a0
    11:11:boolean scrollByInternal(int,int,android.view.MotionEvent):0:0 -> a0
    1:1:void android.support.v4.os.TraceCompat.beginSection(java.lang.String):0:0 -> b0
    1:1:void scrollStep(int,int,int[]):0 -> b0
    2:2:void scrollStep(int,int,int[]):0:0 -> b0
    3:3:void android.support.v4.os.TraceCompat.endSection():0:0 -> b0
    3:3:void scrollStep(int,int,int[]):0 -> b0
    4:4:void repositionShadowingViews():0:0 -> b0
    4:4:void scrollStep(int,int,int[]):0 -> b0
    5:5:void onExitLayoutOrScroll():0:0 -> b0
    5:5:void scrollStep(int,int,int[]):0 -> b0
    6:6:void scrollStep(int,int,int[]):0:0 -> b0
    void access$100(android.support.v7.widget.RecyclerView,int) -> c
    1:1:void android.support.v4.view.ViewCompat.setImportantForAccessibility(android.view.View,int):0:0 -> c0
    1:1:boolean setChildImportantForAccessibilityInternal(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> c0
    boolean access$200(android.support.v7.widget.RecyclerView) -> d
    1:1:void smoothScrollBy(int,int,android.view.animation.Interpolator):0:0 -> d0
    1:1:void smoothScrollBy(int,int):0 -> d0
    2:2:int android.support.v7.widget.RecyclerView$ViewFlinger.computeScrollDuration(int,int,int,int):0:0 -> d0
    2:2:void android.support.v7.widget.RecyclerView$ViewFlinger.smoothScrollBy(int,int,android.view.animation.Interpolator):0 -> d0
    2:2:void smoothScrollBy(int,int,android.view.animation.Interpolator):0 -> d0
    2:2:void smoothScrollBy(int,int):0 -> d0
    3:3:float android.support.v7.widget.RecyclerView$ViewFlinger.distanceInfluenceForSnapDuration(float):0:0 -> d0
    3:3:int android.support.v7.widget.RecyclerView$ViewFlinger.computeScrollDuration(int,int,int,int):0 -> d0
    3:3:void android.support.v7.widget.RecyclerView$ViewFlinger.smoothScrollBy(int,int,android.view.animation.Interpolator):0 -> d0
    3:3:void smoothScrollBy(int,int,android.view.animation.Interpolator):0 -> d0
    3:3:void smoothScrollBy(int,int):0 -> d0
    4:4:int android.support.v7.widget.RecyclerView$ViewFlinger.computeScrollDuration(int,int,int,int):0:0 -> d0
    4:4:void android.support.v7.widget.RecyclerView$ViewFlinger.smoothScrollBy(int,int,android.view.animation.Interpolator):0 -> d0
    4:4:void smoothScrollBy(int,int,android.view.animation.Interpolator):0 -> d0
    4:4:void smoothScrollBy(int,int):0 -> d0
    5:5:void android.support.v7.widget.RecyclerView$ViewFlinger.smoothScrollBy(int,int,android.view.animation.Interpolator):0:0 -> d0
    5:5:void smoothScrollBy(int,int,android.view.animation.Interpolator):0 -> d0
    5:5:void smoothScrollBy(int,int):0 -> d0
    6:6:void android.support.v7.widget.RecyclerView$ViewFlinger.smoothScrollBy(int,int,int,android.view.animation.Interpolator):0:0 -> d0
    6:6:void android.support.v7.widget.RecyclerView$ViewFlinger.smoothScrollBy(int,int,android.view.animation.Interpolator):0 -> d0
    6:6:void smoothScrollBy(int,int,android.view.animation.Interpolator):0 -> d0
    6:6:void smoothScrollBy(int,int):0 -> d0
    1:1:boolean android.support.v4.view.NestedScrollingChildHelper.dispatchNestedPreScroll(int,int,int[],int[]):0:0 -> dispatchNestedPreScroll
    1:1:boolean dispatchNestedPreScroll(int,int,int[],int[]):0 -> dispatchNestedPreScroll
    1:1:boolean android.support.v4.view.NestedScrollingChildHelper.dispatchNestedScroll(int,int,int,int,int[]):0:0 -> dispatchNestedScroll
    1:1:boolean dispatchNestedScroll(int,int,int,int,int[]):0 -> dispatchNestedScroll
    1:1:void android.support.v4.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> draw
    1:1:void draw(android.graphics.Canvas):0 -> draw
    void access$300(android.support.v7.widget.RecyclerView,int,int) -> e
    void startInterceptRequestLayout() -> e0
    void stopNestedScroll(int) -> f
    boolean startNestedScroll(int,int) -> f0
    1:1:boolean isPreferredNextFocus(android.view.View,android.view.View,int):0:0 -> focusSearch
    1:1:android.view.View focusSearch(android.view.View,int):0 -> focusSearch
    2:2:android.view.View focusSearch(android.view.View,int):0:0 -> focusSearch
    1:1:void android.support.v7.widget.ChildHelper.addView(android.view.View,boolean):0:0 -> g
    1:1:void addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder):0 -> g
    2:2:void android.support.v7.widget.ChildHelper.hide(android.view.View):0:0 -> g
    2:2:void addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder):0 -> g
    3:3:int android.support.v7.widget.RecyclerView$5.indexOfChild(android.view.View):0:0 -> g
    3:3:void android.support.v7.widget.ChildHelper.hide(android.view.View):0 -> g
    3:3:void addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder):0 -> g
    4:4:void android.support.v7.widget.ChildHelper.hide(android.view.View):0:0 -> g
    4:4:void addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder):0 -> g
    void stopInterceptRequestLayout(boolean) -> g0
    void assertNotInLayoutOrScroll(java.lang.String) -> h
    1:1:void stopScrollersInternal():0:0 -> h0
    1:1:void stopScroll():0 -> h0
    2:2:void android.support.v7.widget.RecyclerView$ViewFlinger.stop():0:0 -> h0
    2:2:void stopScrollersInternal():0 -> h0
    2:2:void stopScroll():0 -> h0
    1:1:boolean android.support.v4.view.NestedScrollingChildHelper.hasNestedScrollingParent():0:0 -> hasNestedScrollingParent
    1:1:boolean hasNestedScrollingParent():0 -> hasNestedScrollingParent
    void cancelTouch() -> i
    1:1:boolean android.support.v4.view.NestedScrollingChildHelper.isNestedScrollingEnabled():0:0 -> isNestedScrollingEnabled
    1:1:boolean isNestedScrollingEnabled():0 -> isNestedScrollingEnabled
    void clearNestedRecyclerViewIfNotNested(android.support.v7.widget.RecyclerView$ViewHolder) -> j
    1:1:void android.support.v7.widget.RecyclerView$Recycler.clearOldPositions():0:0 -> k
    1:1:void clearOldPositions():0 -> k
    1:1:void android.support.v4.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> l
    1:1:void considerReleasingGlowsOnScroll(int,int):0 -> l
    1:1:boolean android.support.v7.widget.AdapterHelper.hasAnyUpdateTypes(int):0:0 -> m
    1:1:void consumePendingUpdateOperations():0 -> m
    2:2:void consumePendingUpdateOperations():0:0 -> m
    3:3:void android.support.v4.os.TraceCompat.beginSection(java.lang.String):0:0 -> m
    3:3:void consumePendingUpdateOperations():0 -> m
    4:4:void consumePendingUpdateOperations():0:0 -> m
    5:5:void android.support.v4.os.TraceCompat.endSection():0:0 -> m
    5:5:void consumePendingUpdateOperations():0 -> m
    6:6:void android.support.v4.os.TraceCompat.beginSection(java.lang.String):0:0 -> m
    6:6:void consumePendingUpdateOperations():0 -> m
    7:7:void consumePendingUpdateOperations():0:0 -> m
    8:8:void android.support.v4.os.TraceCompat.endSection():0:0 -> m
    8:8:void consumePendingUpdateOperations():0 -> m
    1:1:int android.support.v4.view.ViewCompat.getMinimumWidth(android.view.View):0:0 -> n
    1:1:void defaultOnMeasure(int,int):0 -> n
    2:2:void defaultOnMeasure(int,int):0:0 -> n
    3:3:int android.support.v4.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> n
    3:3:void defaultOnMeasure(int,int):0 -> n
    4:4:void defaultOnMeasure(int,int):0:0 -> n
    void dispatchChildDetached(android.view.View) -> o
    1:1:void android.support.v7.widget.RecyclerView$LayoutManager.dispatchAttachedToWindow(android.support.v7.widget.RecyclerView):0:0 -> onAttachedToWindow
    1:1:void onAttachedToWindow():0 -> onAttachedToWindow
    2:2:void onAttachedToWindow():0:0 -> onAttachedToWindow
    3:3:android.view.Display android.support.v4.view.ViewCompat.getDisplay(android.view.View):0:0 -> onAttachedToWindow
    3:3:void onAttachedToWindow():0 -> onAttachedToWindow
    4:4:void onAttachedToWindow():0:0 -> onAttachedToWindow
    5:5:void android.support.v7.widget.GapWorker.add(android.support.v7.widget.RecyclerView):0:0 -> onAttachedToWindow
    5:5:void onAttachedToWindow():0 -> onAttachedToWindow
    1:1:void android.support.v7.widget.RecyclerView$LayoutManager.dispatchDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler):0:0 -> onDetachedFromWindow
    1:1:void onDetachedFromWindow():0 -> onDetachedFromWindow
    2:2:void onDetachedFromWindow():0:0 -> onDetachedFromWindow
    3:3:void android.support.v7.widget.ViewInfoStore$InfoRecord.drainCache():0:0 -> onDetachedFromWindow
    3:3:void android.support.v7.widget.ViewInfoStore.onDetach():0 -> onDetachedFromWindow
    3:3:void onDetachedFromWindow():0 -> onDetachedFromWindow
    4:4:void onDetachedFromWindow():0:0 -> onDetachedFromWindow
    5:5:void android.support.v7.widget.GapWorker.remove(android.support.v7.widget.RecyclerView):0:0 -> onDetachedFromWindow
    5:5:void onDetachedFromWindow():0 -> onDetachedFromWindow
    6:6:void onDetachedFromWindow():0:0 -> onDetachedFromWindow
    1:1:boolean dispatchOnItemTouchIntercept(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    1:1:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    2:2:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    1:1:void android.support.v4.os.TraceCompat.beginSection(java.lang.String):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    3:3:void android.support.v4.os.TraceCompat.endSection():0:0 -> onLayout
    3:3:void onLayout(boolean,int,int,int,int):0 -> onLayout
    4:4:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    1:1:void android.support.v7.widget.RecyclerView$LayoutManager.onMeasure(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int):0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
    3:3:void android.support.v7.widget.RecyclerView$LayoutManager.onMeasure(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int):0:0 -> onMeasure
    3:3:void onMeasure(int,int):0 -> onMeasure
    4:4:void onMeasure(int,int):0:0 -> onMeasure
    5:5:void android.support.v7.widget.RecyclerView$LayoutManager.onMeasure(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int):0:0 -> onMeasure
    5:5:void onMeasure(int,int):0 -> onMeasure
    6:6:void onMeasure(int,int):0:0 -> onMeasure
    1:1:android.os.Parcelable android.support.v4.view.AbsSavedState.getSuperState():0:0 -> onRestoreInstanceState
    1:1:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    2:2:void onRestoreInstanceState(android.os.Parcelable):0:0 -> onRestoreInstanceState
    1:1:void android.support.v7.widget.RecyclerView$SavedState.copyFrom(android.support.v7.widget.RecyclerView$SavedState):0:0 -> onSaveInstanceState
    1:1:android.os.Parcelable onSaveInstanceState():0 -> onSaveInstanceState
    2:2:android.os.Parcelable onSaveInstanceState():0:0 -> onSaveInstanceState
    1:1:boolean dispatchOnItemTouch(android.view.MotionEvent):0:0 -> onTouchEvent
    1:1:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    2:2:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    3:3:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0:0 -> onTouchEvent
    3:3:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    4:4:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    5:5:boolean fling(int,int):0:0 -> onTouchEvent
    5:5:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    6:6:void android.support.v7.widget.RecyclerView$ViewFlinger.fling(int,int):0:0 -> onTouchEvent
    6:6:boolean fling(int,int):0 -> onTouchEvent
    6:6:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    7:7:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    1:1:boolean android.support.v7.widget.AdapterHelper.hasUpdates():0:0 -> p
    1:1:void dispatchLayout():0 -> p
    2:2:void dispatchLayout():0:0 -> p
    3:3:int android.support.v7.widget.RecyclerView$LayoutManager.getWidth():0:0 -> p
    3:3:void dispatchLayout():0 -> p
    4:4:void dispatchLayout():0:0 -> p
    5:5:int android.support.v7.widget.RecyclerView$LayoutManager.getHeight():0:0 -> p
    5:5:void dispatchLayout():0 -> p
    6:7:void dispatchLayout():0:0 -> p
    8:8:void dispatchLayoutStep3():0:0 -> p
    8:8:void dispatchLayout():0 -> p
    9:9:long getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> p
    9:9:void dispatchLayoutStep3():0 -> p
    9:9:void dispatchLayout():0 -> p
    10:10:void dispatchLayoutStep3():0:0 -> p
    10:10:void dispatchLayout():0 -> p
    11:11:android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo android.support.v7.widget.RecyclerView$ItemAnimator.obtainHolderInfo():0:0 -> p
    11:11:android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo android.support.v7.widget.RecyclerView$ItemAnimator.recordPostLayoutInformation(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$ViewHolder):0 -> p
    11:11:void dispatchLayoutStep3():0 -> p
    11:11:void dispatchLayout():0 -> p
    12:12:android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo.setFrom(android.support.v7.widget.RecyclerView$ViewHolder,int):0:0 -> p
    12:12:android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo.setFrom(android.support.v7.widget.RecyclerView$ViewHolder):0 -> p
    12:12:android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo android.support.v7.widget.RecyclerView$ItemAnimator.recordPostLayoutInformation(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$ViewHolder):0 -> p
    12:12:void dispatchLayoutStep3():0 -> p
    12:12:void dispatchLayout():0 -> p
    13:13:void dispatchLayoutStep3():0:0 -> p
    13:13:void dispatchLayout():0 -> p
    14:14:android.support.v7.widget.RecyclerView$ViewHolder android.support.v7.widget.ViewInfoStore.getFromOldChangeHolders(long):0:0 -> p
    14:14:void dispatchLayoutStep3():0 -> p
    14:14:void dispatchLayout():0 -> p
    15:15:java.lang.Object android.support.v4.util.LongSparseArray.get(long):0:0 -> p
    15:15:android.support.v7.widget.RecyclerView$ViewHolder android.support.v7.widget.ViewInfoStore.getFromOldChangeHolders(long):0 -> p
    15:15:void dispatchLayoutStep3():0 -> p
    15:15:void dispatchLayout():0 -> p
    16:16:android.support.v7.widget.RecyclerView$ViewHolder android.support.v7.widget.ViewInfoStore.getFromOldChangeHolders(long):0:0 -> p
    16:16:void dispatchLayoutStep3():0 -> p
    16:16:void dispatchLayout():0 -> p
    17:17:void dispatchLayoutStep3():0:0 -> p
    17:17:void dispatchLayout():0 -> p
    18:18:android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo android.support.v7.widget.ViewInfoStore.popFromPreLayout(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> p
    18:18:void dispatchLayoutStep3():0 -> p
    18:18:void dispatchLayout():0 -> p
    19:19:void dispatchLayoutStep3():0:0 -> p
    19:19:void dispatchLayout():0 -> p
    20:20:android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo android.support.v7.widget.ViewInfoStore.popFromPostLayout(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> p
    20:20:void dispatchLayoutStep3():0 -> p
    20:20:void dispatchLayout():0 -> p
    21:21:void handleMissingPreInfoForChangeError(long,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> p
    21:21:void dispatchLayoutStep3():0 -> p
    21:21:void dispatchLayout():0 -> p
    22:22:void animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean):0:0 -> p
    22:22:void dispatchLayoutStep3():0 -> p
    22:22:void dispatchLayout():0 -> p
    23:23:void dispatchLayoutStep3():0:0 -> p
    23:23:void dispatchLayout():0 -> p
    24:24:void android.support.v7.widget.ViewInfoStore.process(android.support.v7.widget.ViewInfoStore$ProcessCallback):0:0 -> p
    24:24:void dispatchLayoutStep3():0 -> p
    24:24:void dispatchLayout():0 -> p
    25:25:int android.support.v4.util.SimpleArrayMap.size():0:0 -> p
    25:25:void android.support.v7.widget.ViewInfoStore.process(android.support.v7.widget.ViewInfoStore$ProcessCallback):0 -> p
    25:25:void dispatchLayoutStep3():0 -> p
    25:25:void dispatchLayout():0 -> p
    26:26:void android.support.v7.widget.ViewInfoStore.process(android.support.v7.widget.ViewInfoStore$ProcessCallback):0:0 -> p
    26:26:void dispatchLayoutStep3():0 -> p
    26:26:void dispatchLayout():0 -> p
    27:27:void android.support.v7.widget.RecyclerView$4.unused(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> p
    27:27:void android.support.v7.widget.ViewInfoStore.process(android.support.v7.widget.ViewInfoStore$ProcessCallback):0 -> p
    27:27:void dispatchLayoutStep3():0 -> p
    27:27:void dispatchLayout():0 -> p
    28:28:void android.support.v7.widget.ViewInfoStore.process(android.support.v7.widget.ViewInfoStore$ProcessCallback):0:0 -> p
    28:28:void dispatchLayoutStep3():0 -> p
    28:28:void dispatchLayout():0 -> p
    29:29:void android.support.v7.widget.RecyclerView$4.processPersistent(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> p
    29:29:void android.support.v7.widget.ViewInfoStore.process(android.support.v7.widget.ViewInfoStore$ProcessCallback):0 -> p
    29:29:void dispatchLayoutStep3():0 -> p
    29:29:void dispatchLayout():0 -> p
    30:30:boolean android.support.v7.widget.SimpleItemAnimator.animatePersistence(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> p
    30:30:void android.support.v7.widget.RecyclerView$4.processPersistent(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> p
    30:30:void android.support.v7.widget.ViewInfoStore.process(android.support.v7.widget.ViewInfoStore$ProcessCallback):0 -> p
    30:30:void dispatchLayoutStep3():0 -> p
    30:30:void dispatchLayout():0 -> p
    31:31:void android.support.v7.widget.SimpleItemAnimator.dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> p
    31:31:boolean android.support.v7.widget.SimpleItemAnimator.animatePersistence(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> p
    31:31:void android.support.v7.widget.RecyclerView$4.processPersistent(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> p
    31:31:void android.support.v7.widget.ViewInfoStore.process(android.support.v7.widget.ViewInfoStore$ProcessCallback):0 -> p
    31:31:void dispatchLayoutStep3():0 -> p
    31:31:void dispatchLayout():0 -> p
    32:32:boolean android.support.v7.widget.SimpleItemAnimator.animatePersistence(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> p
    32:32:void android.support.v7.widget.RecyclerView$4.processPersistent(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> p
    32:32:void android.support.v7.widget.ViewInfoStore.process(android.support.v7.widget.ViewInfoStore$ProcessCallback):0 -> p
    32:32:void dispatchLayoutStep3():0 -> p
    32:32:void dispatchLayout():0 -> p
    33:33:void android.support.v7.widget.RecyclerView$4.processPersistent(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> p
    33:33:void android.support.v7.widget.ViewInfoStore.process(android.support.v7.widget.ViewInfoStore$ProcessCallback):0 -> p
    33:33:void dispatchLayoutStep3():0 -> p
    33:33:void dispatchLayout():0 -> p
    34:34:void android.support.v7.widget.ViewInfoStore.process(android.support.v7.widget.ViewInfoStore$ProcessCallback):0:0 -> p
    34:34:void dispatchLayoutStep3():0 -> p
    34:34:void dispatchLayout():0 -> p
    35:35:void dispatchLayoutStep3():0:0 -> p
    35:35:void dispatchLayout():0 -> p
    36:36:void onExitLayoutOrScroll():0:0 -> p
    36:36:void dispatchLayoutStep3():0 -> p
    36:36:void dispatchLayout():0 -> p
    37:37:void dispatchLayoutStep3():0:0 -> p
    37:37:void dispatchLayout():0 -> p
    38:38:void android.support.v7.widget.ViewInfoStore.clear():0:0 -> p
    38:38:void dispatchLayoutStep3():0 -> p
    38:38:void dispatchLayout():0 -> p
    39:39:void dispatchLayoutStep3():0:0 -> p
    39:39:void dispatchLayout():0 -> p
    40:40:boolean didChildRangeChange(int,int):0:0 -> p
    40:40:void dispatchLayoutStep3():0 -> p
    40:40:void dispatchLayout():0 -> p
    41:41:void dispatchLayoutStep3():0:0 -> p
    41:41:void dispatchLayout():0 -> p
    42:42:void recoverFocusFromState():0:0 -> p
    42:42:void dispatchLayoutStep3():0 -> p
    42:42:void dispatchLayout():0 -> p
    43:43:android.view.View findNextViewToFocus():0:0 -> p
    43:43:void recoverFocusFromState():0 -> p
    43:43:void dispatchLayoutStep3():0 -> p
    43:43:void dispatchLayout():0 -> p
    44:44:void recoverFocusFromState():0:0 -> p
    44:44:void dispatchLayoutStep3():0 -> p
    44:44:void dispatchLayout():0 -> p
    45:45:void resetFocusInfo():0:0 -> p
    45:45:void dispatchLayoutStep3():0 -> p
    45:45:void dispatchLayout():0 -> p
    1:1:void android.support.v7.widget.ViewInfoStore.clear():0:0 -> q
    1:1:void dispatchLayoutStep1():0 -> q
    2:2:void dispatchLayoutStep1():0:0 -> q
    3:3:void saveFocusInfo():0:0 -> q
    3:3:void dispatchLayoutStep1():0 -> q
    4:4:android.support.v7.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View):0:0 -> q
    4:4:void saveFocusInfo():0 -> q
    4:4:void dispatchLayoutStep1():0 -> q
    5:5:void resetFocusInfo():0:0 -> q
    5:5:void saveFocusInfo():0 -> q
    5:5:void dispatchLayoutStep1():0 -> q
    6:6:void saveFocusInfo():0:0 -> q
    6:6:void dispatchLayoutStep1():0 -> q
    7:7:int android.support.v7.widget.RecyclerView$ViewHolder.getAdapterPosition():0:0 -> q
    7:7:void saveFocusInfo():0 -> q
    7:7:void dispatchLayoutStep1():0 -> q
    8:8:void saveFocusInfo():0:0 -> q
    8:8:void dispatchLayoutStep1():0 -> q
    9:9:int getDeepestFocusedViewWithId(android.view.View):0:0 -> q
    9:9:void saveFocusInfo():0 -> q
    9:9:void dispatchLayoutStep1():0 -> q
    10:10:void saveFocusInfo():0:0 -> q
    10:10:void dispatchLayoutStep1():0 -> q
    11:11:void dispatchLayoutStep1():0:0 -> q
    12:12:long getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> q
    12:12:void dispatchLayoutStep1():0 -> q
    13:13:void dispatchLayoutStep1():0:0 -> q
    14:14:void android.support.v7.widget.ViewInfoStore.addToOldChangeHolders(long,android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> q
    14:14:void dispatchLayoutStep1():0 -> q
    15:15:void dispatchLayoutStep1():0:0 -> q
    16:16:void saveOldPositions():0:0 -> q
    16:16:void dispatchLayoutStep1():0 -> q
    17:17:void android.support.v7.widget.RecyclerView$ViewHolder.saveOldPosition():0:0 -> q
    17:17:void saveOldPositions():0 -> q
    17:17:void dispatchLayoutStep1():0 -> q
    18:18:void dispatchLayoutStep1():0:0 -> q
    19:19:boolean android.support.v7.widget.ViewInfoStore.isInPreLayout(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> q
    19:19:void dispatchLayoutStep1():0 -> q
    20:20:void dispatchLayoutStep1():0:0 -> q
    21:21:void android.support.v7.widget.ViewInfoStore.addToAppearedInPreLayoutHolders(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> q
    21:21:void dispatchLayoutStep1():0 -> q
    22:22:void dispatchLayoutStep1():0:0 -> q
    23:23:void onExitLayoutOrScroll():0:0 -> q
    23:23:void dispatchLayoutStep1():0 -> q
    24:24:void dispatchLayoutStep1():0:0 -> q
    1:1:void onExitLayoutOrScroll():0:0 -> r
    1:1:void dispatchLayoutStep2():0 -> r
    2:2:void dispatchLayoutStep2():0:0 -> r
    1:1:void android.support.v7.widget.RecyclerView$ViewHolder.clearTmpDetachFlag():0:0 -> removeDetachedView
    1:1:void removeDetachedView(android.view.View,boolean):0 -> removeDetachedView
    2:2:void removeDetachedView(android.view.View,boolean):0:0 -> removeDetachedView
    1:1:boolean android.support.v7.widget.RecyclerView$LayoutManager.onRequestChildFocus(android.support.v7.widget.RecyclerView,android.view.View,android.view.View):0:0 -> requestChildFocus
    1:1:boolean android.support.v7.widget.RecyclerView$LayoutManager.onRequestChildFocus(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,android.view.View,android.view.View):0 -> requestChildFocus
    1:1:void requestChildFocus(android.view.View,android.view.View):0 -> requestChildFocus
    2:2:void requestChildFocus(android.view.View,android.view.View):0:0 -> requestChildFocus
    1:1:boolean android.support.v7.widget.RecyclerView$LayoutManager.requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean):0:0 -> requestChildRectangleOnScreen
    1:1:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean):0 -> requestChildRectangleOnScreen
    boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> s
    1:1:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0:0 -> sendAccessibilityEventUnchecked
    1:1:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent):0 -> sendAccessibilityEventUnchecked
    2:2:int android.support.v4.view.accessibility.AccessibilityEventCompat.getContentChangeTypes(android.view.accessibility.AccessibilityEvent):0:0 -> sendAccessibilityEventUnchecked
    2:2:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0 -> sendAccessibilityEventUnchecked
    2:2:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent):0 -> sendAccessibilityEventUnchecked
    3:3:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0:0 -> sendAccessibilityEventUnchecked
    3:3:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent):0 -> sendAccessibilityEventUnchecked
    4:4:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent):0:0 -> sendAccessibilityEventUnchecked
    1:1:android.view.View$AccessibilityDelegate android.support.v4.view.AccessibilityDelegateCompat.getBridge():0:0 -> setAccessibilityDelegateCompat
    1:1:void android.support.v4.view.ViewCompat.setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat):0 -> setAccessibilityDelegateCompat
    1:1:void setAccessibilityDelegateCompat(android.support.v7.widget.RecyclerViewAccessibilityDelegate):0 -> setAccessibilityDelegateCompat
    2:2:void android.support.v4.view.ViewCompat.setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat):0:0 -> setAccessibilityDelegateCompat
    2:2:void setAccessibilityDelegateCompat(android.support.v7.widget.RecyclerViewAccessibilityDelegate):0 -> setAccessibilityDelegateCompat
    1:1:void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean):0:0 -> setAdapter
    1:1:void setAdapter(android.support.v7.widget.RecyclerView$Adapter):0 -> setAdapter
    2:2:void android.support.v7.widget.RecyclerView$Adapter.unregisterAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver):0:0 -> setAdapter
    2:2:void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    2:2:void setAdapter(android.support.v7.widget.RecyclerView$Adapter):0 -> setAdapter
    3:3:void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean):0:0 -> setAdapter
    3:3:void setAdapter(android.support.v7.widget.RecyclerView$Adapter):0 -> setAdapter
    4:4:void android.support.v7.widget.AdapterHelper.reset():0:0 -> setAdapter
    4:4:void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    4:4:void setAdapter(android.support.v7.widget.RecyclerView$Adapter):0 -> setAdapter
    5:5:void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean):0:0 -> setAdapter
    5:5:void setAdapter(android.support.v7.widget.RecyclerView$Adapter):0 -> setAdapter
    6:6:void android.support.v7.widget.RecyclerView$Adapter.registerAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver):0:0 -> setAdapter
    6:6:void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    6:6:void setAdapter(android.support.v7.widget.RecyclerView$Adapter):0 -> setAdapter
    7:7:void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean):0:0 -> setAdapter
    7:7:void setAdapter(android.support.v7.widget.RecyclerView$Adapter):0 -> setAdapter
    8:8:void android.support.v7.widget.RecyclerView$Recycler.onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean):0:0 -> setAdapter
    8:8:void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    8:8:void setAdapter(android.support.v7.widget.RecyclerView$Adapter):0 -> setAdapter
    9:9:void android.support.v7.widget.RecyclerView$RecycledViewPool.detach():0:0 -> setAdapter
    9:9:void android.support.v7.widget.RecyclerView$RecycledViewPool.onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    9:9:void android.support.v7.widget.RecyclerView$Recycler.onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    9:9:void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    9:9:void setAdapter(android.support.v7.widget.RecyclerView$Adapter):0 -> setAdapter
    10:10:void android.support.v7.widget.RecyclerView$RecycledViewPool.onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean):0:0 -> setAdapter
    10:10:void android.support.v7.widget.RecyclerView$Recycler.onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    10:10:void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    10:10:void setAdapter(android.support.v7.widget.RecyclerView$Adapter):0 -> setAdapter
    11:11:void android.support.v7.widget.RecyclerView$RecycledViewPool.clear():0:0 -> setAdapter
    11:11:void android.support.v7.widget.RecyclerView$RecycledViewPool.onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    11:11:void android.support.v7.widget.RecyclerView$Recycler.onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    11:11:void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    11:11:void setAdapter(android.support.v7.widget.RecyclerView$Adapter):0 -> setAdapter
    12:12:void android.support.v7.widget.RecyclerView$RecycledViewPool.attach():0:0 -> setAdapter
    12:12:void android.support.v7.widget.RecyclerView$RecycledViewPool.onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    12:12:void android.support.v7.widget.RecyclerView$Recycler.onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    12:12:void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    12:12:void setAdapter(android.support.v7.widget.RecyclerView$Adapter):0 -> setAdapter
    13:13:void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean):0:0 -> setAdapter
    13:13:void setAdapter(android.support.v7.widget.RecyclerView$Adapter):0 -> setAdapter
    14:14:void setAdapter(android.support.v7.widget.RecyclerView$Adapter):0:0 -> setAdapter
    1:1:java.lang.Object android.support.v4.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> setEdgeEffectFactory
    1:1:void setEdgeEffectFactory(android.support.v7.widget.RecyclerView$EdgeEffectFactory):0 -> setEdgeEffectFactory
    2:2:void setEdgeEffectFactory(android.support.v7.widget.RecyclerView$EdgeEffectFactory):0:0 -> setEdgeEffectFactory
    1:1:void android.support.v7.widget.RecyclerView$ItemAnimator.setListener(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener):0:0 -> setItemAnimator
    1:1:void setItemAnimator(android.support.v7.widget.RecyclerView$ItemAnimator):0 -> setItemAnimator
    2:2:void setItemAnimator(android.support.v7.widget.RecyclerView$ItemAnimator):0:0 -> setItemAnimator
    3:3:void android.support.v7.widget.RecyclerView$ItemAnimator.setListener(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener):0:0 -> setItemAnimator
    3:3:void setItemAnimator(android.support.v7.widget.RecyclerView$ItemAnimator):0 -> setItemAnimator
    1:1:void android.support.v7.widget.RecyclerView$Recycler.setViewCacheSize(int):0:0 -> setItemViewCacheSize
    1:1:void setItemViewCacheSize(int):0 -> setItemViewCacheSize
    1:1:void android.support.v7.widget.RecyclerView$LayoutManager.dispatchDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler):0:0 -> setLayoutManager
    1:1:void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    2:2:void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager):0:0 -> setLayoutManager
    3:3:void android.support.v7.widget.ChildHelper.removeAllViewsUnfiltered():0:0 -> setLayoutManager
    3:3:void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    4:4:void android.support.v7.widget.ChildHelper$Bucket.reset():0:0 -> setLayoutManager
    4:4:void android.support.v7.widget.ChildHelper.removeAllViewsUnfiltered():0 -> setLayoutManager
    4:4:void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    5:5:void android.support.v7.widget.ChildHelper.removeAllViewsUnfiltered():0:0 -> setLayoutManager
    5:5:void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    6:6:void android.support.v7.widget.RecyclerView$5.onLeftHiddenState(android.view.View):0:0 -> setLayoutManager
    6:6:void android.support.v7.widget.ChildHelper.removeAllViewsUnfiltered():0 -> setLayoutManager
    6:6:void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    7:7:void android.support.v7.widget.RecyclerView$ViewHolder.onLeftHiddenState(android.support.v7.widget.RecyclerView):0:0 -> setLayoutManager
    7:7:void android.support.v7.widget.RecyclerView$5.onLeftHiddenState(android.view.View):0 -> setLayoutManager
    7:7:void android.support.v7.widget.ChildHelper.removeAllViewsUnfiltered():0 -> setLayoutManager
    7:7:void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    8:8:void android.support.v7.widget.ChildHelper.removeAllViewsUnfiltered():0:0 -> setLayoutManager
    8:8:void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    9:9:void android.support.v7.widget.RecyclerView$5.removeAllViews():0:0 -> setLayoutManager
    9:9:void android.support.v7.widget.ChildHelper.removeAllViewsUnfiltered():0 -> setLayoutManager
    9:9:void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    10:10:void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager):0:0 -> setLayoutManager
    11:11:void android.support.v7.widget.RecyclerView$LayoutManager.dispatchAttachedToWindow(android.support.v7.widget.RecyclerView):0:0 -> setLayoutManager
    11:11:void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    12:12:void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager):0:0 -> setLayoutManager
    1:1:void android.support.v4.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0:0 -> setNestedScrollingEnabled
    1:1:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    2:2:void android.support.v4.view.ViewCompat.stopNestedScroll(android.view.View):0:0 -> setNestedScrollingEnabled
    2:2:void android.support.v4.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    2:2:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    3:3:void android.support.v4.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0:0 -> setNestedScrollingEnabled
    3:3:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    1:1:void android.support.v7.widget.RecyclerView$Recycler.setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool):0:0 -> setRecycledViewPool
    1:1:void setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool):0 -> setRecycledViewPool
    2:2:void android.support.v7.widget.RecyclerView$RecycledViewPool.detach():0:0 -> setRecycledViewPool
    2:2:void android.support.v7.widget.RecyclerView$Recycler.setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool):0 -> setRecycledViewPool
    2:2:void setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool):0 -> setRecycledViewPool
    3:3:void android.support.v7.widget.RecyclerView$Recycler.setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool):0:0 -> setRecycledViewPool
    3:3:void setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool):0 -> setRecycledViewPool
    4:4:void android.support.v7.widget.RecyclerView$RecycledViewPool.attach():0:0 -> setRecycledViewPool
    4:4:void android.support.v7.widget.RecyclerView$Recycler.setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool):0 -> setRecycledViewPool
    4:4:void setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool):0 -> setRecycledViewPool
    1:1:void stopScrollersInternal():0:0 -> setScrollState
    1:1:void setScrollState(int):0 -> setScrollState
    2:2:void android.support.v7.widget.RecyclerView$ViewFlinger.stop():0:0 -> setScrollState
    2:2:void stopScrollersInternal():0 -> setScrollState
    2:2:void setScrollState(int):0 -> setScrollState
    3:3:void dispatchOnScrollStateChanged(int):0:0 -> setScrollState
    3:3:void setScrollState(int):0 -> setScrollState
    1:1:boolean android.support.v4.view.NestedScrollingChildHelper.startNestedScroll(int):0:0 -> startNestedScroll
    1:1:boolean startNestedScroll(int):0 -> startNestedScroll
    1:1:void android.support.v4.view.NestedScrollingChildHelper.stopNestedScroll():0:0 -> stopNestedScroll
    1:1:void stopNestedScroll():0 -> stopNestedScroll
    boolean dispatchNestedScroll(int,int,int,int,int[],int) -> t
    void dispatchOnScrolled(int,int) -> u
    void ensureBottomGlow() -> v
    void ensureLeftGlow() -> w
    void ensureRightGlow() -> x
    void ensureTopGlow() -> y
    java.lang.String exceptionLabel() -> z
android.support.v7.widget.RecyclerView$2 -> android.support.v7.widget.RecyclerView$a:
    android.support.v7.widget.RecyclerView this$0 -> b
    1:1:void android.support.v7.widget.DefaultItemAnimator.runPendingAnimations():0:0 -> run
    1:1:void run():0 -> run
    2:2:void android.support.v7.widget.DefaultItemAnimator.animateRemoveImpl(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> run
    2:2:void android.support.v7.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    2:2:void run():0 -> run
    3:3:long android.support.v7.widget.RecyclerView$ItemAnimator.getRemoveDuration():0:0 -> run
    3:3:void android.support.v7.widget.DefaultItemAnimator.animateRemoveImpl(android.support.v7.widget.RecyclerView$ViewHolder):0 -> run
    3:3:void android.support.v7.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    3:3:void run():0 -> run
    4:4:void android.support.v7.widget.DefaultItemAnimator.animateRemoveImpl(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> run
    4:4:void android.support.v7.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    4:4:void run():0 -> run
    5:5:void android.support.v7.widget.DefaultItemAnimator.runPendingAnimations():0:0 -> run
    5:5:void run():0 -> run
    6:6:long android.support.v7.widget.RecyclerView$ItemAnimator.getRemoveDuration():0:0 -> run
    6:6:void android.support.v7.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    6:6:void run():0 -> run
    7:7:void android.support.v7.widget.DefaultItemAnimator.runPendingAnimations():0:0 -> run
    7:7:void run():0 -> run
    8:8:void android.support.v4.view.ViewCompat.postOnAnimationDelayed(android.view.View,java.lang.Runnable,long):0:0 -> run
    8:8:void android.support.v7.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    8:8:void run():0 -> run
    9:9:void android.support.v7.widget.DefaultItemAnimator.runPendingAnimations():0:0 -> run
    9:9:void run():0 -> run
    10:10:long android.support.v7.widget.RecyclerView$ItemAnimator.getRemoveDuration():0:0 -> run
    10:10:void android.support.v7.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    10:10:void run():0 -> run
    11:11:void android.support.v7.widget.DefaultItemAnimator.runPendingAnimations():0:0 -> run
    11:11:void run():0 -> run
    12:12:void android.support.v4.view.ViewCompat.postOnAnimationDelayed(android.view.View,java.lang.Runnable,long):0:0 -> run
    12:12:void android.support.v7.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    12:12:void run():0 -> run
    13:13:void android.support.v7.widget.DefaultItemAnimator.runPendingAnimations():0:0 -> run
    13:13:void run():0 -> run
    14:14:long android.support.v7.widget.RecyclerView$ItemAnimator.getRemoveDuration():0:0 -> run
    14:14:void android.support.v7.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    14:14:void run():0 -> run
    15:15:long android.support.v7.widget.RecyclerView$ItemAnimator.getMoveDuration():0:0 -> run
    15:15:void android.support.v7.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    15:15:void run():0 -> run
    16:16:long android.support.v7.widget.RecyclerView$ItemAnimator.getChangeDuration():0:0 -> run
    16:16:void android.support.v7.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    16:16:void run():0 -> run
    17:17:void android.support.v7.widget.DefaultItemAnimator.runPendingAnimations():0:0 -> run
    17:17:void run():0 -> run
    18:18:void android.support.v4.view.ViewCompat.postOnAnimationDelayed(android.view.View,java.lang.Runnable,long):0:0 -> run
    18:18:void android.support.v7.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    18:18:void run():0 -> run
    19:19:void run():0:0 -> run
android.support.v7.widget.RecyclerView$3 -> android.support.v7.widget.RecyclerView$b:
android.support.v7.widget.RecyclerView$4 -> android.support.v7.widget.RecyclerView$c:
    android.support.v7.widget.RecyclerView this$0 -> a
    1:1:void android.support.v7.widget.RecyclerView.animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> a
    1:1:void processAppeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> a
    2:2:boolean android.support.v7.widget.SimpleItemAnimator.animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> a
    2:2:void android.support.v7.widget.RecyclerView.animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> a
    2:2:void processAppeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> a
    3:3:boolean android.support.v7.widget.DefaultItemAnimator.animateAdd(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> a
    3:3:boolean android.support.v7.widget.SimpleItemAnimator.animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> a
    3:3:void android.support.v7.widget.RecyclerView.animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> a
    3:3:void processAppeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> a
    4:4:void android.support.v7.widget.RecyclerView.animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> a
    4:4:void processAppeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> a
    1:1:void android.support.v7.widget.RecyclerView.animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> b
    1:1:void processDisappeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> b
    2:2:boolean android.support.v7.widget.SimpleItemAnimator.animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> b
    2:2:void android.support.v7.widget.RecyclerView.animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> b
    2:2:void processDisappeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> b
    3:3:boolean android.support.v7.widget.DefaultItemAnimator.animateRemove(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> b
    3:3:boolean android.support.v7.widget.SimpleItemAnimator.animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> b
    3:3:void android.support.v7.widget.RecyclerView.animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> b
    3:3:void processDisappeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> b
    4:4:void android.support.v7.widget.RecyclerView.animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> b
    4:4:void processDisappeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> b
android.support.v7.widget.RecyclerView$5 -> android.support.v7.widget.u:
    android.support.v7.widget.RecyclerView this$0 -> a
    android.view.View getChildAt(int) -> a
    int getChildCount() -> b
    void removeViewAt(int) -> c
android.support.v7.widget.RecyclerView$6 -> android.support.v7.widget.v:
    android.support.v7.widget.RecyclerView this$0 -> a
    void dispatchUpdate(android.support.v7.widget.AdapterHelper$UpdateOp) -> a
    1:1:android.support.v7.widget.RecyclerView$ViewHolder android.support.v7.widget.RecyclerView.findViewHolderForPosition(int,boolean):0:0 -> b
    1:1:android.support.v7.widget.RecyclerView$ViewHolder findViewHolder(int):0 -> b
    2:2:android.support.v7.widget.RecyclerView$ViewHolder findViewHolder(int):0:0 -> b
    1:1:void android.support.v7.widget.RecyclerView.viewRangeUpdate(int,int,java.lang.Object):0:0 -> c
    1:1:void markViewHoldersUpdated(int,int,java.lang.Object):0 -> c
    2:2:void android.support.v7.widget.RecyclerView$Recycler.viewRangeUpdate(int,int):0:0 -> c
    2:2:void android.support.v7.widget.RecyclerView.viewRangeUpdate(int,int,java.lang.Object):0 -> c
    2:2:void markViewHoldersUpdated(int,int,java.lang.Object):0 -> c
    3:3:void markViewHoldersUpdated(int,int,java.lang.Object):0:0 -> c
    1:1:void android.support.v7.widget.RecyclerView.offsetPositionRecordsForInsert(int,int):0:0 -> d
    1:1:void offsetPositionsForAdd(int,int):0 -> d
    2:2:void android.support.v7.widget.RecyclerView$Recycler.offsetPositionRecordsForInsert(int,int):0:0 -> d
    2:2:void android.support.v7.widget.RecyclerView.offsetPositionRecordsForInsert(int,int):0 -> d
    2:2:void offsetPositionsForAdd(int,int):0 -> d
    3:3:void android.support.v7.widget.RecyclerView.offsetPositionRecordsForInsert(int,int):0:0 -> d
    3:3:void offsetPositionsForAdd(int,int):0 -> d
    4:4:void offsetPositionsForAdd(int,int):0:0 -> d
    1:1:void android.support.v7.widget.RecyclerView.offsetPositionRecordsForMove(int,int):0:0 -> e
    1:1:void offsetPositionsForMove(int,int):0 -> e
    2:2:void android.support.v7.widget.RecyclerView$Recycler.offsetPositionRecordsForMove(int,int):0:0 -> e
    2:2:void android.support.v7.widget.RecyclerView.offsetPositionRecordsForMove(int,int):0 -> e
    2:2:void offsetPositionsForMove(int,int):0 -> e
    3:3:void android.support.v7.widget.RecyclerView.offsetPositionRecordsForMove(int,int):0:0 -> e
    3:3:void offsetPositionsForMove(int,int):0 -> e
    4:4:void offsetPositionsForMove(int,int):0:0 -> e
android.support.v7.widget.RecyclerView$Adapter -> android.support.v7.widget.RecyclerView$d:
    android.support.v7.widget.RecyclerView$AdapterDataObservable mObservable -> a
    int getItemCount() -> a
android.support.v7.widget.RecyclerView$AdapterDataObservable -> android.support.v7.widget.RecyclerView$e:
    void notifyChanged() -> a
android.support.v7.widget.RecyclerView$AdapterDataObserver -> android.support.v7.widget.RecyclerView$f:
    void onChanged() -> a
android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback -> android.support.v7.widget.RecyclerView$g:
    int onGetChildDrawingOrder(int,int) -> a
android.support.v7.widget.RecyclerView$EdgeEffectFactory -> android.support.v7.widget.RecyclerView$h:
    android.widget.EdgeEffect createEdgeEffect(android.support.v7.widget.RecyclerView,int) -> a
android.support.v7.widget.RecyclerView$ItemAnimator -> android.support.v7.widget.RecyclerView$i:
    long mChangeDuration -> f
    long mMoveDuration -> e
    long mRemoveDuration -> d
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener -> a
    long mAddDuration -> c
    java.util.ArrayList mFinishedListeners -> b
    boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    1:1:int android.support.v7.widget.RecyclerView$ViewHolder.getOldPosition():0:0 -> b
    1:1:int buildAdapterChangeFlagsForAnimations(android.support.v7.widget.RecyclerView$ViewHolder):0 -> b
    2:2:int android.support.v7.widget.RecyclerView$ViewHolder.getAdapterPosition():0:0 -> b
    2:2:int buildAdapterChangeFlagsForAnimations(android.support.v7.widget.RecyclerView$ViewHolder):0 -> b
    1:1:void android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener.onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> c
    1:1:void dispatchAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder):0 -> c
    2:2:boolean android.support.v7.widget.RecyclerView$ViewHolder.shouldBeKeptAsChild():0:0 -> c
    2:2:void android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener.onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder):0 -> c
    2:2:void dispatchAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder):0 -> c
    3:3:void android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener.onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> c
    3:3:void dispatchAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder):0 -> c
    4:4:boolean android.support.v7.widget.RecyclerView.removeAnimatingView(android.view.View):0:0 -> c
    4:4:void android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener.onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder):0 -> c
    4:4:void dispatchAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder):0 -> c
    5:5:boolean android.support.v7.widget.ChildHelper.removeViewIfHidden(android.view.View):0:0 -> c
    5:5:boolean android.support.v7.widget.RecyclerView.removeAnimatingView(android.view.View):0 -> c
    5:5:void android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener.onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder):0 -> c
    5:5:void dispatchAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder):0 -> c
    6:6:int android.support.v7.widget.RecyclerView$5.indexOfChild(android.view.View):0:0 -> c
    6:6:boolean android.support.v7.widget.ChildHelper.removeViewIfHidden(android.view.View):0 -> c
    6:6:boolean android.support.v7.widget.RecyclerView.removeAnimatingView(android.view.View):0 -> c
    6:6:void android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener.onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder):0 -> c
    6:6:void dispatchAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder):0 -> c
    7:7:boolean android.support.v7.widget.ChildHelper.removeViewIfHidden(android.view.View):0:0 -> c
    7:7:boolean android.support.v7.widget.RecyclerView.removeAnimatingView(android.view.View):0 -> c
    7:7:void android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener.onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder):0 -> c
    7:7:void dispatchAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder):0 -> c
    8:8:boolean android.support.v7.widget.RecyclerView.removeAnimatingView(android.view.View):0:0 -> c
    8:8:void android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener.onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder):0 -> c
    8:8:void dispatchAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder):0 -> c
    9:9:void android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener.onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> c
    9:9:void dispatchAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder):0 -> c
    void dispatchAnimationsFinished() -> d
    void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder) -> e
    void endAnimations() -> f
    boolean isRunning() -> g
    1:1:android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo():0:0 -> h
    1:1:android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List):0 -> h
    2:2:android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo.setFrom(android.support.v7.widget.RecyclerView$ViewHolder,int):0:0 -> h
    2:2:android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo.setFrom(android.support.v7.widget.RecyclerView$ViewHolder):0 -> h
    2:2:android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List):0 -> h
android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener -> android.support.v7.widget.RecyclerView$i$a:
    void onAnimationsFinished() -> a
android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener -> android.support.v7.widget.RecyclerView$i$b:
android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> android.support.v7.widget.RecyclerView$i$c:
    int top -> b
    int left -> a
android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener -> android.support.v7.widget.RecyclerView$j:
    android.support.v7.widget.RecyclerView this$0 -> a
android.support.v7.widget.RecyclerView$ItemDecoration -> android.support.v7.widget.RecyclerView$k:
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> d
android.support.v7.widget.RecyclerView$LayoutManager -> android.support.v7.widget.RecyclerView$l:
    int mHeight -> n
    int mHeightMode -> l
    int mWidth -> m
    boolean mPrefetchMaxObservedInInitialPrefetch -> j
    int mWidthMode -> k
    int mPrefetchMaxCountObserved -> i
    android.support.v7.widget.ViewBoundsCheck mVerticalBoundCheck -> d
    android.support.v7.widget.RecyclerView mRecyclerView -> b
    android.support.v7.widget.ViewBoundsCheck mHorizontalBoundCheck -> c
    boolean mRequestedSimpleAnimations -> e
    boolean mIsAttachedToWindow -> f
    android.support.v7.widget.ChildHelper mChildHelper -> a
    boolean mMeasurementCacheEnabled -> g
    boolean mItemPrefetchEnabled -> h
    int getDecoratedMeasuredHeight(android.view.View) -> A
    int getDecoratedMeasuredWidth(android.view.View) -> B
    1:1:boolean android.support.v7.widget.ChildHelper.isHidden(android.view.View):0:0 -> C
    1:1:android.view.View getFocusedChild():0 -> C
    1:1:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> D
    1:1:int getLayoutDirection():0 -> D
    1:1:int android.support.v4.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> E
    1:1:int getMinimumHeight():0 -> E
    1:1:int android.support.v4.view.ViewCompat.getMinimumWidth(android.view.View):0:0 -> F
    1:1:int getMinimumWidth():0 -> F
    int getPaddingBottom() -> G
    int getPaddingLeft() -> H
    int getPaddingRight() -> I
    int getPaddingTop() -> J
    int getPosition(android.view.View) -> K
    android.support.v7.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> L
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> M
    void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> N
    boolean isAutoMeasureEnabled() -> O
    boolean isMeasurementUpToDate(int,int,int) -> P
    void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> Q
    1:1:void android.support.v7.widget.RecyclerView.offsetChildrenHorizontal(int):0:0 -> R
    1:1:void offsetChildrenHorizontal(int):0 -> R
    1:1:void android.support.v7.widget.RecyclerView.offsetChildrenVertical(int):0:0 -> S
    1:1:void offsetChildrenVertical(int):0 -> S
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> T
    android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> U
    1:1:void onInitializeAccessibilityEvent(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent):0:0 -> V
    1:1:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0 -> V
    void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> W
    void onInitializeAccessibilityNodeInfoForItem(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> X
    void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> Y
    void onItemsChanged(android.support.v7.widget.RecyclerView) -> Z
    1:1:void addView(android.view.View,int):0:0 -> a
    1:1:void addView(android.view.View):0 -> a
    void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> a0
    1:1:void moveView(int,int):0:0 -> b
    1:1:void addViewInt(android.view.View,int,boolean):0 -> b
    2:2:void detachViewAt(int):0:0 -> b
    2:2:void moveView(int,int):0 -> b
    2:2:void addViewInt(android.view.View,int,boolean):0 -> b
    3:3:void detachViewInternal(int,android.view.View):0:0 -> b
    3:3:void detachViewAt(int):0 -> b
    3:3:void moveView(int,int):0 -> b
    3:3:void addViewInt(android.view.View,int,boolean):0 -> b
    4:4:void attachView(android.view.View,int):0:0 -> b
    4:4:void moveView(int,int):0 -> b
    4:4:void addViewInt(android.view.View,int,boolean):0 -> b
    5:5:void attachView(android.view.View,int,android.support.v7.widget.RecyclerView$LayoutParams):0:0 -> b
    5:5:void attachView(android.view.View,int):0 -> b
    5:5:void moveView(int,int):0 -> b
    5:5:void addViewInt(android.view.View,int,boolean):0 -> b
    6:6:void moveView(int,int):0:0 -> b
    6:6:void addViewInt(android.view.View,int,boolean):0 -> b
    7:7:void addViewInt(android.view.View,int,boolean):0:0 -> b
    8:8:void android.support.v7.widget.RecyclerView$ViewHolder.unScrap():0:0 -> b
    8:8:void addViewInt(android.view.View,int,boolean):0 -> b
    9:9:void addViewInt(android.view.View,int,boolean):0:0 -> b
    void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> b0
    void assertNotInLayoutOrScroll(java.lang.String) -> c
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int,java.lang.Object) -> c0
    boolean canScrollHorizontally() -> d
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> d0
    boolean canScrollVertically() -> e
    void onLayoutCompleted(android.support.v7.widget.RecyclerView$State) -> e0
    boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> f
    void onRestoreInstanceState(android.os.Parcelable) -> f0
    int chooseSize(int,int,int) -> g
    android.os.Parcelable onSaveInstanceState() -> g0
    void collectAdjacentPrefetchPositions(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> h
    void onScrollStateChanged(int) -> h0
    void collectInitialPrefetchPositions(int,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> i
    void removeAndRecycleAllViews(android.support.v7.widget.RecyclerView$Recycler) -> i0
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> j
    1:1:int android.support.v7.widget.RecyclerView$Recycler.getScrapCount():0:0 -> j0
    1:1:void removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler):0 -> j0
    2:2:android.view.View android.support.v7.widget.RecyclerView$Recycler.getScrapViewAt(int):0:0 -> j0
    2:2:void removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler):0 -> j0
    3:3:void removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler):0:0 -> j0
    4:4:void android.support.v7.widget.RecyclerView$Recycler.quickRecycleScrapView(android.view.View):0:0 -> j0
    4:4:void removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler):0 -> j0
    5:5:void android.support.v7.widget.RecyclerView$Recycler.clearScrap():0:0 -> j0
    5:5:void removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler):0 -> j0
    6:6:void removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler):0:0 -> j0
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> k
    1:1:void removeView(android.view.View):0:0 -> k0
    1:1:void removeAndRecycleView(android.view.View,android.support.v7.widget.RecyclerView$Recycler):0 -> k0
    2:2:void android.support.v7.widget.ChildHelper.removeView(android.view.View):0:0 -> k0
    2:2:void removeView(android.view.View):0 -> k0
    2:2:void removeAndRecycleView(android.view.View,android.support.v7.widget.RecyclerView$Recycler):0 -> k0
    3:3:int android.support.v7.widget.RecyclerView$5.indexOfChild(android.view.View):0:0 -> k0
    3:3:void android.support.v7.widget.ChildHelper.removeView(android.view.View):0 -> k0
    3:3:void removeView(android.view.View):0 -> k0
    3:3:void removeAndRecycleView(android.view.View,android.support.v7.widget.RecyclerView$Recycler):0 -> k0
    4:4:void android.support.v7.widget.ChildHelper.removeView(android.view.View):0:0 -> k0
    4:4:void removeView(android.view.View):0 -> k0
    4:4:void removeAndRecycleView(android.view.View,android.support.v7.widget.RecyclerView$Recycler):0 -> k0
    5:5:void removeAndRecycleView(android.view.View,android.support.v7.widget.RecyclerView$Recycler):0:0 -> k0
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> l
    void removeAndRecycleViewAt(int,android.support.v7.widget.RecyclerView$Recycler) -> l0
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> m
    1:1:void android.support.v7.widget.ChildHelper.removeViewAt(int):0:0 -> m0
    1:1:void removeViewAt(int):0 -> m0
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> n
    1:1:int[] getChildRectangleOnScreenScrollAmount(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean):0:0 -> n0
    1:1:boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean):0 -> n0
    2:2:int getWidth():0:0 -> n0
    2:2:int[] getChildRectangleOnScreenScrollAmount(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean):0 -> n0
    2:2:boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean):0 -> n0
    3:3:int[] getChildRectangleOnScreenScrollAmount(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean):0:0 -> n0
    3:3:boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean):0 -> n0
    4:4:int getHeight():0:0 -> n0
    4:4:int[] getChildRectangleOnScreenScrollAmount(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean):0 -> n0
    4:4:boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean):0 -> n0
    5:5:int[] getChildRectangleOnScreenScrollAmount(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean):0:0 -> n0
    5:5:boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean):0 -> n0
    6:6:boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean):0:0 -> n0
    7:7:boolean isFocusedChildVisibleAfterScrolling(android.support.v7.widget.RecyclerView,int,int):0:0 -> n0
    7:7:boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean):0 -> n0
    8:8:int getWidth():0:0 -> n0
    8:8:boolean isFocusedChildVisibleAfterScrolling(android.support.v7.widget.RecyclerView,int,int):0 -> n0
    8:8:boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean):0 -> n0
    9:9:boolean isFocusedChildVisibleAfterScrolling(android.support.v7.widget.RecyclerView,int,int):0:0 -> n0
    9:9:boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean):0 -> n0
    10:10:int getHeight():0:0 -> n0
    10:10:boolean isFocusedChildVisibleAfterScrolling(android.support.v7.widget.RecyclerView,int,int):0 -> n0
    10:10:boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean):0 -> n0
    11:11:boolean isFocusedChildVisibleAfterScrolling(android.support.v7.widget.RecyclerView,int,int):0:0 -> n0
    11:11:boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean):0 -> n0
    12:12:boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean):0:0 -> n0
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> o
    void requestLayout() -> o0
    1:1:void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View):0:0 -> p
    1:1:void detachAndScrapAttachedViews(android.support.v7.widget.RecyclerView$Recycler):0 -> p
    2:2:void detachViewAt(int):0:0 -> p
    2:2:void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View):0 -> p
    2:2:void detachAndScrapAttachedViews(android.support.v7.widget.RecyclerView$Recycler):0 -> p
    3:3:void detachViewInternal(int,android.view.View):0:0 -> p
    3:3:void detachViewAt(int):0 -> p
    3:3:void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View):0 -> p
    3:3:void detachAndScrapAttachedViews(android.support.v7.widget.RecyclerView$Recycler):0 -> p
    4:4:void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View):0:0 -> p
    4:4:void detachAndScrapAttachedViews(android.support.v7.widget.RecyclerView$Recycler):0 -> p
    5:5:void android.support.v7.widget.ViewInfoStore.onViewDetached(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> p
    5:5:void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View):0 -> p
    5:5:void detachAndScrapAttachedViews(android.support.v7.widget.RecyclerView$Recycler):0 -> p
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> p0
    1:1:boolean android.support.v7.widget.ChildHelper.isHidden(android.view.View):0:0 -> q
    1:1:android.view.View findContainingItemView(android.view.View):0 -> q
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> q0
    1:1:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> r
    1:1:android.view.View findViewByPosition(int):0 -> r
    2:2:android.view.View findViewByPosition(int):0:0 -> r
    void setExactMeasureSpecsFrom(android.support.v7.widget.RecyclerView) -> r0
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> s
    void setMeasureSpecs(int,int) -> s0
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> t
    1:1:void setMeasuredDimension(int,int):0:0 -> t0
    1:1:void setMeasuredDimension(android.graphics.Rect,int,int):0 -> t0
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> u
    void setMeasuredDimensionFromChildren(int,int) -> u0
    1:1:android.view.View android.support.v7.widget.ChildHelper.getChildAt(int):0:0 -> v
    1:1:android.view.View getChildAt(int):0 -> v
    void setRecyclerView(android.support.v7.widget.RecyclerView) -> v0
    int getChildCount() -> w
    boolean shouldMeasureChild(android.view.View,int,int,android.support.v7.widget.RecyclerView$LayoutParams) -> w0
    int getChildMeasureSpec(int,int,int,int,boolean) -> x
    boolean shouldMeasureTwice() -> x0
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> y
    boolean shouldReMeasureChild(android.view.View,int,int,android.support.v7.widget.RecyclerView$LayoutParams) -> y0
    1:1:void android.support.v7.widget.RecyclerView.getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect):0:0 -> z
    1:1:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect):0 -> z
    boolean supportsPredictiveItemAnimations() -> z0
android.support.v7.widget.RecyclerView$LayoutManager$1 -> android.support.v7.widget.RecyclerView$l$a:
    android.support.v7.widget.RecyclerView$LayoutManager this$0 -> a
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getWidth():0:0 -> a
    1:1:int getParentEnd():0 -> a
    2:2:int getParentEnd():0:0 -> a
    int getParentStart() -> b
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getDecoratedRight(android.view.View):0:0 -> c
    1:1:int getChildEnd(android.view.View):0 -> c
    2:2:int android.support.v7.widget.RecyclerView$LayoutManager.getRightDecorationWidth(android.view.View):0:0 -> c
    2:2:int android.support.v7.widget.RecyclerView$LayoutManager.getDecoratedRight(android.view.View):0 -> c
    2:2:int getChildEnd(android.view.View):0 -> c
    3:3:int getChildEnd(android.view.View):0:0 -> c
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getDecoratedLeft(android.view.View):0:0 -> d
    1:1:int getChildStart(android.view.View):0 -> d
    2:2:int android.support.v7.widget.RecyclerView$LayoutManager.getLeftDecorationWidth(android.view.View):0:0 -> d
    2:2:int android.support.v7.widget.RecyclerView$LayoutManager.getDecoratedLeft(android.view.View):0 -> d
    2:2:int getChildStart(android.view.View):0 -> d
    3:3:int getChildStart(android.view.View):0:0 -> d
    android.view.View getChildAt(int) -> e
android.support.v7.widget.RecyclerView$LayoutManager$2 -> android.support.v7.widget.RecyclerView$l$b:
    android.support.v7.widget.RecyclerView$LayoutManager this$0 -> a
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getHeight():0:0 -> a
    1:1:int getParentEnd():0 -> a
    2:2:int getParentEnd():0:0 -> a
    int getParentStart() -> b
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getDecoratedBottom(android.view.View):0:0 -> c
    1:1:int getChildEnd(android.view.View):0 -> c
    2:2:int android.support.v7.widget.RecyclerView$LayoutManager.getBottomDecorationHeight(android.view.View):0:0 -> c
    2:2:int android.support.v7.widget.RecyclerView$LayoutManager.getDecoratedBottom(android.view.View):0 -> c
    2:2:int getChildEnd(android.view.View):0 -> c
    3:3:int getChildEnd(android.view.View):0:0 -> c
    1:1:int android.support.v7.widget.RecyclerView$LayoutManager.getDecoratedTop(android.view.View):0:0 -> d
    1:1:int getChildStart(android.view.View):0 -> d
    2:2:int android.support.v7.widget.RecyclerView$LayoutManager.getTopDecorationHeight(android.view.View):0:0 -> d
    2:2:int android.support.v7.widget.RecyclerView$LayoutManager.getDecoratedTop(android.view.View):0 -> d
    2:2:int getChildStart(android.view.View):0 -> d
    3:3:int getChildStart(android.view.View):0:0 -> d
    android.view.View getChildAt(int) -> e
android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry -> android.support.v7.widget.RecyclerView$l$c:
android.support.v7.widget.RecyclerView$LayoutManager$Properties -> android.support.v7.widget.RecyclerView$l$d:
    int spanCount -> b
    boolean reverseLayout -> c
    int orientation -> a
    boolean stackFromEnd -> d
android.support.v7.widget.RecyclerView$LayoutParams -> android.support.v7.widget.RecyclerView$m:
    android.support.v7.widget.RecyclerView$ViewHolder mViewHolder -> a
    boolean mInsetsDirty -> c
    android.graphics.Rect mDecorInsets -> b
    boolean mPendingInvalidate -> d
    int getViewLayoutPosition() -> a
    boolean isItemChanged() -> b
    boolean isItemRemoved() -> c
android.support.v7.widget.RecyclerView$OnFlingListener -> android.support.v7.widget.RecyclerView$n:
android.support.v7.widget.RecyclerView$OnItemTouchListener -> android.support.v7.widget.RecyclerView$o:
    void onRequestDisallowInterceptTouchEvent(boolean) -> a
    boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> b
    void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> c
android.support.v7.widget.RecyclerView$OnScrollListener -> android.support.v7.widget.RecyclerView$p:
    void onScrolled(android.support.v7.widget.RecyclerView,int,int) -> a
android.support.v7.widget.RecyclerView$RecycledViewPool -> android.support.v7.widget.RecyclerView$q:
    android.util.SparseArray mScrap -> a
    int mAttachCount -> b
    android.support.v7.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> a
    long runningAverage(long,long) -> b
android.support.v7.widget.RecyclerView$RecycledViewPool$ScrapData -> android.support.v7.widget.RecyclerView$q$a:
    long mBindRunningAverageNs -> d
    long mCreateRunningAverageNs -> c
    int mMaxScrap -> b
    java.util.ArrayList mScrapHeap -> a
android.support.v7.widget.RecyclerView$Recycler -> android.support.v7.widget.RecyclerView$r:
    java.util.List mUnmodifiableAttachedScrap -> d
    int mViewCacheMax -> f
    android.support.v7.widget.RecyclerView this$0 -> h
    int mRequestedCacheMax -> e
    android.support.v7.widget.RecyclerView$RecycledViewPool mRecyclerPool -> g
    java.util.ArrayList mCachedViews -> c
    java.util.ArrayList mChangedScrap -> b
    java.util.ArrayList mAttachedScrap -> a
    1:1:void dispatchViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> a
    1:1:void addViewHolderToRecycledViewPool(android.support.v7.widget.RecyclerView$ViewHolder,boolean):0 -> a
    2:2:void addViewHolderToRecycledViewPool(android.support.v7.widget.RecyclerView$ViewHolder,boolean):0:0 -> a
    3:3:int android.support.v7.widget.RecyclerView$ViewHolder.getItemViewType():0:0 -> a
    3:3:void android.support.v7.widget.RecyclerView$RecycledViewPool.putRecycledView(android.support.v7.widget.RecyclerView$ViewHolder):0 -> a
    3:3:void addViewHolderToRecycledViewPool(android.support.v7.widget.RecyclerView$ViewHolder,boolean):0 -> a
    4:4:void android.support.v7.widget.RecyclerView$RecycledViewPool.putRecycledView(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> a
    4:4:void addViewHolderToRecycledViewPool(android.support.v7.widget.RecyclerView$ViewHolder,boolean):0 -> a
    void clear() -> b
    1:1:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> c
    1:1:int convertPreLayoutPositionToPostLayout(int):0 -> c
    2:2:int convertPreLayoutPositionToPostLayout(int):0:0 -> c
    3:3:int android.support.v7.widget.AdapterHelper.findPositionOffset(int):0:0 -> c
    3:3:int convertPreLayoutPositionToPostLayout(int):0 -> c
    4:4:int convertPreLayoutPositionToPostLayout(int):0:0 -> c
    android.support.v7.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> d
    1:1:void android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl.clearPrefetchPositions():0:0 -> e
    1:1:void recycleAndClearCachedViews():0 -> e
    void recycleCachedViewAt(int) -> f
    1:1:void android.support.v7.widget.RecyclerView$ViewHolder.unScrap():0:0 -> g
    1:1:void recycleView(android.view.View):0 -> g
    2:2:void recycleView(android.view.View):0:0 -> g
    1:1:boolean android.support.v7.widget.RecyclerView$ViewHolder.doesTransientStatePreventRecycling():0:0 -> h
    1:1:void recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder):0 -> h
    2:2:boolean android.support.v4.view.ViewCompat.hasTransientState(android.view.View):0:0 -> h
    2:2:boolean android.support.v7.widget.RecyclerView$ViewHolder.doesTransientStatePreventRecycling():0 -> h
    2:2:void recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder):0 -> h
    3:3:void recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> h
    1:1:boolean android.support.v7.widget.RecyclerView.canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> i
    1:1:void scrapView(android.view.View):0 -> i
    2:2:boolean android.support.v7.widget.DefaultItemAnimator.canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List):0:0 -> i
    2:2:boolean android.support.v7.widget.RecyclerView.canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder):0 -> i
    2:2:void scrapView(android.view.View):0 -> i
    3:3:boolean android.support.v7.widget.SimpleItemAnimator.canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> i
    3:3:boolean android.support.v7.widget.RecyclerView$ItemAnimator.canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List):0 -> i
    3:3:boolean android.support.v7.widget.DefaultItemAnimator.canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List):0 -> i
    3:3:boolean android.support.v7.widget.RecyclerView.canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder):0 -> i
    3:3:void scrapView(android.view.View):0 -> i
    4:4:void scrapView(android.view.View):0:0 -> i
    5:5:void android.support.v7.widget.RecyclerView$ViewHolder.setScrapContainer(android.support.v7.widget.RecyclerView$Recycler,boolean):0:0 -> i
    5:5:void scrapView(android.view.View):0 -> i
    6:6:void scrapView(android.view.View):0:0 -> i
    7:7:void android.support.v7.widget.RecyclerView$ViewHolder.setScrapContainer(android.support.v7.widget.RecyclerView$Recycler,boolean):0:0 -> i
    7:7:void scrapView(android.view.View):0 -> i
    8:8:void scrapView(android.view.View):0:0 -> i
    1:1:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> j
    1:1:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    2:2:android.support.v7.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int):0:0 -> j
    2:2:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    3:3:android.support.v7.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0:0 -> j
    3:3:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    4:4:android.view.View android.support.v7.widget.ChildHelper.findHiddenNonRemovedView(int):0:0 -> j
    4:4:android.support.v7.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0 -> j
    4:4:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    5:5:android.support.v7.widget.RecyclerView$ViewHolder android.support.v7.widget.RecyclerView$5.getChildViewHolder(android.view.View):0:0 -> j
    5:5:android.view.View android.support.v7.widget.ChildHelper.findHiddenNonRemovedView(int):0 -> j
    5:5:android.support.v7.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0 -> j
    5:5:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    6:6:android.view.View android.support.v7.widget.ChildHelper.findHiddenNonRemovedView(int):0:0 -> j
    6:6:android.support.v7.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0 -> j
    6:6:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    7:7:android.support.v7.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0:0 -> j
    7:7:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    8:8:void android.support.v7.widget.ChildHelper.unhide(android.view.View):0:0 -> j
    8:8:android.support.v7.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0 -> j
    8:8:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    9:9:int android.support.v7.widget.RecyclerView$5.indexOfChild(android.view.View):0:0 -> j
    9:9:void android.support.v7.widget.ChildHelper.unhide(android.view.View):0 -> j
    9:9:android.support.v7.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0 -> j
    9:9:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    10:10:void android.support.v7.widget.ChildHelper.unhide(android.view.View):0:0 -> j
    10:10:android.support.v7.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0 -> j
    10:10:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    11:11:android.support.v7.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0:0 -> j
    11:11:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    12:12:void android.support.v7.widget.ChildHelper.unhide(android.view.View):0:0 -> j
    12:12:android.support.v7.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0 -> j
    12:12:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    13:13:android.support.v7.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0:0 -> j
    13:13:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    14:14:boolean validateViewHolderForOffsetPosition(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> j
    14:14:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    15:15:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> j
    15:15:boolean validateViewHolderForOffsetPosition(android.support.v7.widget.RecyclerView$ViewHolder):0 -> j
    15:15:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    16:16:boolean validateViewHolderForOffsetPosition(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> j
    16:16:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    17:17:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> j
    17:17:boolean validateViewHolderForOffsetPosition(android.support.v7.widget.RecyclerView$ViewHolder):0 -> j
    17:17:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    18:18:boolean validateViewHolderForOffsetPosition(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> j
    18:18:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    19:19:int android.support.v7.widget.RecyclerView$ViewHolder.getItemViewType():0:0 -> j
    19:19:boolean validateViewHolderForOffsetPosition(android.support.v7.widget.RecyclerView$ViewHolder):0 -> j
    19:19:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    20:20:boolean validateViewHolderForOffsetPosition(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> j
    20:20:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    21:21:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    22:22:void android.support.v7.widget.RecyclerView$ViewHolder.unScrap():0:0 -> j
    22:22:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    23:23:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    24:24:boolean validateViewHolderForOffsetPosition(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> j
    24:24:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    25:25:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    26:26:int android.support.v7.widget.AdapterHelper.findPositionOffset(int):0:0 -> j
    26:26:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    27:27:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    28:28:android.support.v7.widget.RecyclerView$ViewHolder android.support.v7.widget.RecyclerView$RecycledViewPool.getRecycledView(int):0:0 -> j
    28:28:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    29:29:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    30:30:boolean android.support.v7.widget.RecyclerView$RecycledViewPool.willCreateInTime(int,long,long):0:0 -> j
    30:30:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    31:31:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    32:32:void android.support.v4.os.TraceCompat.beginSection(java.lang.String):0:0 -> j
    32:32:android.support.v7.widget.RecyclerView$ViewHolder android.support.v7.widget.RecyclerView$Adapter.createViewHolder(android.view.ViewGroup,int):0 -> j
    32:32:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    33:33:android.support.v7.widget.RecyclerView$ViewHolder android.support.v7.widget.RecyclerView$Adapter.createViewHolder(android.view.ViewGroup,int):0:0 -> j
    33:33:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    34:34:com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder com.cleanup.todoc.ui.TasksAdapter.onCreateViewHolder(android.view.ViewGroup,int):0:0 -> j
    34:34:android.support.v7.widget.RecyclerView$ViewHolder com.cleanup.todoc.ui.TasksAdapter.onCreateViewHolder(android.view.ViewGroup,int):0 -> j
    34:34:android.support.v7.widget.RecyclerView$ViewHolder android.support.v7.widget.RecyclerView$Adapter.createViewHolder(android.view.ViewGroup,int):0 -> j
    34:34:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    35:35:android.support.v7.widget.RecyclerView$ViewHolder android.support.v7.widget.RecyclerView$Adapter.createViewHolder(android.view.ViewGroup,int):0:0 -> j
    35:35:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    36:36:void android.support.v4.os.TraceCompat.endSection():0:0 -> j
    36:36:android.support.v7.widget.RecyclerView$ViewHolder android.support.v7.widget.RecyclerView$Adapter.createViewHolder(android.view.ViewGroup,int):0 -> j
    36:36:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    37:37:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    38:38:void android.support.v7.widget.RecyclerView$RecycledViewPool.factorInCreateTime(int,long):0:0 -> j
    38:38:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    39:39:android.support.v7.widget.RecyclerView$ViewHolder android.support.v7.widget.RecyclerView$Adapter.createViewHolder(android.view.ViewGroup,int):0:0 -> j
    39:39:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    40:40:void android.support.v4.os.TraceCompat.endSection():0:0 -> j
    40:40:android.support.v7.widget.RecyclerView$ViewHolder android.support.v7.widget.RecyclerView$Adapter.createViewHolder(android.view.ViewGroup,int):0 -> j
    40:40:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    41:41:android.support.v7.widget.RecyclerView$ViewHolder android.support.v7.widget.RecyclerView$Adapter.createViewHolder(android.view.ViewGroup,int):0:0 -> j
    41:41:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    42:42:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    43:43:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> j
    43:43:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    44:44:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    45:45:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> j
    45:45:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    46:46:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    47:47:boolean android.support.v7.widget.RecyclerView$ViewHolder.needsUpdate():0:0 -> j
    47:47:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    48:48:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    49:49:int android.support.v7.widget.AdapterHelper.findPositionOffset(int):0:0 -> j
    49:49:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    50:50:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0:0 -> j
    50:50:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    51:51:int android.support.v7.widget.RecyclerView$ViewHolder.getItemViewType():0:0 -> j
    51:51:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    51:51:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    52:52:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0:0 -> j
    52:52:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    53:53:boolean android.support.v7.widget.RecyclerView$RecycledViewPool.willBindInTime(int,long,long):0:0 -> j
    53:53:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    53:53:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    54:54:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0:0 -> j
    54:54:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    55:55:void android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0:0 -> j
    55:55:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    55:55:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    56:56:void android.support.v4.os.TraceCompat.beginSection(java.lang.String):0:0 -> j
    56:56:void android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    56:56:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    56:56:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    57:57:void android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0:0 -> j
    57:57:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    57:57:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    58:58:void android.support.v7.widget.RecyclerView$Adapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List):0:0 -> j
    58:58:void android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    58:58:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    58:58:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    59:59:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0:0 -> j
    59:59:void android.support.v7.widget.RecyclerView$Adapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List):0 -> j
    59:59:void android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    59:59:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    59:59:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    60:60:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder,int):0:0 -> j
    60:60:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    60:60:void android.support.v7.widget.RecyclerView$Adapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List):0 -> j
    60:60:void android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    60:60:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    60:60:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    61:61:void com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder.bind(com.cleanup.todoc.model.Task):0:0 -> j
    61:61:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder,int):0 -> j
    61:61:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    61:61:void android.support.v7.widget.RecyclerView$Adapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List):0 -> j
    61:61:void android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    61:61:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    61:61:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    62:62:java.lang.String com.cleanup.todoc.model.Task.getName():0:0 -> j
    62:62:void com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder.bind(com.cleanup.todoc.model.Task):0 -> j
    62:62:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder,int):0 -> j
    62:62:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    62:62:void android.support.v7.widget.RecyclerView$Adapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List):0 -> j
    62:62:void android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    62:62:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    62:62:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    63:63:void com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder.bind(com.cleanup.todoc.model.Task):0:0 -> j
    63:63:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder,int):0 -> j
    63:63:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    63:63:void android.support.v7.widget.RecyclerView$Adapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List):0 -> j
    63:63:void android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    63:63:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    63:63:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    64:64:com.cleanup.todoc.model.Project com.cleanup.todoc.model.Task.getProject():0:0 -> j
    64:64:void com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder.bind(com.cleanup.todoc.model.Task):0 -> j
    64:64:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder,int):0 -> j
    64:64:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    64:64:void android.support.v7.widget.RecyclerView$Adapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List):0 -> j
    64:64:void android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    64:64:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    64:64:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    65:65:com.cleanup.todoc.model.Project[] com.cleanup.todoc.model.Project.getAllProjects():0:0 -> j
    65:65:com.cleanup.todoc.model.Project com.cleanup.todoc.model.Project.getProjectById(long):0 -> j
    65:65:com.cleanup.todoc.model.Project com.cleanup.todoc.model.Task.getProject():0 -> j
    65:65:void com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder.bind(com.cleanup.todoc.model.Task):0 -> j
    65:65:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder,int):0 -> j
    65:65:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    65:65:void android.support.v7.widget.RecyclerView$Adapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List):0 -> j
    65:65:void android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    65:65:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    65:65:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    66:66:com.cleanup.todoc.model.Project com.cleanup.todoc.model.Project.getProjectById(long):0:0 -> j
    66:66:com.cleanup.todoc.model.Project com.cleanup.todoc.model.Task.getProject():0 -> j
    66:66:void com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder.bind(com.cleanup.todoc.model.Task):0 -> j
    66:66:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder,int):0 -> j
    66:66:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    66:66:void android.support.v7.widget.RecyclerView$Adapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List):0 -> j
    66:66:void android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    66:66:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    66:66:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    67:67:void com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder.bind(com.cleanup.todoc.model.Task):0:0 -> j
    67:67:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder,int):0 -> j
    67:67:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    67:67:void android.support.v7.widget.RecyclerView$Adapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List):0 -> j
    67:67:void android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    67:67:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    67:67:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    68:68:int com.cleanup.todoc.model.Project.getColor():0:0 -> j
    68:68:void com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder.bind(com.cleanup.todoc.model.Task):0 -> j
    68:68:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder,int):0 -> j
    68:68:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    68:68:void android.support.v7.widget.RecyclerView$Adapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List):0 -> j
    68:68:void android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    68:68:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    68:68:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    69:69:void com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder.bind(com.cleanup.todoc.model.Task):0:0 -> j
    69:69:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder,int):0 -> j
    69:69:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    69:69:void android.support.v7.widget.RecyclerView$Adapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List):0 -> j
    69:69:void android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    69:69:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    69:69:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    70:70:java.lang.String com.cleanup.todoc.model.Project.getName():0:0 -> j
    70:70:void com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder.bind(com.cleanup.todoc.model.Task):0 -> j
    70:70:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder,int):0 -> j
    70:70:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    70:70:void android.support.v7.widget.RecyclerView$Adapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List):0 -> j
    70:70:void android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    70:70:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    70:70:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    71:71:void com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder.bind(com.cleanup.todoc.model.Task):0:0 -> j
    71:71:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder,int):0 -> j
    71:71:void com.cleanup.todoc.ui.TasksAdapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    71:71:void android.support.v7.widget.RecyclerView$Adapter.onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List):0 -> j
    71:71:void android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    71:71:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    71:71:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    72:72:void android.support.v7.widget.RecyclerView$ViewHolder.clearPayload():0:0 -> j
    72:72:void android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    72:72:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    72:72:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    73:73:void android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0:0 -> j
    73:73:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    73:73:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    74:74:void android.support.v4.os.TraceCompat.endSection():0:0 -> j
    74:74:void android.support.v7.widget.RecyclerView$Adapter.bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int):0 -> j
    74:74:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    74:74:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    75:75:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0:0 -> j
    75:75:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    76:76:int android.support.v7.widget.RecyclerView$ViewHolder.getItemViewType():0:0 -> j
    76:76:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    76:76:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    77:77:void android.support.v7.widget.RecyclerView$RecycledViewPool.factorInBindTime(int,long):0:0 -> j
    77:77:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    77:77:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    78:78:void attachAccessibilityDelegateOnBind(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> j
    78:78:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    78:78:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    79:79:boolean android.support.v7.widget.RecyclerView.isAccessibilityEnabled():0:0 -> j
    79:79:void attachAccessibilityDelegateOnBind(android.support.v7.widget.RecyclerView$ViewHolder):0 -> j
    79:79:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    79:79:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    80:80:void attachAccessibilityDelegateOnBind(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> j
    80:80:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    80:80:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    81:81:int android.support.v4.view.ViewCompat.getImportantForAccessibility(android.view.View):0:0 -> j
    81:81:void attachAccessibilityDelegateOnBind(android.support.v7.widget.RecyclerView$ViewHolder):0 -> j
    81:81:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    81:81:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    82:82:void android.support.v4.view.ViewCompat.setImportantForAccessibility(android.view.View,int):0:0 -> j
    82:82:void attachAccessibilityDelegateOnBind(android.support.v7.widget.RecyclerView$ViewHolder):0 -> j
    82:82:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    82:82:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    83:83:boolean android.support.v4.view.ViewCompat.hasAccessibilityDelegate(android.view.View):0:0 -> j
    83:83:void attachAccessibilityDelegateOnBind(android.support.v7.widget.RecyclerView$ViewHolder):0 -> j
    83:83:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    83:83:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    84:84:void attachAccessibilityDelegateOnBind(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> j
    84:84:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    84:84:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    85:85:android.support.v4.view.AccessibilityDelegateCompat android.support.v7.widget.RecyclerViewAccessibilityDelegate.getItemDelegate():0:0 -> j
    85:85:void attachAccessibilityDelegateOnBind(android.support.v7.widget.RecyclerView$ViewHolder):0 -> j
    85:85:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    85:85:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    86:86:android.view.View$AccessibilityDelegate android.support.v4.view.AccessibilityDelegateCompat.getBridge():0:0 -> j
    86:86:void android.support.v4.view.ViewCompat.setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat):0 -> j
    86:86:void attachAccessibilityDelegateOnBind(android.support.v7.widget.RecyclerView$ViewHolder):0 -> j
    86:86:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    86:86:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    87:87:void android.support.v4.view.ViewCompat.setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat):0:0 -> j
    87:87:void attachAccessibilityDelegateOnBind(android.support.v7.widget.RecyclerView$ViewHolder):0 -> j
    87:87:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    87:87:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    88:88:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0:0 -> j
    88:88:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    89:89:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> j
    89:89:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    89:89:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    90:90:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long):0:0 -> j
    90:90:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    91:91:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    void unscrapView(android.support.v7.widget.RecyclerView$ViewHolder) -> k
    void updateViewCacheSize() -> l
android.support.v7.widget.RecyclerView$RecyclerListener -> android.support.v7.widget.RecyclerView$s:
    void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> a
android.support.v7.widget.RecyclerView$RecyclerViewDataObserver -> android.support.v7.widget.RecyclerView$t:
    android.support.v7.widget.RecyclerView this$0 -> a
    void onChanged() -> a
android.support.v7.widget.RecyclerView$SavedState -> android.support.v7.widget.RecyclerView$u:
    android.os.Parcelable mLayoutState -> c
    1:1:void android.support.v4.view.AbsSavedState.writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
    1:1:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    2:2:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
android.support.v7.widget.RecyclerView$SavedState$1 -> android.support.v7.widget.RecyclerView$u$a:
    1:1:android.support.v7.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    2:2:android.support.v7.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    2:2:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    1:1:android.support.v7.widget.RecyclerView$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
android.support.v7.widget.RecyclerView$State -> android.support.v7.widget.RecyclerView$v:
    long mFocusedItemId -> l
    int mFocusedSubChildId -> m
    boolean mRunSimpleAnimations -> i
    boolean mRunPredictiveAnimations -> j
    int mFocusedItemPosition -> k
    int mItemCount -> d
    int mDeletedInvisibleItemCountSincePreviousLayout -> b
    int mLayoutStep -> c
    int mPreviousLayoutItemCount -> a
    boolean mStructureChanged -> e
    boolean mInPreLayout -> f
    boolean mTrackOldChangeHolders -> g
    boolean mIsMeasuring -> h
    void assertLayoutStep(int) -> a
    int getItemCount() -> b
android.support.v7.widget.RecyclerView$ViewCacheExtension -> android.support.v7.widget.RecyclerView$w:
android.support.v7.widget.RecyclerView$ViewFlinger -> android.support.v7.widget.RecyclerView$x:
    android.view.animation.Interpolator mInterpolator -> e
    android.support.v7.widget.RecyclerView this$0 -> h
    boolean mEatRunOnAnimationRequest -> f
    boolean mReSchedulePostAnimationCallback -> g
    int mLastFlingX -> b
    android.widget.OverScroller mScroller -> d
    int mLastFlingY -> c
    1:1:void android.support.v4.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> a
    1:1:void postOnAnimation():0 -> a
    1:1:void stop():0:0 -> run
    1:1:void run():0 -> run
    2:2:void disableRunOnAnimationRequests():0:0 -> run
    2:2:void run():0 -> run
    3:3:void run():0:0 -> run
    4:4:void android.support.v7.widget.RecyclerView.absorbGlows(int,int):0:0 -> run
    4:4:void run():0 -> run
    5:5:void android.support.v4.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> run
    5:5:void android.support.v7.widget.RecyclerView.absorbGlows(int,int):0 -> run
    5:5:void run():0 -> run
    6:6:void run():0:0 -> run
    7:7:void android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl.clearPrefetchPositions():0:0 -> run
    7:7:void run():0 -> run
    8:8:void run():0:0 -> run
    9:9:void enableRunOnAnimationRequests():0:0 -> run
    9:9:void run():0 -> run
android.support.v7.widget.RecyclerView$ViewHolder -> android.support.v7.widget.RecyclerView$y:
    boolean mInChangeScrap -> o
    android.support.v7.widget.RecyclerView mOwnerRecyclerView -> r
    int mIsRecyclableCount -> m
    int mFlags -> j
    long mItemId -> e
    android.support.v7.widget.RecyclerView$ViewHolder mShadowedHolder -> h
    android.support.v7.widget.RecyclerView$ViewHolder mShadowingHolder -> i
    java.util.List FULLUPDATE_PAYLOADS -> s
    int mItemViewType -> f
    int mPreLayoutPosition -> g
    int mOldPosition -> d
    int mPosition -> c
    android.support.v7.widget.RecyclerView$Recycler mScrapContainer -> n
    android.view.View itemView -> a
    java.lang.ref.WeakReference mNestedRecyclerView -> b
    java.util.List mUnmodifiedPayloads -> l
    int mWasImportantForAccessibilityBeforeHidden -> p
    java.util.List mPayloads -> k
    int mPendingAccessibilityState -> q
    1:1:void createPayloadsIfNeeded():0:0 -> a
    1:1:void addChangePayload(java.lang.Object):0 -> a
    2:2:void addChangePayload(java.lang.Object):0:0 -> a
    void addFlags(int) -> b
    void clearOldPosition() -> c
    void clearReturnedFromScrapFlag() -> d
    int getLayoutPosition() -> e
    java.util.List getUnmodifiedPayloads() -> f
    boolean hasAnyOfTheFlags(int) -> g
    boolean isBound() -> h
    boolean isInvalid() -> i
    1:1:boolean android.support.v4.view.ViewCompat.hasTransientState(android.view.View):0:0 -> j
    1:1:boolean isRecyclable():0 -> j
    boolean isRemoved() -> k
    boolean isScrap() -> l
    boolean isTmpDetached() -> m
    boolean isUpdated() -> n
    void offsetPosition(int,boolean) -> o
    1:1:void clearPayload():0:0 -> p
    1:1:void resetInternal():0 -> p
    2:2:void resetInternal():0:0 -> p
    void setFlags(int,int) -> q
    void setIsRecyclable(boolean) -> r
    boolean shouldIgnore() -> s
    boolean wasReturnedFromScrap() -> t
    1:1:boolean needsUpdate():0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
    3:3:boolean isAdapterPositionUnknown():0:0 -> toString
    3:3:java.lang.String toString():0 -> toString
    4:4:java.lang.String toString():0:0 -> toString
android.support.v7.widget.RecyclerViewAccessibilityDelegate -> android.support.v7.widget.w:
    android.support.v7.widget.RecyclerView mRecyclerView -> c
    android.support.v4.view.AccessibilityDelegateCompat mItemDelegate -> d
    1:1:void android.support.v4.view.AccessibilityDelegateCompat.onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> a
    1:1:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> a
    2:2:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> a
    1:1:void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setClassName(java.lang.CharSequence):0:0 -> b
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    2:2:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    3:3:void android.support.v7.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    3:3:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    4:4:void android.support.v7.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    4:4:void android.support.v7.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    4:4:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    5:5:void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.addAction(int):0:0 -> b
    5:5:void android.support.v7.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    5:5:void android.support.v7.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    5:5:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    6:6:void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setScrollable(boolean):0:0 -> b
    6:6:void android.support.v7.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    6:6:void android.support.v7.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    6:6:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    7:7:void android.support.v7.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    7:7:void android.support.v7.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    7:7:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    8:8:void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.addAction(int):0:0 -> b
    8:8:void android.support.v7.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    8:8:void android.support.v7.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    8:8:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    9:9:void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setScrollable(boolean):0:0 -> b
    9:9:void android.support.v7.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    9:9:void android.support.v7.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    9:9:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    10:10:void android.support.v7.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> b
    10:10:void android.support.v7.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    10:10:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    11:11:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat.obtain(int,int,boolean,int):0:0 -> b
    11:11:void android.support.v7.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    11:11:void android.support.v7.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    11:11:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    12:12:void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setCollectionInfo(java.lang.Object):0:0 -> b
    12:12:void android.support.v7.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    12:12:void android.support.v7.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    12:12:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> b
    1:1:boolean android.support.v7.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0:0 -> c
    1:1:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    2:2:boolean android.support.v7.widget.RecyclerView$LayoutManager.performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle):0:0 -> c
    2:2:boolean android.support.v7.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0 -> c
    2:2:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    3:3:int android.support.v7.widget.RecyclerView$LayoutManager.getHeight():0:0 -> c
    3:3:boolean android.support.v7.widget.RecyclerView$LayoutManager.performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle):0 -> c
    3:3:boolean android.support.v7.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0 -> c
    3:3:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    4:4:boolean android.support.v7.widget.RecyclerView$LayoutManager.performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle):0:0 -> c
    4:4:boolean android.support.v7.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0 -> c
    4:4:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    5:5:int android.support.v7.widget.RecyclerView$LayoutManager.getWidth():0:0 -> c
    5:5:boolean android.support.v7.widget.RecyclerView$LayoutManager.performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle):0 -> c
    5:5:boolean android.support.v7.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0 -> c
    5:5:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    6:6:boolean android.support.v7.widget.RecyclerView$LayoutManager.performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle):0:0 -> c
    6:6:boolean android.support.v7.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0 -> c
    6:6:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    7:7:int android.support.v7.widget.RecyclerView$LayoutManager.getHeight():0:0 -> c
    7:7:boolean android.support.v7.widget.RecyclerView$LayoutManager.performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle):0 -> c
    7:7:boolean android.support.v7.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0 -> c
    7:7:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    8:8:boolean android.support.v7.widget.RecyclerView$LayoutManager.performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle):0:0 -> c
    8:8:boolean android.support.v7.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0 -> c
    8:8:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    9:9:int android.support.v7.widget.RecyclerView$LayoutManager.getWidth():0:0 -> c
    9:9:boolean android.support.v7.widget.RecyclerView$LayoutManager.performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle):0 -> c
    9:9:boolean android.support.v7.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0 -> c
    9:9:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    10:10:boolean android.support.v7.widget.RecyclerView$LayoutManager.performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle):0:0 -> c
    10:10:boolean android.support.v7.widget.RecyclerView$LayoutManager.performAccessibilityAction(int,android.os.Bundle):0 -> c
    10:10:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
    boolean shouldIgnore() -> d
android.support.v7.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> android.support.v7.widget.w$a:
    android.support.v7.widget.RecyclerViewAccessibilityDelegate mRecyclerViewDelegate -> c
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> b
    1:1:boolean android.support.v7.widget.RecyclerView$LayoutManager.performAccessibilityActionForItem(android.view.View,int,android.os.Bundle):0:0 -> c
    1:1:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> c
android.support.v7.widget.ResourcesWrapper -> s0.n0:
android.support.v7.widget.RoundRectDrawable -> s0.o0:
    android.graphics.PorterDuffColorFilter mTintFilter -> f
    android.graphics.PorterDuff$Mode mTintMode -> h
    android.content.res.ColorStateList mBackground -> e
    android.content.res.ColorStateList mTint -> g
    float mPadding -> b
    float mRadius -> a
    boolean mInsetForPadding -> c
    boolean mInsetForRadius -> d
    android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> a
    void updateBounds(android.graphics.Rect) -> b
android.support.v7.widget.RoundRectDrawableWithShadow -> s0.p0:
    double COS_45 -> a
    float calculateHorizontalPadding(float,float,boolean) -> a
    float calculateVerticalPadding(float,float,boolean) -> b
android.support.v7.widget.RtlSpacingHelper -> s0.q0:
    int mExplicitRight -> f
    int mEnd -> d
    boolean mIsRtl -> g
    int mExplicitLeft -> e
    boolean mIsRelative -> h
    int mRight -> b
    int mStart -> c
    int mLeft -> a
    void setRelative(int,int) -> a
android.support.v7.widget.ScrollbarHelper -> android.support.v7.widget.x:
    int computeScrollExtent(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean) -> a
    int computeScrollOffset(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean,boolean) -> b
    int computeScrollRange(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean) -> c
android.support.v7.widget.ScrollingTabContainerView -> android.support.v7.widget.y:
    int mContentHeight -> b
    int mSelectedTabIndex -> c
    1:1:int android.support.v7.view.ActionBarPolicy.getTabContainerHeight():0:0 -> onConfigurationChanged
    1:1:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    2:2:boolean android.support.v7.view.ActionBarPolicy.hasEmbeddedTabs():0:0 -> onConfigurationChanged
    2:2:int android.support.v7.view.ActionBarPolicy.getTabContainerHeight():0 -> onConfigurationChanged
    2:2:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    3:3:int android.support.v7.view.ActionBarPolicy.getTabContainerHeight():0:0 -> onConfigurationChanged
    3:3:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    4:4:void onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    5:5:int android.support.v7.view.ActionBarPolicy.getStackedTabMaxWidth():0:0 -> onConfigurationChanged
    5:5:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    1:1:android.support.v7.app.ActionBar$Tab android.support.v7.widget.ScrollingTabContainerView$TabView.getTab():0:0 -> onItemSelected
    1:1:void onItemSelected(android.widget.AdapterView,android.view.View,int,long):0 -> onItemSelected
    2:2:void onItemSelected(android.widget.AdapterView,android.view.View,int,long):0:0 -> onItemSelected
android.support.v7.widget.ScrollingTabContainerView$TabView -> android.support.v7.widget.y$a:
    android.support.v7.app.ActionBar$Tab mTab -> b
    android.support.v7.widget.ScrollingTabContainerView this$0 -> c
android.support.v7.widget.SearchView -> android.support.v7.widget.SearchView:
    android.widget.ImageView mVoiceButton -> x
    boolean mExpandedInActionView -> e0
    android.widget.ImageView mGoButton -> v
    android.support.v7.widget.SearchView$UpdatableTouchDelegate mTouchDelegate -> z
    android.graphics.drawable.Drawable mSearchHintIcon -> F
    boolean mVoiceButtonEnabled -> b0
    int mSuggestionRowLayout -> G
    boolean mQueryRefinement -> V
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> N
    android.view.View mSearchEditFrame -> r
    android.support.v7.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> L
    android.view.View mSubmitArea -> t
    android.support.v7.widget.SearchView$OnCloseListener mOnCloseListener -> M
    boolean mIconified -> R
    java.lang.CharSequence mOldQueryText -> c0
    android.graphics.Rect mSearchSrtTextViewBoundsExpanded -> B
    java.lang.CharSequence mDefaultQueryHint -> K
    boolean mSubmitButtonEnabled -> T
    java.lang.CharSequence mUserQuery -> d0
    android.support.v7.widget.SearchView$AutoCompleteTextViewReflector HIDDEN_METHOD_INVOKER -> n0
    int[] mTemp -> C
    android.os.Bundle mAppSearchData -> h0
    java.lang.Runnable mReleaseCursorRunnable -> j0
    java.lang.Runnable mUpdateDrawableStateRunnable -> i0
    java.util.WeakHashMap mOutsideDrawablesCache -> k0
    android.content.Intent mVoiceAppSearchIntent -> J
    android.widget.ImageView mSearchButton -> u
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> S
    android.view.View mDropDownAnchor -> y
    android.widget.ImageView mCloseButton -> w
    int mMaxWidth -> a0
    android.view.View$OnKeyListener mTextKeyListener -> l0
    android.support.v7.widget.SearchView$SearchAutoComplete mSearchSrcTextView -> q
    int mSuggestionCommitIconResId -> H
    int mCollapsedImeOptions -> f0
    android.view.View mSearchPlate -> s
    boolean mClearingFocus -> W
    android.app.SearchableInfo mSearchable -> g0
    boolean mIconifiedByDefault -> Q
    android.widget.ImageView mCollapsedIcon -> E
    android.graphics.Rect mSearchSrcTextViewBounds -> A
    int[] mTemp2 -> D
    android.view.View$OnClickListener mOnSearchClickListener -> P
    java.lang.CharSequence mQueryHint -> U
    android.text.TextWatcher mTextWatcher -> m0
    android.support.v7.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> O
    android.content.Intent mVoiceWebSearchIntent -> I
    1:1:android.support.v7.widget.TintTypedArray android.support.v7.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:void android.support.v4.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    5:5:void android.support.v4.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    7:7:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    void updateViewsVisibility(boolean) -> A
    1:1:boolean isIconified():0:0 -> B
    1:1:void updateVoiceButton(boolean):0 -> B
    2:2:void updateVoiceButton(boolean):0:0 -> B
    void onActionViewExpanded() -> a
    1:1:void setQuery(java.lang.CharSequence,boolean):0:0 -> e
    1:1:void onActionViewCollapsed():0 -> e
    2:2:void onActionViewCollapsed():0:0 -> e
    android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> l
    android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> m
    1:1:void android.support.v7.widget.SearchView$AutoCompleteTextViewReflector.doBeforeTextChanged(android.widget.AutoCompleteTextView):0:0 -> n
    1:1:void forceSuggestionQuery():0 -> n
    2:2:void forceSuggestionQuery():0:0 -> n
    3:3:void android.support.v7.widget.SearchView$AutoCompleteTextViewReflector.doAfterTextChanged(android.widget.AutoCompleteTextView):0:0 -> n
    3:3:void forceSuggestionQuery():0 -> n
    void launchQuerySearch(int,java.lang.String,java.lang.String) -> o
    1:1:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    1:1:boolean isIconified():0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
    1:1:android.os.Parcelable android.support.v4.view.AbsSavedState.getSuperState():0:0 -> onRestoreInstanceState
    1:1:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    2:2:void onRestoreInstanceState(android.os.Parcelable):0:0 -> onRestoreInstanceState
    1:1:boolean isIconified():0:0 -> onSaveInstanceState
    1:1:android.os.Parcelable onSaveInstanceState():0 -> onSaveInstanceState
    2:2:android.os.Parcelable onSaveInstanceState():0:0 -> onSaveInstanceState
    1:1:void postUpdateFocusedState():0:0 -> onWindowFocusChanged
    1:1:void onWindowFocusChanged(boolean):0 -> onWindowFocusChanged
    void onCloseClicked() -> p
    1:1:boolean launchSuggestion(int,int,java.lang.String):0:0 -> q
    1:1:boolean onItemClicked(int,int,java.lang.String):0 -> q
    2:2:android.database.Cursor android.support.v4.widget.CursorAdapter.getCursor():0:0 -> q
    2:2:boolean launchSuggestion(int,int,java.lang.String):0 -> q
    2:2:boolean onItemClicked(int,int,java.lang.String):0 -> q
    3:3:boolean launchSuggestion(int,int,java.lang.String):0:0 -> q
    3:3:boolean onItemClicked(int,int,java.lang.String):0 -> q
    4:4:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0:0 -> q
    4:4:boolean launchSuggestion(int,int,java.lang.String):0 -> q
    4:4:boolean onItemClicked(int,int,java.lang.String):0 -> q
    5:5:java.lang.String android.support.v7.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> q
    5:5:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0 -> q
    5:5:boolean launchSuggestion(int,int,java.lang.String):0 -> q
    5:5:boolean onItemClicked(int,int,java.lang.String):0 -> q
    6:6:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0:0 -> q
    6:6:boolean launchSuggestion(int,int,java.lang.String):0 -> q
    6:6:boolean onItemClicked(int,int,java.lang.String):0 -> q
    7:7:java.lang.String android.support.v7.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> q
    7:7:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0 -> q
    7:7:boolean launchSuggestion(int,int,java.lang.String):0 -> q
    7:7:boolean onItemClicked(int,int,java.lang.String):0 -> q
    8:8:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0:0 -> q
    8:8:boolean launchSuggestion(int,int,java.lang.String):0 -> q
    8:8:boolean onItemClicked(int,int,java.lang.String):0 -> q
    9:9:java.lang.String android.support.v7.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> q
    9:9:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0 -> q
    9:9:boolean launchSuggestion(int,int,java.lang.String):0 -> q
    9:9:boolean onItemClicked(int,int,java.lang.String):0 -> q
    10:10:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0:0 -> q
    10:10:boolean launchSuggestion(int,int,java.lang.String):0 -> q
    10:10:boolean onItemClicked(int,int,java.lang.String):0 -> q
    11:11:java.lang.String android.support.v7.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> q
    11:11:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0 -> q
    11:11:boolean launchSuggestion(int,int,java.lang.String):0 -> q
    11:11:boolean onItemClicked(int,int,java.lang.String):0 -> q
    12:12:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0:0 -> q
    12:12:boolean launchSuggestion(int,int,java.lang.String):0 -> q
    12:12:boolean onItemClicked(int,int,java.lang.String):0 -> q
    13:13:void launchIntent(android.content.Intent):0:0 -> q
    13:13:boolean launchSuggestion(int,int,java.lang.String):0 -> q
    13:13:boolean onItemClicked(int,int,java.lang.String):0 -> q
    14:14:boolean onItemClicked(int,int,java.lang.String):0:0 -> q
    15:15:void dismissSuggestions():0:0 -> q
    15:15:boolean onItemClicked(int,int,java.lang.String):0 -> q
    1:1:void rewriteQueryFromSuggestion(int):0:0 -> r
    1:1:boolean onItemSelected(int):0 -> r
    2:2:android.database.Cursor android.support.v4.widget.CursorAdapter.getCursor():0:0 -> r
    2:2:void rewriteQueryFromSuggestion(int):0 -> r
    2:2:boolean onItemSelected(int):0 -> r
    3:3:void rewriteQueryFromSuggestion(int):0:0 -> r
    3:3:boolean onItemSelected(int):0 -> r
    1:1:boolean isIconified():0:0 -> requestFocus
    1:1:boolean requestFocus(int,android.graphics.Rect):0 -> requestFocus
    2:2:boolean requestFocus(int,android.graphics.Rect):0:0 -> requestFocus
    void onQueryRefine(java.lang.CharSequence) -> s
    1:1:void android.support.v7.widget.SuggestionsAdapter.setQueryRefinement(int):0:0 -> setQueryRefinementEnabled
    1:1:void setQueryRefinementEnabled(boolean):0 -> setQueryRefinementEnabled
    1:1:void updateSearchAutoComplete():0:0 -> setSearchableInfo
    1:1:void setSearchableInfo(android.app.SearchableInfo):0 -> setSearchableInfo
    2:2:void android.support.v7.widget.SuggestionsAdapter.setQueryRefinement(int):0:0 -> setSearchableInfo
    2:2:void updateSearchAutoComplete():0 -> setSearchableInfo
    2:2:void setSearchableInfo(android.app.SearchableInfo):0 -> setSearchableInfo
    3:3:void setSearchableInfo(android.app.SearchableInfo):0:0 -> setSearchableInfo
    4:4:boolean hasVoiceSearch():0:0 -> setSearchableInfo
    4:4:void setSearchableInfo(android.app.SearchableInfo):0 -> setSearchableInfo
    5:5:void setSearchableInfo(android.app.SearchableInfo):0:0 -> setSearchableInfo
    6:6:boolean isIconified():0:0 -> setSearchableInfo
    6:6:void setSearchableInfo(android.app.SearchableInfo):0 -> setSearchableInfo
    7:7:void setSearchableInfo(android.app.SearchableInfo):0:0 -> setSearchableInfo
    1:1:boolean isIconified():0:0 -> setSubmitButtonEnabled
    1:1:void setSubmitButtonEnabled(boolean):0 -> setSubmitButtonEnabled
    2:2:void setSubmitButtonEnabled(boolean):0:0 -> setSubmitButtonEnabled
    void onSearchClicked() -> t
    1:1:void dismissSuggestions():0:0 -> u
    1:1:void onSubmitQuery():0 -> u
    void updateCloseButton() -> v
    void updateFocusedState() -> w
    1:1:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence):0:0 -> x
    1:1:void updateQueryHint():0 -> x
    2:2:void updateQueryHint():0:0 -> x
    1:1:boolean isSubmitAreaEnabled():0:0 -> y
    1:1:void updateSubmitArea():0 -> y
    2:2:boolean isIconified():0:0 -> y
    2:2:boolean isSubmitAreaEnabled():0 -> y
    2:2:void updateSubmitArea():0 -> y
    3:3:void updateSubmitArea():0:0 -> y
    1:1:boolean isSubmitAreaEnabled():0:0 -> z
    1:1:void updateSubmitButton(boolean):0 -> z
    2:2:boolean isIconified():0:0 -> z
    2:2:boolean isSubmitAreaEnabled():0 -> z
    2:2:void updateSubmitButton(boolean):0 -> z
    3:3:void updateSubmitButton(boolean):0:0 -> z
android.support.v7.widget.SearchView$1 -> android.support.v7.widget.SearchView$b:
    android.support.v7.widget.SearchView this$0 -> b
android.support.v7.widget.SearchView$10 -> android.support.v7.widget.SearchView$a:
    android.support.v7.widget.SearchView this$0 -> b
    1:1:void android.support.v7.widget.SearchView.onTextChanged(java.lang.CharSequence):0:0 -> onTextChanged
    1:1:void onTextChanged(java.lang.CharSequence,int,int,int):0 -> onTextChanged
android.support.v7.widget.SearchView$2 -> android.support.v7.widget.SearchView$c:
    android.support.v7.widget.SearchView this$0 -> b
android.support.v7.widget.SearchView$3 -> android.support.v7.widget.SearchView$d:
    android.support.v7.widget.SearchView this$0 -> a
android.support.v7.widget.SearchView$4 -> android.support.v7.widget.SearchView$e:
    android.support.v7.widget.SearchView this$0 -> a
    1:1:void android.support.v7.widget.SearchView.adjustDropDownSizeAndPosition():0:0 -> onLayoutChange
    1:1:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int):0 -> onLayoutChange
android.support.v7.widget.SearchView$5 -> android.support.v7.widget.SearchView$f:
    android.support.v7.widget.SearchView this$0 -> b
    1:1:void android.support.v7.widget.SearchView.onVoiceClicked():0:0 -> onClick
    1:1:void onClick(android.view.View):0 -> onClick
    2:2:android.content.Intent android.support.v7.widget.SearchView.createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo):0:0 -> onClick
    2:2:void android.support.v7.widget.SearchView.onVoiceClicked():0 -> onClick
    2:2:void onClick(android.view.View):0 -> onClick
    3:3:void android.support.v7.widget.SearchView.onVoiceClicked():0:0 -> onClick
    3:3:void onClick(android.view.View):0 -> onClick
    4:4:void onClick(android.view.View):0:0 -> onClick
android.support.v7.widget.SearchView$6 -> android.support.v7.widget.SearchView$g:
    android.support.v7.widget.SearchView this$0 -> b
    1:1:boolean android.support.v7.widget.SearchView.onSuggestionsKey(android.view.View,int,android.view.KeyEvent):0:0 -> onKey
    1:1:boolean onKey(android.view.View,int,android.view.KeyEvent):0 -> onKey
    2:2:void android.support.v7.widget.SearchView$AutoCompleteTextViewReflector.ensureImeVisible(android.widget.AutoCompleteTextView,boolean):0:0 -> onKey
    2:2:boolean android.support.v7.widget.SearchView.onSuggestionsKey(android.view.View,int,android.view.KeyEvent):0 -> onKey
    2:2:boolean onKey(android.view.View,int,android.view.KeyEvent):0 -> onKey
    3:3:boolean android.support.v7.widget.SearchView.onSuggestionsKey(android.view.View,int,android.view.KeyEvent):0:0 -> onKey
    3:3:boolean onKey(android.view.View,int,android.view.KeyEvent):0 -> onKey
    4:4:boolean onKey(android.view.View,int,android.view.KeyEvent):0:0 -> onKey
    5:5:boolean android.support.v7.widget.SearchView$SearchAutoComplete.isEmpty():0:0 -> onKey
    5:5:boolean onKey(android.view.View,int,android.view.KeyEvent):0 -> onKey
    6:6:boolean onKey(android.view.View,int,android.view.KeyEvent):0:0 -> onKey
android.support.v7.widget.SearchView$7 -> android.support.v7.widget.SearchView$h:
    android.support.v7.widget.SearchView this$0 -> a
android.support.v7.widget.SearchView$8 -> android.support.v7.widget.SearchView$i:
    android.support.v7.widget.SearchView this$0 -> b
android.support.v7.widget.SearchView$9 -> android.support.v7.widget.SearchView$j:
    android.support.v7.widget.SearchView this$0 -> b
android.support.v7.widget.SearchView$AutoCompleteTextViewReflector -> android.support.v7.widget.SearchView$k:
    java.lang.reflect.Method ensureImeVisible -> c
    java.lang.reflect.Method doBeforeTextChanged -> a
    java.lang.reflect.Method doAfterTextChanged -> b
android.support.v7.widget.SearchView$OnCloseListener -> android.support.v7.widget.SearchView$l:
    boolean onClose() -> a
android.support.v7.widget.SearchView$OnQueryTextListener -> android.support.v7.widget.SearchView$m:
    boolean onQueryTextSubmit(java.lang.String) -> a
    boolean onQueryTextChange(java.lang.String) -> b
android.support.v7.widget.SearchView$OnSuggestionListener -> android.support.v7.widget.SearchView$n:
    boolean onSuggestionSelect(int) -> a
    boolean onSuggestionClick(int) -> b
android.support.v7.widget.SearchView$SavedState -> android.support.v7.widget.SearchView$o:
    boolean isIconified -> c
    1:1:void android.support.v4.view.AbsSavedState.writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
    1:1:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    2:2:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
android.support.v7.widget.SearchView$SavedState$1 -> android.support.v7.widget.SearchView$o$a:
    1:1:android.support.v7.widget.SearchView$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    2:2:android.support.v7.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    2:2:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    1:1:android.support.v7.widget.SearchView$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
android.support.v7.widget.SearchView$SearchAutoComplete -> android.support.v7.widget.SearchView$SearchAutoComplete:
    java.lang.Runnable mRunShowSoftInputIfNecessary -> h
    boolean mHasPendingShowSoftInputRequest -> g
    int mThreshold -> e
    android.support.v7.widget.SearchView mSearchView -> f
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:boolean android.support.v7.widget.SearchView.isIconified():0:0 -> onFocusChanged
    1:1:void android.support.v7.widget.SearchView.onTextFocusChanged():0 -> onFocusChanged
    1:1:void onFocusChanged(boolean,int,android.graphics.Rect):0 -> onFocusChanged
    2:2:void android.support.v7.widget.SearchView.onTextFocusChanged():0:0 -> onFocusChanged
    2:2:void onFocusChanged(boolean,int,android.graphics.Rect):0 -> onFocusChanged
    3:3:void android.support.v7.widget.SearchView.postUpdateFocusedState():0:0 -> onFocusChanged
    3:3:void android.support.v7.widget.SearchView.onTextFocusChanged():0 -> onFocusChanged
    3:3:void onFocusChanged(boolean,int,android.graphics.Rect):0 -> onFocusChanged
    4:4:void android.support.v7.widget.SearchView.onTextFocusChanged():0:0 -> onFocusChanged
    4:4:void onFocusChanged(boolean,int,android.graphics.Rect):0 -> onFocusChanged
    1:1:boolean android.support.v7.widget.SearchView.isLandscapeMode(android.content.Context):0:0 -> onWindowFocusChanged
    1:1:void onWindowFocusChanged(boolean):0 -> onWindowFocusChanged
    2:2:void onWindowFocusChanged(boolean):0:0 -> onWindowFocusChanged
    3:3:void android.support.v7.widget.SearchView$AutoCompleteTextViewReflector.ensureImeVisible(android.widget.AutoCompleteTextView,boolean):0:0 -> onWindowFocusChanged
    3:3:void onWindowFocusChanged(boolean):0 -> onWindowFocusChanged
android.support.v7.widget.SearchView$SearchAutoComplete$1 -> android.support.v7.widget.SearchView$SearchAutoComplete$a:
    android.support.v7.widget.SearchView$SearchAutoComplete this$0 -> b
    1:1:void android.support.v7.widget.SearchView$SearchAutoComplete.showSoftInputIfNecessary():0:0 -> run
    1:1:void run():0 -> run
android.support.v7.widget.SearchView$UpdatableTouchDelegate -> android.support.v7.widget.SearchView$p:
    android.view.View mDelegateView -> a
    boolean mDelegateTargeted -> f
    int mSlop -> e
    android.graphics.Rect mActualBounds -> c
    android.graphics.Rect mSlopBounds -> d
    android.graphics.Rect mTargetBounds -> b
    void setBounds(android.graphics.Rect,android.graphics.Rect) -> a
android.support.v7.widget.SimpleItemAnimator -> android.support.v7.widget.z:
    boolean mSupportsChangeAnimations -> g
    1:1:boolean android.support.v7.widget.DefaultItemAnimator.animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int):0:0 -> a
    1:1:boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> a
    boolean animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> i
android.support.v7.widget.StaggeredGridLayoutManager -> android.support.v7.widget.StaggeredGridLayoutManager:
    android.support.v7.widget.OrientationHelper mSecondaryOrientation -> r
    int mSpanCount -> o
    android.support.v7.widget.OrientationHelper mPrimaryOrientation -> q
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup mLazySpanLookup -> A
    boolean mReverseLayout -> v
    boolean mShouldReverseLayout -> w
    android.graphics.Rect mTmpRect -> F
    int mGapStrategy -> B
    android.support.v7.widget.StaggeredGridLayoutManager$SavedState mPendingSavedState -> E
    android.support.v7.widget.StaggeredGridLayoutManager$Span[] mSpans -> p
    android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo mAnchorInfo -> G
    java.util.BitSet mRemainingSpans -> x
    int[] mPrefetchDistances -> I
    int mPendingScrollPositionOffset -> z
    int mPendingScrollPosition -> y
    int mSizePerSpan -> t
    boolean mSmoothScrollbarEnabled -> H
    java.lang.Runnable mCheckForGapsRunnable -> J
    android.support.v7.widget.LayoutState mLayoutState -> u
    int mOrientation -> s
    boolean mLastLayoutFromEnd -> C
    boolean mLastLayoutRTL -> D
    1:1:void setOrientation(int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    3:3:void setSpanCount(int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    4:4:void invalidateSpanAssignments():0:0 -> <init>
    4:4:void setSpanCount(int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    5:5:void setSpanCount(int):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    7:7:void setReverseLayout(boolean):0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    9:9:void createOrientationHelpers():0:0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    1:1:boolean android.support.v7.widget.RecyclerView$LayoutManager.isAttachedToWindow():0:0 -> A0
    1:1:boolean checkForGaps():0 -> A0
    2:2:boolean checkForGaps():0:0 -> A0
    3:3:void android.support.v7.widget.RecyclerView$LayoutManager.requestSimpleAnimationsInNextLayout():0:0 -> A0
    3:3:boolean checkForGaps():0 -> A0
    4:4:boolean checkForGaps():0:0 -> A0
    int computeScrollExtent(android.support.v7.widget.RecyclerView$State) -> B0
    int computeScrollOffset(android.support.v7.widget.RecyclerView$State) -> C0
    int computeScrollRange(android.support.v7.widget.RecyclerView$State) -> D0
    1:1:boolean android.support.v7.widget.LayoutState.hasMore(android.support.v7.widget.RecyclerView$State):0:0 -> E0
    1:1:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    2:2:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0:0 -> E0
    3:3:android.view.View android.support.v7.widget.LayoutState.next(android.support.v7.widget.RecyclerView$Recycler):0:0 -> E0
    3:3:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    4:4:android.view.View android.support.v7.widget.RecyclerView$Recycler.getViewForPosition(int,boolean):0:0 -> E0
    4:4:android.view.View android.support.v7.widget.RecyclerView$Recycler.getViewForPosition(int):0 -> E0
    4:4:android.view.View android.support.v7.widget.LayoutState.next(android.support.v7.widget.RecyclerView$Recycler):0 -> E0
    4:4:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    5:5:android.view.View android.support.v7.widget.LayoutState.next(android.support.v7.widget.RecyclerView$Recycler):0:0 -> E0
    5:5:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    6:6:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0:0 -> E0
    7:7:int android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup.getSpan(int):0:0 -> E0
    7:7:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    8:8:android.support.v7.widget.StaggeredGridLayoutManager$Span getNextSpan(android.support.v7.widget.LayoutState):0:0 -> E0
    8:8:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    9:9:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0:0 -> E0
    10:10:void android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup.setSpan(int,android.support.v7.widget.StaggeredGridLayoutManager$Span):0:0 -> E0
    10:10:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    11:11:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0:0 -> E0
    12:12:void android.support.v7.widget.RecyclerView$LayoutManager.addView(android.view.View,int):0:0 -> E0
    12:12:void android.support.v7.widget.RecyclerView$LayoutManager.addView(android.view.View):0 -> E0
    12:12:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    13:13:void android.support.v7.widget.RecyclerView$LayoutManager.addView(android.view.View,int):0:0 -> E0
    13:13:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    14:14:void measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean):0:0 -> E0
    14:14:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    15:15:int android.support.v7.widget.RecyclerView$LayoutManager.getWidthMode():0:0 -> E0
    15:15:void measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean):0 -> E0
    15:15:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    16:16:void measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean):0:0 -> E0
    16:16:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    17:17:int android.support.v7.widget.RecyclerView$LayoutManager.getHeight():0:0 -> E0
    17:17:void measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean):0 -> E0
    17:17:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    18:18:int android.support.v7.widget.RecyclerView$LayoutManager.getHeightMode():0:0 -> E0
    18:18:void measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean):0 -> E0
    18:18:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    19:19:void measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean):0:0 -> E0
    19:19:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    20:20:int android.support.v7.widget.RecyclerView$LayoutManager.getWidth():0:0 -> E0
    20:20:void measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean):0 -> E0
    20:20:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    21:21:int android.support.v7.widget.RecyclerView$LayoutManager.getWidthMode():0:0 -> E0
    21:21:void measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean):0 -> E0
    21:21:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    22:22:void measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean):0:0 -> E0
    22:22:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    23:23:int android.support.v7.widget.RecyclerView$LayoutManager.getHeightMode():0:0 -> E0
    23:23:void measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean):0 -> E0
    23:23:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    24:24:void measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean):0:0 -> E0
    24:24:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    25:25:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0:0 -> E0
    26:26:void attachViewToSpans(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,android.support.v7.widget.LayoutState):0:0 -> E0
    26:26:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0 -> E0
    27:27:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State):0:0 -> E0
    android.view.View findFirstVisibleItemClosestToEnd(boolean) -> F0
    android.view.View findFirstVisibleItemClosestToStart(boolean) -> G0
    void fixEndGap(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> H0
    void fixStartGap(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> I0
    int getFirstChildPosition() -> J0
    int getLastChildPosition() -> K0
    int getMaxEnd(int) -> L0
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> M
    int getMinStart(int) -> M0
    void handleUpdate(int,int,int) -> N0
    boolean isAutoMeasureEnabled() -> O
    1:1:boolean checkSpanForGap(android.support.v7.widget.StaggeredGridLayoutManager$Span):0:0 -> O0
    1:1:android.view.View hasGapsToFix():0 -> O0
    2:2:int android.support.v7.widget.StaggeredGridLayoutManager$Span.getEndLine():0:0 -> O0
    2:2:boolean checkSpanForGap(android.support.v7.widget.StaggeredGridLayoutManager$Span):0 -> O0
    2:2:android.view.View hasGapsToFix():0 -> O0
    3:3:boolean checkSpanForGap(android.support.v7.widget.StaggeredGridLayoutManager$Span):0:0 -> O0
    3:3:android.view.View hasGapsToFix():0 -> O0
    4:4:int android.support.v7.widget.StaggeredGridLayoutManager$Span.getStartLine():0:0 -> O0
    4:4:boolean checkSpanForGap(android.support.v7.widget.StaggeredGridLayoutManager$Span):0 -> O0
    4:4:android.view.View hasGapsToFix():0 -> O0
    5:5:boolean checkSpanForGap(android.support.v7.widget.StaggeredGridLayoutManager$Span):0:0 -> O0
    5:5:android.view.View hasGapsToFix():0 -> O0
    6:6:android.view.View hasGapsToFix():0:0 -> O0
    boolean isLayoutRTL() -> P0
    1:1:void android.support.v7.widget.RecyclerView$LayoutManager.calculateItemDecorationsForChild(android.view.View,android.graphics.Rect):0:0 -> Q0
    1:1:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean):0 -> Q0
    2:2:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean):0:0 -> Q0
    1:1:void android.support.v7.widget.StaggeredGridLayoutManager$Span.onOffset(int):0:0 -> R
    1:1:void offsetChildrenHorizontal(int):0 -> R
    1:1:void applyPendingSavedState(android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0:0 -> R0
    1:1:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    2:2:void android.support.v7.widget.StaggeredGridLayoutManager$Span.setLine(int):0:0 -> R0
    2:2:void applyPendingSavedState(android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> R0
    2:2:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    3:3:void android.support.v7.widget.StaggeredGridLayoutManager$SavedState.invalidateSpanInfo():0:0 -> R0
    3:3:void applyPendingSavedState(android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> R0
    3:3:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    4:4:void applyPendingSavedState(android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0:0 -> R0
    4:4:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    5:5:void setReverseLayout(boolean):0:0 -> R0
    5:5:void applyPendingSavedState(android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> R0
    5:5:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    6:6:void applyPendingSavedState(android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0:0 -> R0
    6:6:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    7:7:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0:0 -> R0
    8:8:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> R0
    8:8:boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> R0
    8:8:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> R0
    8:8:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    9:9:boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0:0 -> R0
    9:9:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> R0
    9:9:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    10:10:int calculateScrollDirectionForPosition(int):0:0 -> R0
    10:10:boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> R0
    10:10:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> R0
    10:10:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    11:11:boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0:0 -> R0
    11:11:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> R0
    11:11:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    12:12:void android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo.assignCoordinateFromPadding(int):0:0 -> R0
    12:12:boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> R0
    12:12:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> R0
    12:12:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    13:13:boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0:0 -> R0
    13:13:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> R0
    13:13:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    14:14:boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0:0 -> R0
    14:14:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> R0
    14:14:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    15:15:int findLastReferenceChildPosition(int):0:0 -> R0
    15:15:boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> R0
    15:15:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> R0
    15:15:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    16:16:int findFirstReferenceChildPosition(int):0:0 -> R0
    16:16:boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> R0
    16:16:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> R0
    16:16:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    17:17:boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0:0 -> R0
    17:17:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> R0
    17:17:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    18:18:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0:0 -> R0
    19:19:void android.support.v7.widget.StaggeredGridLayoutManager$Span.setLine(int):0:0 -> R0
    19:19:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    20:20:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0:0 -> R0
    21:21:void android.support.v7.widget.StaggeredGridLayoutManager$Span.setLine(int):0:0 -> R0
    21:21:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    22:22:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0:0 -> R0
    23:23:void android.support.v7.widget.StaggeredGridLayoutManager$Span.cacheReferenceLineAndClear(boolean,int):0:0 -> R0
    23:23:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    24:24:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0:0 -> R0
    25:25:void android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo.saveSpanReferenceLines(android.support.v7.widget.StaggeredGridLayoutManager$Span[]):0:0 -> R0
    25:25:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    26:26:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0:0 -> R0
    27:27:void updateMeasureSpecs(int):0:0 -> R0
    27:27:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    28:28:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0:0 -> R0
    29:29:void repositionToWrapContentIfNecessary():0:0 -> R0
    29:29:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    30:30:void updateMeasureSpecs(int):0:0 -> R0
    30:30:void repositionToWrapContentIfNecessary():0 -> R0
    30:30:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    31:31:void repositionToWrapContentIfNecessary():0:0 -> R0
    31:31:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    32:32:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0:0 -> R0
    33:33:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> R0
    33:33:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    34:34:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0:0 -> R0
    35:35:boolean android.support.v7.widget.RecyclerView$LayoutManager.removeCallbacks(java.lang.Runnable):0:0 -> R0
    35:35:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    36:36:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0:0 -> R0
    37:37:boolean android.support.v7.widget.RecyclerView$State.isPreLayout():0:0 -> R0
    37:37:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0 -> R0
    38:38:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean):0:0 -> R0
    1:1:void android.support.v7.widget.StaggeredGridLayoutManager$Span.onOffset(int):0:0 -> S
    1:1:void offsetChildrenVertical(int):0 -> S
    boolean preferLastSpan(int) -> S0
    1:1:boolean android.support.v7.widget.RecyclerView$LayoutManager.removeCallbacks(java.lang.Runnable):0:0 -> T
    1:1:void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler):0 -> T
    2:2:void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler):0:0 -> T
    void prepareLayoutStateForDelta(int,android.support.v7.widget.RecyclerView$State) -> T0
    1:1:int convertFocusDirectionToLayoutDirection(int):0:0 -> U
    1:1:android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0 -> U
    2:2:android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State):0:0 -> U
    1:1:int getMaxStart(int):0:0 -> U0
    1:1:void recycle(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState):0 -> U0
    2:2:void recycle(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState):0:0 -> U0
    3:3:int getMinEnd(int):0:0 -> U0
    3:3:void recycle(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState):0 -> U0
    4:4:void recycle(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState):0:0 -> U0
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> V
    void recycleFromEnd(android.support.v7.widget.RecyclerView$Recycler,int) -> V0
    1:1:int android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams.getSpanIndex():0:0 -> W
    1:1:void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> W
    2:2:void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> W
    3:3:void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setCollectionItemInfo(java.lang.Object):0:0 -> W
    3:3:void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat):0 -> W
    void recycleFromStart(android.support.v7.widget.RecyclerView$Recycler,int) -> W0
    void resolveShouldLayoutReverse() -> X0
    void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> Y
    int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> Y0
    void onItemsChanged(android.support.v7.widget.RecyclerView) -> Z
    void setLayoutStateDirection(int) -> Z0
    void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> a0
    void updateAllRemainingSpans(int,int) -> a1
    void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> b0
    1:1:boolean android.support.v7.widget.RecyclerView$LayoutManager.getClipToPadding():0:0 -> b1
    1:1:void updateLayoutState(int,android.support.v7.widget.RecyclerView$State):0 -> b1
    2:2:void updateLayoutState(int,android.support.v7.widget.RecyclerView$State):0:0 -> b1
    1:1:void android.support.v7.widget.RecyclerView$LayoutManager.assertNotInLayoutOrScroll(java.lang.String):0:0 -> c
    1:1:void assertNotInLayoutOrScroll(java.lang.String):0 -> c
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int,java.lang.Object) -> c0
    1:1:int android.support.v7.widget.StaggeredGridLayoutManager$Span.getDeletedSize():0:0 -> c1
    1:1:void updateRemainingSpans(android.support.v7.widget.StaggeredGridLayoutManager$Span,int,int):0 -> c1
    2:2:int android.support.v7.widget.StaggeredGridLayoutManager$Span.getStartLine():0:0 -> c1
    2:2:void updateRemainingSpans(android.support.v7.widget.StaggeredGridLayoutManager$Span,int,int):0 -> c1
    3:3:int android.support.v7.widget.StaggeredGridLayoutManager$Span.getEndLine():0:0 -> c1
    3:3:void updateRemainingSpans(android.support.v7.widget.StaggeredGridLayoutManager$Span,int,int):0 -> c1
    4:4:void updateRemainingSpans(android.support.v7.widget.StaggeredGridLayoutManager$Span,int,int):0:0 -> c1
    boolean canScrollHorizontally() -> d
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> d0
    int updateSpecWithExtra(int,int,int) -> d1
    boolean canScrollVertically() -> e
    void onLayoutCompleted(android.support.v7.widget.RecyclerView$State) -> e0
    boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> f
    void onRestoreInstanceState(android.os.Parcelable) -> f0
    1:1:int findFirstVisibleItemPositionInt():0:0 -> g0
    1:1:android.os.Parcelable onSaveInstanceState():0 -> g0
    2:2:android.os.Parcelable onSaveInstanceState():0:0 -> g0
    1:1:boolean android.support.v7.widget.LayoutState.hasMore(android.support.v7.widget.RecyclerView$State):0:0 -> h
    1:1:void collectAdjacentPrefetchPositions(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry):0 -> h
    2:2:void collectAdjacentPrefetchPositions(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry):0:0 -> h
    void onScrollStateChanged(int) -> h0
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> j
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> k
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> l
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> m
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> n
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> o
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> p0
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> q0
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> s
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> t
    1:1:void android.support.v7.widget.RecyclerView$LayoutManager.setMeasuredDimension(int,int):0:0 -> t0
    1:1:void setMeasuredDimension(android.graphics.Rect,int,int):0 -> t0
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> u
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> y
    boolean supportsPredictiveItemAnimations() -> z0
android.support.v7.widget.StaggeredGridLayoutManager$1 -> android.support.v7.widget.StaggeredGridLayoutManager$a:
    android.support.v7.widget.StaggeredGridLayoutManager this$0 -> b
android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo -> android.support.v7.widget.StaggeredGridLayoutManager$b:
    int[] mSpanReferenceLines -> f
    android.support.v7.widget.StaggeredGridLayoutManager this$0 -> g
    boolean mValid -> e
    int mOffset -> b
    boolean mLayoutFromEnd -> c
    int mPosition -> a
    boolean mInvalidateOffsets -> d
    void assignCoordinateFromPadding() -> a
    void reset() -> b
android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams -> android.support.v7.widget.StaggeredGridLayoutManager$c:
    android.support.v7.widget.StaggeredGridLayoutManager$Span mSpan -> e
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup -> android.support.v7.widget.StaggeredGridLayoutManager$d:
    java.util.List mFullSpanItems -> b
    int[] mData -> a
    void clear() -> a
    1:1:int sizeForPosition(int):0:0 -> b
    1:1:void ensureSize(int):0 -> b
    2:2:void ensureSize(int):0:0 -> b
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> c
    1:1:int invalidateFullSpansAfter(int):0:0 -> d
    1:1:int invalidateAfter(int):0 -> d
    2:2:int invalidateAfter(int):0:0 -> d
    1:1:void offsetFullSpansForAddition(int,int):0:0 -> e
    1:1:void offsetForAddition(int,int):0 -> e
    1:1:void offsetFullSpansForRemoval(int,int):0:0 -> f
    1:1:void offsetForRemoval(int,int):0 -> f
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> android.support.v7.widget.StaggeredGridLayoutManager$d$a:
    int[] mGapPerSpan -> c
    int mGapDir -> b
    int mPosition -> a
    boolean mHasUnwantedGapAfter -> d
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> android.support.v7.widget.StaggeredGridLayoutManager$d$a$a:
    1:1:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
android.support.v7.widget.StaggeredGridLayoutManager$SavedState -> android.support.v7.widget.StaggeredGridLayoutManager$e:
    int[] mSpanLookup -> f
    boolean mAnchorLayoutFromEnd -> i
    boolean mLastLayoutRTL -> j
    int[] mSpanOffsets -> d
    int mSpanLookupSize -> e
    java.util.List mFullSpanItems -> g
    boolean mReverseLayout -> h
    int mVisibleAnchorPosition -> b
    int mSpanOffsetsSize -> c
    int mAnchorPosition -> a
android.support.v7.widget.StaggeredGridLayoutManager$SavedState$1 -> android.support.v7.widget.StaggeredGridLayoutManager$e$a:
    1:1:android.support.v7.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:android.support.v7.widget.StaggeredGridLayoutManager$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
android.support.v7.widget.StaggeredGridLayoutManager$Span -> android.support.v7.widget.StaggeredGridLayoutManager$f:
    android.support.v7.widget.StaggeredGridLayoutManager this$0 -> f
    int mDeletedSize -> d
    int mIndex -> e
    int mCachedStart -> b
    int mCachedEnd -> c
    java.util.ArrayList mViews -> a
    void appendToSpan(android.view.View) -> a
    void calculateCachedEnd() -> b
    void calculateCachedStart() -> c
    1:1:void invalidateCache():0:0 -> d
    1:1:void clear():0 -> d
    2:2:void clear():0:0 -> d
    int findFirstPartiallyVisibleItemPosition() -> e
    int findLastPartiallyVisibleItemPosition() -> f
    1:1:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean):0:0 -> g
    1:1:int findOnePartiallyVisibleChild(int,int,boolean):0 -> g
    int getEndLine(int) -> h
    android.view.View getFocusableViewAfter(int,int) -> i
    android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> j
    int getStartLine(int) -> k
    void popEnd() -> l
    void popStart() -> m
    void prependToSpan(android.view.View) -> n
android.support.v7.widget.SuggestionsAdapter -> s0.r0:
    android.content.res.ColorStateList mUrlColor -> s
    java.util.WeakHashMap mOutsideDrawablesCache -> p
    int $r8$clinit -> z
    android.support.v7.widget.SearchView mSearchView -> m
    android.content.Context mProviderContext -> o
    int mIconName2Col -> x
    int mFlagsCol -> y
    android.app.SearchableInfo mSearchable -> n
    int mText2UrlCol -> v
    int mIconName1Col -> w
    int mText1Col -> t
    int mText2Col -> u
    int mQueryRefinement -> r
    int mCommitIconResId -> q
    1:1:void android.support.v7.widget.SuggestionsAdapter.setViewText(android.widget.TextView,java.lang.CharSequence):0:0 -> a
    1:1:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    2:2:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> a
    3:3:java.lang.CharSequence android.support.v7.widget.SuggestionsAdapter.formatUrl(java.lang.CharSequence):0:0 -> a
    3:3:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    4:4:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> a
    5:5:void android.support.v7.widget.SuggestionsAdapter.setViewText(android.widget.TextView,java.lang.CharSequence):0:0 -> a
    5:5:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    6:6:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> a
    7:7:android.graphics.drawable.Drawable android.support.v7.widget.SuggestionsAdapter.getIcon1(android.database.Cursor):0:0 -> a
    7:7:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    8:8:android.graphics.drawable.Drawable android.support.v7.widget.SuggestionsAdapter.getDefaultIcon1(android.database.Cursor):0:0 -> a
    8:8:android.graphics.drawable.Drawable android.support.v7.widget.SuggestionsAdapter.getIcon1(android.database.Cursor):0 -> a
    8:8:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    9:9:android.graphics.drawable.Drawable android.support.v7.widget.SuggestionsAdapter.getActivityIconWithCache(android.content.ComponentName):0:0 -> a
    9:9:android.graphics.drawable.Drawable android.support.v7.widget.SuggestionsAdapter.getDefaultIcon1(android.database.Cursor):0 -> a
    9:9:android.graphics.drawable.Drawable android.support.v7.widget.SuggestionsAdapter.getIcon1(android.database.Cursor):0 -> a
    9:9:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    10:10:android.graphics.drawable.Drawable android.support.v7.widget.SuggestionsAdapter.getActivityIcon(android.content.ComponentName):0:0 -> a
    10:10:android.graphics.drawable.Drawable android.support.v7.widget.SuggestionsAdapter.getActivityIconWithCache(android.content.ComponentName):0 -> a
    10:10:android.graphics.drawable.Drawable android.support.v7.widget.SuggestionsAdapter.getDefaultIcon1(android.database.Cursor):0 -> a
    10:10:android.graphics.drawable.Drawable android.support.v7.widget.SuggestionsAdapter.getIcon1(android.database.Cursor):0 -> a
    10:10:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    11:11:android.graphics.drawable.Drawable android.support.v7.widget.SuggestionsAdapter.getActivityIconWithCache(android.content.ComponentName):0:0 -> a
    11:11:android.graphics.drawable.Drawable android.support.v7.widget.SuggestionsAdapter.getDefaultIcon1(android.database.Cursor):0 -> a
    11:11:android.graphics.drawable.Drawable android.support.v7.widget.SuggestionsAdapter.getIcon1(android.database.Cursor):0 -> a
    11:11:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    12:12:android.graphics.drawable.Drawable android.support.v7.widget.SuggestionsAdapter.getDefaultIcon1(android.database.Cursor):0:0 -> a
    12:12:android.graphics.drawable.Drawable android.support.v7.widget.SuggestionsAdapter.getIcon1(android.database.Cursor):0 -> a
    12:12:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    13:13:void android.support.v7.widget.SuggestionsAdapter.setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int):0:0 -> a
    13:13:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    14:14:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> a
    15:15:android.graphics.drawable.Drawable android.support.v7.widget.SuggestionsAdapter.getIcon2(android.database.Cursor):0:0 -> a
    15:15:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    16:16:void android.support.v7.widget.SuggestionsAdapter.setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int):0:0 -> a
    16:16:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    17:17:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> a
    void changeCursor(android.database.Cursor) -> b
    1:1:java.lang.String android.support.v7.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> c
    1:1:java.lang.CharSequence convertToString(android.database.Cursor):0 -> c
    2:2:java.lang.CharSequence convertToString(android.database.Cursor):0:0 -> c
    3:3:java.lang.String android.support.v7.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> c
    3:3:java.lang.CharSequence convertToString(android.database.Cursor):0 -> c
    4:4:java.lang.CharSequence convertToString(android.database.Cursor):0:0 -> c
    5:5:java.lang.String android.support.v7.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> c
    5:5:java.lang.CharSequence convertToString(android.database.Cursor):0 -> c
    1:1:android.view.View android.support.v4.widget.ResourceCursorAdapter.newView(android.content.Context,android.database.Cursor,android.view.ViewGroup):0:0 -> d
    1:1:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup):0 -> d
    2:2:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup):0:0 -> d
    android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> e
    1:1:android.graphics.drawable.Drawable android.support.v7.widget.SuggestionsAdapter.checkIconCache(java.lang.String):0:0 -> f
    1:1:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> f
    2:2:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0:0 -> f
    3:3:android.graphics.drawable.Drawable android.support.v4.content.ContextCompat.getDrawable(android.content.Context,int):0:0 -> f
    3:3:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> f
    4:4:void android.support.v7.widget.SuggestionsAdapter.storeInIconCache(java.lang.String,android.graphics.drawable.Drawable):0:0 -> f
    4:4:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> f
    5:5:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0:0 -> f
    6:6:android.graphics.drawable.Drawable android.support.v7.widget.SuggestionsAdapter.checkIconCache(java.lang.String):0:0 -> f
    6:6:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> f
    7:7:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0:0 -> f
    8:8:android.graphics.drawable.Drawable android.support.v7.widget.SuggestionsAdapter.getDrawable(android.net.Uri):0:0 -> f
    8:8:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> f
    9:9:void android.support.v7.widget.SuggestionsAdapter.storeInIconCache(java.lang.String,android.graphics.drawable.Drawable):0:0 -> f
    9:9:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> f
    android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> g
    1:1:android.view.View android.support.v4.widget.ResourceCursorAdapter.newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup):0:0 -> getDropDownView
    1:1:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup):0 -> getDropDownView
    2:2:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup):0:0 -> getDropDownView
    java.lang.String getStringOrNull(android.database.Cursor,int) -> h
    1:1:android.database.Cursor android.support.v4.widget.CursorAdapter.getCursor():0:0 -> notifyDataSetChanged
    1:1:void notifyDataSetChanged():0 -> notifyDataSetChanged
    2:2:void android.support.v7.widget.SuggestionsAdapter.updateSpinnerState(android.database.Cursor):0:0 -> notifyDataSetChanged
    2:2:void notifyDataSetChanged():0 -> notifyDataSetChanged
    1:1:android.database.Cursor android.support.v4.widget.CursorAdapter.getCursor():0:0 -> notifyDataSetInvalidated
    1:1:void notifyDataSetInvalidated():0 -> notifyDataSetInvalidated
    2:2:void android.support.v7.widget.SuggestionsAdapter.updateSpinnerState(android.database.Cursor):0:0 -> notifyDataSetInvalidated
    2:2:void notifyDataSetInvalidated():0 -> notifyDataSetInvalidated
android.support.v7.widget.SuggestionsAdapter$ChildViewCache -> s0.r0$a:
    android.widget.TextView mText1 -> a
    android.widget.TextView mText2 -> b
    android.widget.ImageView mIcon2 -> d
    android.widget.ImageView mIconRefine -> e
    android.widget.ImageView mIcon1 -> c
android.support.v7.widget.ThemeUtils -> s0.s0:
    int[] EMPTY_STATE_SET -> f
    int[] TEMP_ARRAY -> g
    java.lang.ThreadLocal TL_TYPED_VALUE -> a
    int[] DISABLED_STATE_SET -> b
    int[] FOCUSED_STATE_SET -> c
    int[] PRESSED_STATE_SET -> d
    int[] CHECKED_STATE_SET -> e
    1:1:android.util.TypedValue android.support.v7.widget.ThemeUtils.getTypedValue():0:0 -> a
    1:1:int getDisabledThemeAttrColor(android.content.Context,int):0 -> a
    2:2:int getDisabledThemeAttrColor(android.content.Context,int):0:0 -> a
    3:3:int android.support.v7.widget.ThemeUtils.getThemeAttrColor(android.content.Context,int,float):0:0 -> a
    3:3:int getDisabledThemeAttrColor(android.content.Context,int):0 -> a
    1:1:android.support.v7.widget.TintTypedArray android.support.v7.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]):0:0 -> b
    1:1:int getThemeAttrColor(android.content.Context,int):0 -> b
    2:2:int android.support.v7.widget.TintTypedArray.getColor(int,int):0:0 -> b
    2:2:int getThemeAttrColor(android.content.Context,int):0 -> b
    3:3:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> b
    3:3:int getThemeAttrColor(android.content.Context,int):0 -> b
    4:4:int getThemeAttrColor(android.content.Context,int):0:0 -> b
    1:1:android.support.v7.widget.TintTypedArray android.support.v7.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]):0:0 -> c
    1:1:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int):0 -> c
    2:2:android.content.res.ColorStateList android.support.v7.widget.TintTypedArray.getColorStateList(int):0:0 -> c
    2:2:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int):0 -> c
    3:3:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> c
    3:3:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int):0 -> c
    4:4:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int):0:0 -> c
android.support.v7.widget.ThemedSpinnerAdapter -> s0.t0:
android.support.v7.widget.TintContextWrapper -> s0.u0:
    java.lang.Object CACHE_LOCK -> a
    1:1:boolean android.support.v7.widget.TintContextWrapper.shouldWrap(android.content.Context):0:0 -> a
    1:1:android.content.Context wrap(android.content.Context):0 -> a
android.support.v7.widget.TintInfo -> s0.v0:
    android.content.res.ColorStateList mTintList -> a
    android.graphics.PorterDuff$Mode mTintMode -> b
    boolean mHasTintMode -> c
    boolean mHasTintList -> d
android.support.v7.widget.TintResources -> s0.w0:
android.support.v7.widget.TintTypedArray -> s0.x0:
    android.content.Context mContext -> a
    android.content.res.TypedArray mWrapped -> b
    android.util.TypedValue mTypedValue -> c
    boolean getBoolean(int,boolean) -> a
    int getColor(int,int) -> b
    android.content.res.ColorStateList getColorStateList(int) -> c
    int getDimensionPixelOffset(int,int) -> d
    int getDimensionPixelSize(int,int) -> e
    android.graphics.drawable.Drawable getDrawable(int) -> f
    android.graphics.drawable.Drawable getDrawableIfKnown(int) -> g
    1:1:android.graphics.Typeface android.support.v4.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,android.support.v4.content.res.ResourcesCompat$FontCallback):0:0 -> h
    1:1:android.graphics.Typeface getFont(int,int,android.support.v4.content.res.ResourcesCompat$FontCallback):0 -> h
    2:2:android.graphics.Typeface android.support.v4.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0:0 -> h
    2:2:android.graphics.Typeface android.support.v4.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,android.support.v4.content.res.ResourcesCompat$FontCallback):0 -> h
    2:2:android.graphics.Typeface getFont(int,int,android.support.v4.content.res.ResourcesCompat$FontCallback):0 -> h
    3:3:android.graphics.Typeface android.support.v4.content.res.ResourcesCompat.loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0:0 -> h
    3:3:android.graphics.Typeface android.support.v4.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> h
    3:3:android.graphics.Typeface android.support.v4.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,android.support.v4.content.res.ResourcesCompat$FontCallback):0 -> h
    3:3:android.graphics.Typeface getFont(int,int,android.support.v4.content.res.ResourcesCompat$FontCallback):0 -> h
    4:4:android.graphics.Typeface android.support.v4.graphics.TypefaceCompat.findFromCache(android.content.res.Resources,int,int):0:0 -> h
    4:4:android.graphics.Typeface android.support.v4.content.res.ResourcesCompat.loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> h
    4:4:android.graphics.Typeface android.support.v4.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> h
    4:4:android.graphics.Typeface android.support.v4.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,android.support.v4.content.res.ResourcesCompat$FontCallback):0 -> h
    4:4:android.graphics.Typeface getFont(int,int,android.support.v4.content.res.ResourcesCompat$FontCallback):0 -> h
    5:5:android.graphics.Typeface android.support.v4.content.res.ResourcesCompat.loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0:0 -> h
    5:5:android.graphics.Typeface android.support.v4.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> h
    5:5:android.graphics.Typeface android.support.v4.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,android.support.v4.content.res.ResourcesCompat$FontCallback):0 -> h
    5:5:android.graphics.Typeface getFont(int,int,android.support.v4.content.res.ResourcesCompat$FontCallback):0 -> h
    int getInt(int,int) -> i
    int getLayoutDimension(int,int) -> j
    int getResourceId(int,int) -> k
    java.lang.CharSequence getText(int) -> l
    boolean hasValue(int) -> m
    android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> n
android.support.v7.widget.Toolbar -> android.support.v7.widget.Toolbar:
    int mSubtitleTextAppearance -> n
    int mPopupTheme -> l
    android.graphics.drawable.Drawable mCollapseIcon -> g
    android.support.v7.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener -> H
    java.util.ArrayList mHiddenViews -> F
    android.content.Context mPopupContext -> k
    android.support.v7.widget.ToolbarWidgetWrapper mWrapper -> J
    java.lang.CharSequence mCollapseDescription -> h
    android.support.v7.widget.RtlSpacingHelper mContentInsets -> u
    int mTitleTextColor -> A
    int[] mTempMargins -> G
    android.support.v7.widget.ActionMenuView mMenuView -> b
    android.widget.TextView mSubtitleTextView -> d
    int mContentInsetEndWithActions -> w
    android.support.v7.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener -> I
    int mTitleMarginTop -> s
    java.lang.CharSequence mTitleText -> y
    boolean mEatingTouch -> C
    android.support.v7.widget.ActionMenuPresenter mOuterActionMenuPresenter -> K
    int mTitleMarginStart -> q
    java.lang.Runnable mShowOverflowMenuRunnable -> N
    boolean mCollapsible -> M
    int mButtonGravity -> o
    int mTitleTextAppearance -> m
    java.util.ArrayList mTempViews -> E
    int mSubtitleTextColor -> B
    android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> L
    android.widget.ImageView mLogoView -> f
    android.view.View mExpandedActionView -> j
    android.widget.TextView mTitleTextView -> c
    int mGravity -> x
    int mContentInsetStartWithNavigation -> v
    android.widget.ImageButton mCollapseButtonView -> i
    int mTitleMarginBottom -> t
    int mTitleMarginEnd -> r
    android.widget.ImageButton mNavButtonView -> e
    int mMaxButtonHeight -> p
    java.lang.CharSequence mSubtitleText -> z
    boolean mEatingHover -> D
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:int android.support.v7.widget.TintTypedArray.getInteger(int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    4:4:int android.support.v7.widget.TintTypedArray.getInteger(int,int):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    6:6:void android.support.v7.widget.RtlSpacingHelper.setAbsolute(int,int):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    8:8:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> a
    1:1:void addCustomViewsWithGravity(java.util.List,int):0 -> a
    2:2:void addCustomViewsWithGravity(java.util.List,int):0:0 -> a
    3:3:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> a
    3:3:void addCustomViewsWithGravity(java.util.List,int):0 -> a
    4:4:int android.support.v4.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> a
    4:4:void addCustomViewsWithGravity(java.util.List,int):0 -> a
    5:5:void addCustomViewsWithGravity(java.util.List,int):0:0 -> a
    void addSystemView(android.view.View,boolean) -> b
    void ensureContentInsets() -> c
    1:1:android.support.v7.view.menu.MenuBuilder android.support.v7.widget.ActionMenuView.peekMenu():0:0 -> d
    1:1:void ensureMenu():0 -> d
    2:2:void ensureMenu():0:0 -> d
    1:1:void android.support.v7.widget.ActionMenuView.<init>(android.content.Context):0:0 -> e
    1:1:void ensureMenuView():0 -> e
    2:2:void ensureMenuView():0:0 -> e
    3:3:void android.support.v7.widget.ActionMenuView.setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback):0:0 -> e
    3:3:void ensureMenuView():0 -> e
    4:4:void ensureMenuView():0:0 -> e
    void ensureNavButtonView() -> f
    android.support.v7.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> g
    1:1:android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> generateLayoutParams
    1:1:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> generateLayoutParams
    1:1:int android.support.v7.widget.RtlSpacingHelper.getEnd():0:0 -> getContentInsetEnd
    1:1:int getContentInsetEnd():0 -> getContentInsetEnd
    1:1:int android.support.v7.widget.RtlSpacingHelper.getLeft():0:0 -> getContentInsetLeft
    1:1:int getContentInsetLeft():0 -> getContentInsetLeft
    1:1:int android.support.v7.widget.RtlSpacingHelper.getRight():0:0 -> getContentInsetRight
    1:1:int getContentInsetRight():0 -> getContentInsetRight
    1:1:int android.support.v7.widget.RtlSpacingHelper.getStart():0:0 -> getContentInsetStart
    1:1:int getContentInsetStart():0 -> getContentInsetStart
    1:1:android.support.v7.view.menu.MenuBuilder android.support.v7.widget.ActionMenuView.peekMenu():0:0 -> getCurrentContentInsetEnd
    1:1:int getCurrentContentInsetEnd():0 -> getCurrentContentInsetEnd
    2:2:int getCurrentContentInsetEnd():0:0 -> getCurrentContentInsetEnd
    1:1:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> getCurrentContentInsetLeft
    1:1:int getCurrentContentInsetLeft():0 -> getCurrentContentInsetLeft
    2:2:int getCurrentContentInsetLeft():0:0 -> getCurrentContentInsetLeft
    1:1:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> getCurrentContentInsetRight
    1:1:int getCurrentContentInsetRight():0 -> getCurrentContentInsetRight
    2:2:int getCurrentContentInsetRight():0:0 -> getCurrentContentInsetRight
    android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> h
    1:1:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> i
    1:1:int getChildHorizontalGravity(int):0 -> i
    2:2:int android.support.v4.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> i
    2:2:int getChildHorizontalGravity(int):0 -> i
    1:1:int getChildVerticalGravity(int):0:0 -> j
    1:1:int getChildTop(android.view.View,int):0 -> j
    2:2:int getChildTop(android.view.View,int):0:0 -> j
    1:1:int android.support.v4.view.MarginLayoutParamsCompat.getMarginStart(android.view.ViewGroup$MarginLayoutParams):0:0 -> k
    1:1:int getHorizontalMargins(android.view.View):0 -> k
    2:2:int android.support.v4.view.MarginLayoutParamsCompat.getMarginEnd(android.view.ViewGroup$MarginLayoutParams):0:0 -> k
    2:2:int getHorizontalMargins(android.view.View):0 -> k
    int getVerticalMargins(android.view.View) -> l
    boolean isChildOrHidden(android.view.View) -> m
    1:1:boolean android.support.v7.widget.ActionMenuView.isOverflowMenuShowing():0:0 -> n
    1:1:boolean isOverflowMenuShowing():0 -> n
    int layoutChildLeft(android.view.View,int,int[],int) -> o
    1:1:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    3:3:int android.support.v4.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> onLayout
    3:3:void onLayout(boolean,int,int,int,int):0 -> onLayout
    4:4:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    5:5:int getViewListMeasuredWidth(java.util.List,int[]):0:0 -> onLayout
    5:5:void onLayout(boolean,int,int,int,int):0 -> onLayout
    6:6:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    1:1:boolean shouldCollapse():0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
    1:1:android.os.Parcelable android.support.v4.view.AbsSavedState.getSuperState():0:0 -> onRestoreInstanceState
    1:1:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    2:2:void onRestoreInstanceState(android.os.Parcelable):0:0 -> onRestoreInstanceState
    3:3:android.support.v7.view.menu.MenuBuilder android.support.v7.widget.ActionMenuView.peekMenu():0:0 -> onRestoreInstanceState
    3:3:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    4:4:void onRestoreInstanceState(android.os.Parcelable):0:0 -> onRestoreInstanceState
    5:5:void postShowOverflowMenu():0:0 -> onRestoreInstanceState
    5:5:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    1:1:void android.support.v7.widget.RtlSpacingHelper.setDirection(boolean):0:0 -> onRtlPropertiesChanged
    1:1:void onRtlPropertiesChanged(int):0 -> onRtlPropertiesChanged
    1:1:int android.support.v7.view.menu.MenuItemImpl.getItemId():0:0 -> onSaveInstanceState
    1:1:android.os.Parcelable onSaveInstanceState():0 -> onSaveInstanceState
    2:2:android.os.Parcelable onSaveInstanceState():0:0 -> onSaveInstanceState
    int layoutChildRight(android.view.View,int,int[],int) -> p
    int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> q
    void measureChildConstrained(android.view.View,int,int,int,int,int) -> r
    boolean shouldLayout(android.view.View) -> s
    1:1:void ensureLogoView():0:0 -> setLogo
    1:1:void setLogo(android.graphics.drawable.Drawable):0 -> setLogo
    2:2:void android.support.v7.widget.AppCompatImageView.<init>(android.content.Context):0:0 -> setLogo
    2:2:void ensureLogoView():0 -> setLogo
    2:2:void setLogo(android.graphics.drawable.Drawable):0 -> setLogo
    3:3:void ensureLogoView():0:0 -> setLogo
    3:3:void setLogo(android.graphics.drawable.Drawable):0 -> setLogo
    4:4:void setLogo(android.graphics.drawable.Drawable):0:0 -> setLogo
    1:1:void ensureLogoView():0:0 -> setLogoDescription
    1:1:void setLogoDescription(java.lang.CharSequence):0 -> setLogoDescription
    2:2:void android.support.v7.widget.AppCompatImageView.<init>(android.content.Context):0:0 -> setLogoDescription
    2:2:void ensureLogoView():0 -> setLogoDescription
    2:2:void setLogoDescription(java.lang.CharSequence):0 -> setLogoDescription
    3:3:void ensureLogoView():0:0 -> setLogoDescription
    3:3:void setLogoDescription(java.lang.CharSequence):0 -> setLogoDescription
    4:4:void setLogoDescription(java.lang.CharSequence):0:0 -> setLogoDescription
    1:1:void android.support.v7.widget.AppCompatTextView.<init>(android.content.Context):0:0 -> setSubtitle
    1:1:void setSubtitle(java.lang.CharSequence):0 -> setSubtitle
    2:2:void setSubtitle(java.lang.CharSequence):0:0 -> setSubtitle
    1:1:void android.support.v7.widget.AppCompatTextView.<init>(android.content.Context):0:0 -> setTitle
    1:1:void setTitle(java.lang.CharSequence):0 -> setTitle
    2:2:void setTitle(java.lang.CharSequence):0:0 -> setTitle
    1:1:boolean android.support.v7.widget.ActionMenuView.showOverflowMenu():0:0 -> t
    1:1:boolean showOverflowMenu():0 -> t
android.support.v7.widget.Toolbar$1 -> android.support.v7.widget.Toolbar$a:
    android.support.v7.widget.Toolbar this$0 -> a
android.support.v7.widget.Toolbar$2 -> android.support.v7.widget.Toolbar$b:
    android.support.v7.widget.Toolbar this$0 -> b
android.support.v7.widget.Toolbar$3 -> s0.y0:
    android.support.v7.widget.Toolbar this$0 -> b
    1:1:void android.support.v7.widget.Toolbar.collapseActionView():0:0 -> onClick
    1:1:void onClick(android.view.View):0 -> onClick
android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter -> android.support.v7.widget.Toolbar$c:
    android.support.v7.view.menu.MenuItemImpl mCurrentExpandedItem -> c
    android.support.v7.view.menu.MenuBuilder mMenu -> b
    android.support.v7.widget.Toolbar this$0 -> d
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> a
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> b
    1:1:void android.support.v7.widget.Toolbar.ensureCollapseButtonView():0:0 -> e
    1:1:boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl):0 -> e
    2:2:boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl):0:0 -> e
    3:3:void android.support.v7.widget.Toolbar.removeChildrenForExpandedActionView():0:0 -> e
    3:3:boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl):0 -> e
    4:4:boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl):0:0 -> e
    5:5:void android.support.v7.view.menu.MenuItemImpl.setActionViewExpanded(boolean):0:0 -> e
    5:5:boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl):0 -> e
    6:6:boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl):0:0 -> e
    boolean flagActionItems() -> g
    1:1:void android.support.v7.widget.Toolbar.addChildrenForExpandedActionView():0:0 -> h
    1:1:boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl):0 -> h
    2:2:boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl):0:0 -> h
    3:3:void android.support.v7.view.menu.MenuItemImpl.setActionViewExpanded(boolean):0:0 -> h
    3:3:boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl):0 -> h
    void updateMenuView(boolean) -> i
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> k
android.support.v7.widget.Toolbar$LayoutParams -> android.support.v7.widget.Toolbar$d:
    int mViewType -> b
    1:1:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams):0:0 -> <init>
    1:1:void <init>(android.view.ViewGroup$MarginLayoutParams):0 -> <init>
android.support.v7.widget.Toolbar$OnMenuItemClickListener -> android.support.v7.widget.Toolbar$e:
android.support.v7.widget.Toolbar$SavedState -> android.support.v7.widget.Toolbar$f:
    int expandedMenuItemId -> c
    boolean isOverflowOpen -> d
    1:1:void android.support.v4.view.AbsSavedState.writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
    1:1:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    2:2:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
android.support.v7.widget.Toolbar$SavedState$1 -> android.support.v7.widget.Toolbar$f$a:
    1:1:android.support.v7.widget.Toolbar$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    2:2:android.support.v7.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    2:2:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    1:1:android.support.v7.widget.Toolbar$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
android.support.v7.widget.ToolbarWidgetWrapper -> android.support.v7.widget.a0:
    boolean mMenuPrepared -> m
    int mDefaultNavigationContentDescription -> o
    android.graphics.drawable.Drawable mIcon -> e
    android.graphics.drawable.Drawable mLogo -> f
    android.view.Window$Callback mWindowCallback -> l
    android.graphics.drawable.Drawable mNavIcon -> g
    android.support.v7.widget.Toolbar mToolbar -> a
    int mDisplayOpts -> b
    java.lang.CharSequence mTitle -> i
    java.lang.CharSequence mSubtitle -> j
    java.lang.CharSequence mHomeDescription -> k
    android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter -> n
    android.view.View mTabView -> c
    boolean mTitleSet -> h
    android.view.View mCustomView -> d
    android.graphics.drawable.Drawable mDefaultNavigationIcon -> p
    1:1:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0:0 -> <init>
    1:1:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    2:2:void setTitle(java.lang.CharSequence):0:0 -> <init>
    2:2:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0 -> <init>
    2:2:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    3:3:void setTitleInt(java.lang.CharSequence):0:0 -> <init>
    3:3:void setTitle(java.lang.CharSequence):0 -> <init>
    3:3:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0 -> <init>
    3:3:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    4:4:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0:0 -> <init>
    4:4:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    5:5:void setSubtitle(java.lang.CharSequence):0:0 -> <init>
    5:5:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0 -> <init>
    5:5:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    6:6:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0:0 -> <init>
    6:6:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    7:7:void setLogo(android.graphics.drawable.Drawable):0:0 -> <init>
    7:7:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0 -> <init>
    7:7:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    8:8:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0:0 -> <init>
    8:8:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    9:9:void setIcon(android.graphics.drawable.Drawable):0:0 -> <init>
    9:9:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0 -> <init>
    9:9:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    10:10:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0:0 -> <init>
    10:10:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    11:11:void setNavigationIcon(android.graphics.drawable.Drawable):0:0 -> <init>
    11:11:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0 -> <init>
    11:11:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    12:12:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0:0 -> <init>
    12:12:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    13:13:void setCustomView(android.view.View):0:0 -> <init>
    13:13:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0 -> <init>
    13:13:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    14:14:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0:0 -> <init>
    14:14:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    15:15:void android.support.v7.widget.Toolbar.setContentInsetsRelative(int,int):0:0 -> <init>
    15:15:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0 -> <init>
    15:15:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    16:16:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0:0 -> <init>
    16:16:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    17:17:void android.support.v7.widget.Toolbar.setTitleTextAppearance(android.content.Context,int):0:0 -> <init>
    17:17:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0 -> <init>
    17:17:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    18:18:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0:0 -> <init>
    18:18:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    19:19:void android.support.v7.widget.Toolbar.setSubtitleTextAppearance(android.content.Context,int):0:0 -> <init>
    19:19:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0 -> <init>
    19:19:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    20:20:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0:0 -> <init>
    20:20:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    21:21:int detectDisplayOptions():0:0 -> <init>
    21:21:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0 -> <init>
    21:21:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    22:22:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0:0 -> <init>
    22:22:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    23:23:void android.support.v7.widget.TintTypedArray.recycle():0:0 -> <init>
    23:23:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0 -> <init>
    23:23:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    24:24:void setDefaultNavigationContentDescription(int):0:0 -> <init>
    24:24:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0 -> <init>
    24:24:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    25:25:void setNavigationContentDescription(int):0:0 -> <init>
    25:25:void setDefaultNavigationContentDescription(int):0 -> <init>
    25:25:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0 -> <init>
    25:25:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    26:26:void setNavigationContentDescription(java.lang.CharSequence):0:0 -> <init>
    26:26:void setNavigationContentDescription(int):0 -> <init>
    26:26:void setDefaultNavigationContentDescription(int):0 -> <init>
    26:26:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0 -> <init>
    26:26:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    27:27:void <init>(android.support.v7.widget.Toolbar,boolean,int,int):0:0 -> <init>
    27:27:void <init>(android.support.v7.widget.Toolbar,boolean):0 -> <init>
    boolean showOverflowMenu() -> a
    1:1:boolean android.support.v7.widget.Toolbar.isOverflowMenuShowPending():0:0 -> b
    1:1:boolean isOverflowMenuShowPending():0 -> b
    2:2:boolean android.support.v7.widget.ActionMenuView.isOverflowMenuShowPending():0:0 -> b
    2:2:boolean android.support.v7.widget.Toolbar.isOverflowMenuShowPending():0 -> b
    2:2:boolean isOverflowMenuShowPending():0 -> b
    3:3:boolean android.support.v7.widget.ActionMenuPresenter.isOverflowMenuShowPending():0:0 -> b
    3:3:boolean android.support.v7.widget.ActionMenuView.isOverflowMenuShowPending():0 -> b
    3:3:boolean android.support.v7.widget.Toolbar.isOverflowMenuShowPending():0 -> b
    3:3:boolean isOverflowMenuShowPending():0 -> b
    void setMenuPrepared() -> c
    1:1:void android.support.v7.widget.Toolbar.collapseActionView():0:0 -> collapseActionView
    1:1:void collapseActionView():0 -> collapseActionView
    boolean isOverflowMenuShowing() -> d
    1:1:boolean android.support.v7.widget.Toolbar.canShowOverflowMenu():0:0 -> e
    1:1:boolean canShowOverflowMenu():0 -> e
    2:2:boolean android.support.v7.widget.ActionMenuView.isOverflowReserved():0:0 -> e
    2:2:boolean android.support.v7.widget.Toolbar.canShowOverflowMenu():0 -> e
    2:2:boolean canShowOverflowMenu():0 -> e
    1:1:void android.support.v7.view.menu.BaseMenuPresenter.setCallback(android.support.v7.view.menu.MenuPresenter$Callback):0:0 -> f
    1:1:void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback):0 -> f
    2:2:void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback):0:0 -> f
    3:3:void android.support.v7.widget.Toolbar.setMenu(android.support.v7.view.menu.MenuBuilder,android.support.v7.widget.ActionMenuPresenter):0:0 -> f
    3:3:void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback):0 -> f
    4:4:android.support.v7.view.menu.MenuBuilder android.support.v7.widget.ActionMenuView.peekMenu():0:0 -> f
    4:4:void android.support.v7.widget.Toolbar.setMenu(android.support.v7.view.menu.MenuBuilder,android.support.v7.widget.ActionMenuPresenter):0 -> f
    4:4:void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback):0 -> f
    5:5:void android.support.v7.widget.Toolbar.setMenu(android.support.v7.view.menu.MenuBuilder,android.support.v7.widget.ActionMenuPresenter):0:0 -> f
    5:5:void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback):0 -> f
    6:6:void android.support.v7.widget.ActionMenuPresenter.setExpandedActionViewsExclusive(boolean):0:0 -> f
    6:6:void android.support.v7.widget.Toolbar.setMenu(android.support.v7.view.menu.MenuBuilder,android.support.v7.widget.ActionMenuPresenter):0 -> f
    6:6:void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback):0 -> f
    7:7:void android.support.v7.widget.Toolbar.setMenu(android.support.v7.view.menu.MenuBuilder,android.support.v7.widget.ActionMenuPresenter):0:0 -> f
    7:7:void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback):0 -> f
    8:8:void android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter.initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder):0:0 -> f
    8:8:void android.support.v7.widget.Toolbar.setMenu(android.support.v7.view.menu.MenuBuilder,android.support.v7.widget.ActionMenuPresenter):0 -> f
    8:8:void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback):0 -> f
    9:9:void android.support.v7.widget.Toolbar.setMenu(android.support.v7.view.menu.MenuBuilder,android.support.v7.widget.ActionMenuPresenter):0:0 -> f
    9:9:void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback):0 -> f
    1:1:boolean android.support.v7.widget.Toolbar.hideOverflowMenu():0:0 -> g
    1:1:boolean hideOverflowMenu():0 -> g
    2:2:boolean android.support.v7.widget.ActionMenuView.hideOverflowMenu():0:0 -> g
    2:2:boolean android.support.v7.widget.Toolbar.hideOverflowMenu():0 -> g
    2:2:boolean hideOverflowMenu():0 -> g
    1:1:void android.support.v7.widget.Toolbar.dismissPopupMenus():0:0 -> h
    1:1:void dismissPopupMenus():0 -> h
    2:2:void android.support.v7.widget.ActionMenuView.dismissPopupMenus():0:0 -> h
    2:2:void android.support.v7.widget.Toolbar.dismissPopupMenus():0 -> h
    2:2:void dismissPopupMenus():0 -> h
    void setEmbeddedTabView(android.support.v7.widget.ScrollingTabContainerView) -> i
    1:1:android.support.v4.view.ViewPropertyAnimatorCompat android.support.v4.view.ViewPropertyAnimatorCompat.setListener(android.support.v4.view.ViewPropertyAnimatorListener):0:0 -> j
    1:1:android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long):0 -> j
    int getDisplayOptions() -> k
    void setVisibility(int) -> l
    void initProgress() -> m
    1:1:boolean android.support.v7.widget.Toolbar.hasExpandedActionView():0:0 -> n
    1:1:boolean hasExpandedActionView():0 -> n
    1:1:void setLogo(android.graphics.drawable.Drawable):0:0 -> o
    1:1:void setLogo(int):0 -> o
    android.view.ViewGroup getViewGroup() -> p
    void setHomeButtonEnabled(boolean) -> q
    void initIndeterminateProgress() -> r
    void setCollapsible(boolean) -> s
    1:1:void setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
    1:1:void setIcon(int):0 -> setIcon
    1:1:void setTitleInt(java.lang.CharSequence):0:0 -> setWindowTitle
    1:1:void setWindowTitle(java.lang.CharSequence):0 -> setWindowTitle
    android.content.Context getContext() -> t
    void setDisplayOptions(int) -> u
    int getNavigationMode() -> v
    void updateHomeAccessibility() -> w
    void updateNavigationIcon() -> x
    void updateToolbarLogo() -> y
android.support.v7.widget.ToolbarWidgetWrapper$1 -> s0.z0:
    android.support.v7.view.menu.ActionMenuItem mNavItem -> b
    android.support.v7.widget.ToolbarWidgetWrapper this$0 -> c
android.support.v7.widget.ToolbarWidgetWrapper$2 -> android.support.v7.widget.a0$a:
    android.support.v7.widget.ToolbarWidgetWrapper this$0 -> c
    boolean mCanceled -> a
    int val$visibility -> b
    void onAnimationEnd(android.view.View) -> a
    void onAnimationStart(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v7.widget.TooltipCompat -> s0.a1:
    1:1:void android.support.v7.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence):0:0 -> a
    1:1:void setTooltipText(android.view.View,java.lang.CharSequence):0 -> a
android.support.v7.widget.TooltipCompatHandler -> s0.b1:
    java.lang.Runnable mShowRunnable -> e
    android.support.v7.widget.TooltipPopup mPopup -> i
    boolean mFromTouch -> j
    int mAnchorY -> h
    java.lang.CharSequence mTooltipText -> c
    java.lang.Runnable mHideRunnable -> f
    android.support.v7.widget.TooltipCompatHandler sPendingHandler -> k
    int mAnchorX -> g
    android.support.v7.widget.TooltipCompatHandler sActiveHandler -> l
    int mHoverSlop -> d
    android.view.View mAnchor -> b
    1:1:int android.support.v4.view.ViewConfigurationCompat.getScaledHoverSlop(android.view.ViewConfiguration):0:0 -> <init>
    1:1:void <init>(android.view.View,java.lang.CharSequence):0 -> <init>
    2:2:void <init>(android.view.View,java.lang.CharSequence):0:0 -> <init>
    void clearAnchorPos() -> a
    void hide() -> b
    1:1:void android.support.v7.widget.TooltipCompatHandler.cancelPendingShow():0:0 -> c
    1:1:void setPendingHandler(android.support.v7.widget.TooltipCompatHandler):0 -> c
    2:2:void setPendingHandler(android.support.v7.widget.TooltipCompatHandler):0:0 -> c
    3:3:void android.support.v7.widget.TooltipCompatHandler.scheduleShow():0:0 -> c
    3:3:void setPendingHandler(android.support.v7.widget.TooltipCompatHandler):0 -> c
    1:1:boolean android.support.v4.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> d
    1:1:void show(boolean):0 -> d
    2:2:void show(boolean):0:0 -> d
    3:3:boolean android.support.v7.widget.TooltipPopup.isShowing():0:0 -> d
    3:3:void android.support.v7.widget.TooltipPopup.show(android.view.View,int,int,boolean,java.lang.CharSequence):0 -> d
    3:3:void show(boolean):0 -> d
    4:4:void android.support.v7.widget.TooltipPopup.show(android.view.View,int,int,boolean,java.lang.CharSequence):0:0 -> d
    4:4:void show(boolean):0 -> d
    5:5:void android.support.v7.widget.TooltipPopup.computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams):0:0 -> d
    5:5:void android.support.v7.widget.TooltipPopup.show(android.view.View,int,int,boolean,java.lang.CharSequence):0 -> d
    5:5:void show(boolean):0 -> d
    6:6:android.view.View android.support.v7.widget.TooltipPopup.getAppRootView(android.view.View):0:0 -> d
    6:6:void android.support.v7.widget.TooltipPopup.computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams):0 -> d
    6:6:void android.support.v7.widget.TooltipPopup.show(android.view.View,int,int,boolean,java.lang.CharSequence):0 -> d
    6:6:void show(boolean):0 -> d
    7:7:void android.support.v7.widget.TooltipPopup.computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams):0:0 -> d
    7:7:void android.support.v7.widget.TooltipPopup.show(android.view.View,int,int,boolean,java.lang.CharSequence):0 -> d
    7:7:void show(boolean):0 -> d
    8:8:void android.support.v7.widget.TooltipPopup.show(android.view.View,int,int,boolean,java.lang.CharSequence):0:0 -> d
    8:8:void show(boolean):0 -> d
    9:9:void show(boolean):0:0 -> d
    10:10:int android.support.v4.view.ViewCompat.getWindowSystemUiVisibility(android.view.View):0:0 -> d
    10:10:void show(boolean):0 -> d
    11:11:void show(boolean):0:0 -> d
    1:1:boolean android.support.v7.widget.TooltipCompatHandler.updateAnchorPos(android.view.MotionEvent):0:0 -> onHover
    1:1:boolean onHover(android.view.View,android.view.MotionEvent):0 -> onHover
    2:2:boolean onHover(android.view.View,android.view.MotionEvent):0:0 -> onHover
android.support.v7.widget.TooltipCompatHandler$1 -> s0.b1$a:
    android.support.v7.widget.TooltipCompatHandler this$0 -> b
android.support.v7.widget.TooltipCompatHandler$2 -> s0.b1$b:
    android.support.v7.widget.TooltipCompatHandler this$0 -> b
android.support.v7.widget.TooltipPopup -> s0.c1:
    android.content.Context mContext -> a
    int[] mTmpAnchorPos -> f
    int[] mTmpAppPos -> g
    android.widget.TextView mMessageView -> c
    android.graphics.Rect mTmpDisplayFrame -> e
    android.view.View mContentView -> b
    android.view.WindowManager$LayoutParams mLayoutParams -> d
    1:1:boolean android.support.v7.widget.TooltipPopup.isShowing():0:0 -> a
    1:1:void hide():0 -> a
    2:2:void hide():0:0 -> a
android.support.v7.widget.VectorEnabledTintResources -> s0.d1:
    int $r8$clinit -> a
android.support.v7.widget.ViewBoundsCheck -> android.support.v7.widget.b0:
    android.support.v7.widget.ViewBoundsCheck$Callback mCallback -> a
    android.support.v7.widget.ViewBoundsCheck$BoundFlags mBoundFlags -> b
    1:1:void android.support.v7.widget.ViewBoundsCheck$BoundFlags.setBounds(int,int,int,int):0:0 -> a
    1:1:android.view.View findOneViewWithinBoundFlags(int,int,int,int):0 -> a
    2:2:void android.support.v7.widget.ViewBoundsCheck$BoundFlags.resetFlags():0:0 -> a
    2:2:android.view.View findOneViewWithinBoundFlags(int,int,int,int):0 -> a
    3:3:void android.support.v7.widget.ViewBoundsCheck$BoundFlags.addFlags(int):0:0 -> a
    3:3:android.view.View findOneViewWithinBoundFlags(int,int,int,int):0 -> a
    4:4:android.view.View findOneViewWithinBoundFlags(int,int,int,int):0:0 -> a
    5:5:void android.support.v7.widget.ViewBoundsCheck$BoundFlags.resetFlags():0:0 -> a
    5:5:android.view.View findOneViewWithinBoundFlags(int,int,int,int):0 -> a
    6:6:void android.support.v7.widget.ViewBoundsCheck$BoundFlags.addFlags(int):0:0 -> a
    6:6:android.view.View findOneViewWithinBoundFlags(int,int,int,int):0 -> a
    7:7:android.view.View findOneViewWithinBoundFlags(int,int,int,int):0:0 -> a
    1:1:void android.support.v7.widget.ViewBoundsCheck$BoundFlags.setBounds(int,int,int,int):0:0 -> b
    1:1:boolean isViewWithinBoundFlags(android.view.View,int):0 -> b
    2:2:boolean isViewWithinBoundFlags(android.view.View,int):0:0 -> b
    3:3:void android.support.v7.widget.ViewBoundsCheck$BoundFlags.resetFlags():0:0 -> b
    3:3:boolean isViewWithinBoundFlags(android.view.View,int):0 -> b
    4:4:void android.support.v7.widget.ViewBoundsCheck$BoundFlags.addFlags(int):0:0 -> b
    4:4:boolean isViewWithinBoundFlags(android.view.View,int):0 -> b
    5:5:boolean isViewWithinBoundFlags(android.view.View,int):0:0 -> b
android.support.v7.widget.ViewBoundsCheck$BoundFlags -> android.support.v7.widget.b0$a:
    int mChildStart -> d
    int mChildEnd -> e
    int mRvStart -> b
    int mRvEnd -> c
    int mBoundFlags -> a
    boolean boundsMatch() -> a
    int compare(int,int) -> b
android.support.v7.widget.ViewBoundsCheck$Callback -> android.support.v7.widget.b0$b:
    int getParentEnd() -> a
    int getParentStart() -> b
    int getChildEnd(android.view.View) -> c
    int getChildStart(android.view.View) -> d
    android.view.View getChildAt(int) -> e
android.support.v7.widget.ViewInfoStore -> android.support.v7.widget.c0:
    android.support.v4.util.ArrayMap mLayoutHolderMap -> a
    android.support.v4.util.LongSparseArray mOldChangedHolders -> b
    void addToDisappearedInLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void addToPostLayout(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    void addToPreLayout(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> c
    boolean isDisappearing(android.support.v7.widget.RecyclerView$ViewHolder) -> d
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(android.support.v7.widget.RecyclerView$ViewHolder,int) -> e
    void removeFromDisappearedInLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> f
    1:1:void android.support.v4.util.LongSparseArray.removeAt(int):0:0 -> g
    1:1:void removeViewHolder(android.support.v7.widget.RecyclerView$ViewHolder):0 -> g
    2:2:void removeViewHolder(android.support.v7.widget.RecyclerView$ViewHolder):0:0 -> g
android.support.v7.widget.ViewInfoStore$InfoRecord -> android.support.v7.widget.c0$a:
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo preInfo -> b
    android.support.v4.util.Pools$Pool sPool -> d
    int flags -> a
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo postInfo -> c
    android.support.v7.widget.ViewInfoStore$InfoRecord obtain() -> a
    void recycle(android.support.v7.widget.ViewInfoStore$InfoRecord) -> b
android.support.v7.widget.ViewInfoStore$ProcessCallback -> android.support.v7.widget.c0$b:
android.support.v7.widget.ViewStubCompat -> android.support.v7.widget.ViewStubCompat:
    android.view.LayoutInflater mInflater -> e
    java.lang.ref.WeakReference mInflatedViewRef -> d
    android.support.v7.widget.ViewStubCompat$OnInflateListener mInflateListener -> f
    int mLayoutResource -> b
    int mInflatedId -> c
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    android.view.View inflate() -> a
android.support.v7.widget.ViewStubCompat$OnInflateListener -> android.support.v7.widget.ViewStubCompat$a:
    void onInflate(android.support.v7.widget.ViewStubCompat,android.view.View) -> a
android.support.v7.widget.ViewUtils -> s0.e1:
    java.lang.reflect.Method sComputeFitSystemWindowsMethod -> a
    void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> a
    1:1:int android.support.v4.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> b
    1:1:boolean isLayoutRtl(android.view.View):0 -> b
android.support.v7.widget.WithHint -> s0.f1:
    java.lang.CharSequence getHint() -> a
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    1:1:byte[] androidx.versionedparcelable.VersionedParcel.readByteArray(byte[],int):0:0 -> read
    1:1:android.support.v4.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    2:2:android.support.v4.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    3:3:android.os.Parcelable androidx.versionedparcelable.VersionedParcel.readParcelable(android.os.Parcelable,int):0:0 -> read
    3:3:android.support.v4.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    4:4:android.support.v4.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    5:5:android.os.Parcelable androidx.versionedparcelable.VersionedParcel.readParcelable(android.os.Parcelable,int):0:0 -> read
    5:5:android.support.v4.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    6:6:android.support.v4.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    7:7:java.lang.String androidx.versionedparcelable.VersionedParcel.readString(java.lang.String,int):0:0 -> read
    7:7:android.support.v4.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    8:8:android.support.v4.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    9:9:void android.support.v4.graphics.drawable.IconCompat.onPostParceling():0:0 -> read
    9:9:android.support.v4.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    1:1:void android.support.v4.graphics.drawable.IconCompat.onPreParceling(boolean):0:0 -> write
    1:1:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    2:2:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    3:3:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0:0 -> write
    3:3:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    4:4:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    5:5:void androidx.versionedparcelable.VersionedParcel.writeByteArray(byte[],int):0:0 -> write
    5:5:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    6:6:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    7:7:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0:0 -> write
    7:7:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    8:8:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    9:9:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0:0 -> write
    9:9:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    10:10:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    11:11:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0:0 -> write
    11:11:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    12:12:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    13:13:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0:0 -> write
    13:13:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    14:14:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    15:15:void androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String,int):0:0 -> write
    15:15:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    androidx.versionedparcelable.VersionedParcelable mParcel -> a
    1:1:void androidx.versionedparcelable.VersionedParcelParcel.<init>(android.os.Parcel):0:0 -> <init>
    1:1:void <init>(android.os.Parcel):0 -> <init>
    2:2:void androidx.versionedparcelable.VersionedParcelParcel.<init>(android.os.Parcel,int,int,java.lang.String):0:0 -> <init>
    2:2:void androidx.versionedparcelable.VersionedParcelParcel.<init>(android.os.Parcel):0 -> <init>
    2:2:void <init>(android.os.Parcel):0 -> <init>
    3:3:java.lang.String androidx.versionedparcelable.VersionedParcelParcel.readString():0:0 -> <init>
    3:3:androidx.versionedparcelable.VersionedParcelable androidx.versionedparcelable.VersionedParcel.readVersionedParcelable():0 -> <init>
    3:3:void <init>(android.os.Parcel):0 -> <init>
    4:4:androidx.versionedparcelable.VersionedParcel androidx.versionedparcelable.VersionedParcelParcel.createSubParcel():0:0 -> <init>
    4:4:androidx.versionedparcelable.VersionedParcelable androidx.versionedparcelable.VersionedParcel.readVersionedParcelable():0 -> <init>
    4:4:void <init>(android.os.Parcel):0 -> <init>
    5:5:androidx.versionedparcelable.VersionedParcelable androidx.versionedparcelable.VersionedParcel.readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel):0:0 -> <init>
    5:5:androidx.versionedparcelable.VersionedParcelable androidx.versionedparcelable.VersionedParcel.readVersionedParcelable():0 -> <init>
    5:5:void <init>(android.os.Parcel):0 -> <init>
    6:6:void <init>(android.os.Parcel):0:0 -> <init>
    7:7:androidx.versionedparcelable.VersionedParcelable androidx.versionedparcelable.VersionedParcel.readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel):0:0 -> <init>
    7:7:androidx.versionedparcelable.VersionedParcelable androidx.versionedparcelable.VersionedParcel.readVersionedParcelable():0 -> <init>
    7:7:void <init>(android.os.Parcel):0 -> <init>
    1:1:void androidx.versionedparcelable.VersionedParcelParcel.<init>(android.os.Parcel):0:0 -> writeToParcel
    1:1:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    2:2:void androidx.versionedparcelable.VersionedParcelParcel.<init>(android.os.Parcel,int,int,java.lang.String):0:0 -> writeToParcel
    2:2:void androidx.versionedparcelable.VersionedParcelParcel.<init>(android.os.Parcel):0 -> writeToParcel
    2:2:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    3:3:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
    4:4:void androidx.versionedparcelable.VersionedParcelParcel.writeString(java.lang.String):0:0 -> writeToParcel
    4:4:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> writeToParcel
    4:4:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    5:5:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0:0 -> writeToParcel
    5:5:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> writeToParcel
    5:5:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    6:6:void androidx.versionedparcelable.VersionedParcelParcel.writeString(java.lang.String):0:0 -> writeToParcel
    6:6:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0 -> writeToParcel
    6:6:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> writeToParcel
    6:6:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    7:7:androidx.versionedparcelable.VersionedParcel androidx.versionedparcelable.VersionedParcelParcel.createSubParcel():0:0 -> writeToParcel
    7:7:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> writeToParcel
    7:7:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    8:8:java.lang.Class androidx.versionedparcelable.VersionedParcel.findParcelClass(androidx.versionedparcelable.VersionedParcelable):0:0 -> writeToParcel
    8:8:void androidx.versionedparcelable.VersionedParcel.writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel):0 -> writeToParcel
    8:8:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> writeToParcel
    8:8:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    9:9:void androidx.versionedparcelable.VersionedParcel.writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel):0:0 -> writeToParcel
    9:9:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> writeToParcel
    9:9:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    10:10:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0:0 -> writeToParcel
    10:10:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    11:11:void androidx.versionedparcelable.VersionedParcel.writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel):0:0 -> writeToParcel
    11:11:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> writeToParcel
    11:11:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    12:12:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0:0 -> writeToParcel
    12:12:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> writeToParcel
    12:12:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$a:
    1:1:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.versionedparcelable.ParcelImpl[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.versionedparcelable.VersionedParcel -> t0.a:
    java.lang.Class findParcelClass(java.lang.Class) -> a
    byte[] readByteArray() -> b
    boolean readField(int) -> c
    int readInt() -> d
    int readInt(int,int) -> e
    android.os.Parcelable readParcelable() -> f
    java.lang.String readString() -> g
    void setOutputField(int) -> h
    void writeByteArray(byte[]) -> i
    void writeInt(int) -> j
    void writeParcelable(android.os.Parcelable) -> k
    void writeString(java.lang.String) -> l
androidx.versionedparcelable.VersionedParcelParcel -> t0.b:
    android.util.SparseIntArray mPositionLookup -> a
    android.os.Parcel mParcel -> b
    int mCurrentField -> f
    int mNextRead -> g
    int mEnd -> d
    int mOffset -> c
    java.lang.String mPrefix -> e
    byte[] readByteArray() -> b
    1:1:int androidx.versionedparcelable.VersionedParcelParcel.readUntilField(int):0:0 -> c
    1:1:boolean readField(int):0 -> c
    2:2:boolean readField(int):0:0 -> c
    int readInt() -> d
    android.os.Parcelable readParcelable() -> f
    java.lang.String readString() -> g
    1:1:void androidx.versionedparcelable.VersionedParcelParcel.writeInt(int):0:0 -> h
    1:1:void setOutputField(int):0 -> h
    void writeByteArray(byte[]) -> i
    void writeInt(int) -> j
    void writeParcelable(android.os.Parcelable) -> k
    void writeString(java.lang.String) -> l
    void closeField() -> m
androidx.versionedparcelable.VersionedParcelable -> t0.c:
b.SafeIterableMap$$ExternalSyntheticOutline0 -> b.b:
    java.lang.StringBuilder android.arch.core.internal.SafeIterableMap$$InternalSyntheticOutline$95$f0e040594a8a7bd97aa796f70bb6d9d879e43527b49798233885769e25e18002$0.m(java.lang.String) -> a
c.ViewModelProvider$$ExternalSyntheticOutline0 -> c.l:
    java.lang.String android.arch.lifecycle.ViewModelProvider$$InternalSyntheticOutline$95$f301b6d0c62f29c6fe8c465e32b554dbce623c64b3dbef151223444218f2f9b5$0.m(java.lang.String,java.lang.String) -> a
com.cleanup.todoc.database.TodocDatabase -> com.cleanup.todoc.database.TodocDatabase:
    com.cleanup.todoc.database.TodocDatabase INSTANCE -> g
    1:1:android.arch.persistence.room.RoomDatabase$Builder android.arch.persistence.room.Room.databaseBuilder(android.content.Context,java.lang.Class,java.lang.String):0:0 -> h
    1:1:com.cleanup.todoc.database.TodocDatabase getInstance(android.content.Context):0 -> h
    2:2:android.arch.persistence.room.RoomDatabase$Callback prepopulateDatabase():0:0 -> h
    2:2:com.cleanup.todoc.database.TodocDatabase getInstance(android.content.Context):0 -> h
    3:3:android.arch.persistence.room.RoomDatabase$Builder android.arch.persistence.room.RoomDatabase$Builder.addCallback(android.arch.persistence.room.RoomDatabase$Callback):0:0 -> h
    3:3:com.cleanup.todoc.database.TodocDatabase getInstance(android.content.Context):0 -> h
    4:4:com.cleanup.todoc.database.TodocDatabase getInstance(android.content.Context):0:0 -> h
    com.cleanup.todoc.database.dao.ProjectDao projectDao() -> i
    com.cleanup.todoc.database.dao.TaskDao taskDao() -> j
com.cleanup.todoc.database.TodocDatabase$1 -> u0.a:
    1:1:long android.arch.persistence.db.framework.FrameworkSQLiteDatabase.insert(java.lang.String,int,android.content.ContentValues):0:0 -> a
    1:1:void onCreate(android.arch.persistence.db.SupportSQLiteDatabase):0 -> a
    2:2:void onCreate(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> a
    3:3:long android.arch.persistence.db.framework.FrameworkSQLiteDatabase.insert(java.lang.String,int,android.content.ContentValues):0:0 -> a
    3:3:void onCreate(android.arch.persistence.db.SupportSQLiteDatabase):0 -> a
    4:4:void onCreate(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> a
    5:5:long android.arch.persistence.db.framework.FrameworkSQLiteDatabase.insert(java.lang.String,int,android.content.ContentValues):0:0 -> a
    5:5:void onCreate(android.arch.persistence.db.SupportSQLiteDatabase):0 -> a
com.cleanup.todoc.database.TodocDatabase_Impl -> com.cleanup.todoc.database.TodocDatabase_Impl:
    com.cleanup.todoc.database.dao.TaskDao _taskDao -> i
    com.cleanup.todoc.database.dao.ProjectDao _projectDao -> h
    android.arch.persistence.room.InvalidationTracker createInvalidationTracker() -> c
    1:1:android.arch.persistence.db.SupportSQLiteOpenHelper android.arch.persistence.db.framework.FrameworkSQLiteOpenHelperFactory.create(android.arch.persistence.db.SupportSQLiteOpenHelper$Configuration):0:0 -> d
    1:1:android.arch.persistence.db.SupportSQLiteOpenHelper createOpenHelper(android.arch.persistence.room.DatabaseConfiguration):0 -> d
    2:2:android.arch.persistence.db.SupportSQLiteOpenHelper$Configuration android.arch.persistence.db.SupportSQLiteOpenHelper$Configuration$Builder.build():0:0 -> d
    2:2:android.arch.persistence.db.SupportSQLiteOpenHelper createOpenHelper(android.arch.persistence.room.DatabaseConfiguration):0 -> d
    com.cleanup.todoc.database.dao.ProjectDao projectDao() -> i
    com.cleanup.todoc.database.dao.TaskDao taskDao() -> j
com.cleanup.todoc.database.TodocDatabase_Impl$1 -> com.cleanup.todoc.database.TodocDatabase_Impl$a:
    com.cleanup.todoc.database.TodocDatabase_Impl this$0 -> b
    1:1:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.execSQL(java.lang.String):0:0 -> a
    1:1:void createAllTables(android.arch.persistence.db.SupportSQLiteDatabase):0 -> a
    2:2:void createAllTables(android.arch.persistence.db.SupportSQLiteDatabase):0:0 -> a
    3:3:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.execSQL(java.lang.String):0:0 -> a
    3:3:void createAllTables(android.arch.persistence.db.SupportSQLiteDatabase):0 -> a
com.cleanup.todoc.database.dao.ProjectDao -> v0.a:
com.cleanup.todoc.database.dao.ProjectDao_Impl -> v0.d:
    android.arch.persistence.room.RoomDatabase __db -> a
    1:1:void android.arch.persistence.room.SharedSQLiteStatement.<init>(android.arch.persistence.room.RoomDatabase):0:0 -> <init>
    1:1:void android.arch.persistence.room.EntityInsertionAdapter.<init>(android.arch.persistence.room.RoomDatabase):0 -> <init>
    1:1:void com.cleanup.todoc.database.dao.ProjectDao_Impl$1.<init>(com.cleanup.todoc.database.dao.ProjectDao_Impl,android.arch.persistence.room.RoomDatabase):0 -> <init>
    1:1:void <init>(android.arch.persistence.room.RoomDatabase):0 -> <init>
    2:2:void android.arch.persistence.room.SharedSQLiteStatement.<init>(android.arch.persistence.room.RoomDatabase):0:0 -> <init>
    2:2:void android.arch.persistence.room.EntityDeletionOrUpdateAdapter.<init>(android.arch.persistence.room.RoomDatabase):0 -> <init>
    2:2:void com.cleanup.todoc.database.dao.ProjectDao_Impl$2.<init>(com.cleanup.todoc.database.dao.ProjectDao_Impl,android.arch.persistence.room.RoomDatabase):0 -> <init>
    2:2:void <init>(android.arch.persistence.room.RoomDatabase):0 -> <init>
com.cleanup.todoc.database.dao.ProjectDao_Impl$3 -> v0.c:
    android.arch.persistence.room.InvalidationTracker$Observer _observer -> g
    android.arch.persistence.room.RoomSQLiteQuery val$_statement -> h
    com.cleanup.todoc.database.dao.ProjectDao_Impl this$0 -> i
    1:1:java.util.List com.cleanup.todoc.database.dao.ProjectDao_Impl$3.compute():0:0 -> a
    1:1:java.lang.Object compute():0 -> a
    2:2:android.arch.persistence.room.RoomDatabase com.cleanup.todoc.database.dao.ProjectDao_Impl.access$000(com.cleanup.todoc.database.dao.ProjectDao_Impl):0:0 -> a
    2:2:java.util.List com.cleanup.todoc.database.dao.ProjectDao_Impl$3.compute():0 -> a
    2:2:java.lang.Object compute():0 -> a
    3:3:android.arch.persistence.room.InvalidationTracker android.arch.persistence.room.RoomDatabase.getInvalidationTracker():0:0 -> a
    3:3:java.util.List com.cleanup.todoc.database.dao.ProjectDao_Impl$3.compute():0 -> a
    3:3:java.lang.Object compute():0 -> a
    4:4:java.util.List com.cleanup.todoc.database.dao.ProjectDao_Impl$3.compute():0:0 -> a
    4:4:java.lang.Object compute():0 -> a
    5:5:android.arch.persistence.room.RoomDatabase com.cleanup.todoc.database.dao.ProjectDao_Impl.access$000(com.cleanup.todoc.database.dao.ProjectDao_Impl):0:0 -> a
    5:5:java.util.List com.cleanup.todoc.database.dao.ProjectDao_Impl$3.compute():0 -> a
    5:5:java.lang.Object compute():0 -> a
    6:6:java.util.List com.cleanup.todoc.database.dao.ProjectDao_Impl$3.compute():0:0 -> a
    6:6:java.lang.Object compute():0 -> a
    7:7:android.database.Cursor android.arch.persistence.room.RoomDatabase.query(android.arch.persistence.db.SupportSQLiteQuery):0:0 -> a
    7:7:java.util.List com.cleanup.todoc.database.dao.ProjectDao_Impl$3.compute():0 -> a
    7:7:java.lang.Object compute():0 -> a
    8:8:java.util.List com.cleanup.todoc.database.dao.ProjectDao_Impl$3.compute():0:0 -> a
    8:8:java.lang.Object compute():0 -> a
com.cleanup.todoc.database.dao.ProjectDao_Impl$3$1 -> v0.b:
    com.cleanup.todoc.database.dao.ProjectDao_Impl$3 this$1 -> b
    1:1:void android.arch.lifecycle.ComputableLiveData.invalidate():0:0 -> a
    1:1:void onInvalidated(java.util.Set):0 -> a
    2:2:void android.arch.core.executor.TaskExecutor.executeOnMainThread(java.lang.Runnable):0:0 -> a
    2:2:void android.arch.lifecycle.ComputableLiveData.invalidate():0 -> a
    2:2:void onInvalidated(java.util.Set):0 -> a
    3:3:void android.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable):0:0 -> a
    3:3:void android.arch.core.executor.TaskExecutor.executeOnMainThread(java.lang.Runnable):0 -> a
    3:3:void android.arch.lifecycle.ComputableLiveData.invalidate():0 -> a
    3:3:void onInvalidated(java.util.Set):0 -> a
com.cleanup.todoc.database.dao.TaskDao -> v0.e:
com.cleanup.todoc.database.dao.TaskDao_Impl -> v0.f:
    android.arch.persistence.room.RoomDatabase __db -> a
    android.arch.persistence.room.EntityInsertionAdapter __insertionAdapterOfTask -> b
    android.arch.persistence.room.EntityDeletionOrUpdateAdapter __deletionAdapterOfTask -> c
com.cleanup.todoc.database.dao.TaskDao_Impl$1 -> v0.f$a:
    java.lang.String createQuery() -> c
    1:1:long com.cleanup.todoc.model.Task.getId():0:0 -> e
    1:1:void com.cleanup.todoc.database.dao.TaskDao_Impl$1.bind(android.arch.persistence.db.SupportSQLiteStatement,com.cleanup.todoc.model.Task):0 -> e
    1:1:void bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object):0 -> e
    2:2:void com.cleanup.todoc.database.dao.TaskDao_Impl$1.bind(android.arch.persistence.db.SupportSQLiteStatement,com.cleanup.todoc.model.Task):0:0 -> e
    2:2:void bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object):0 -> e
    3:3:java.lang.String com.cleanup.todoc.model.Task.getName():0:0 -> e
    3:3:void com.cleanup.todoc.database.dao.TaskDao_Impl$1.bind(android.arch.persistence.db.SupportSQLiteStatement,com.cleanup.todoc.model.Task):0 -> e
    3:3:void bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object):0 -> e
    4:4:void com.cleanup.todoc.database.dao.TaskDao_Impl$1.bind(android.arch.persistence.db.SupportSQLiteStatement,com.cleanup.todoc.model.Task):0:0 -> e
    4:4:void bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object):0 -> e
com.cleanup.todoc.database.dao.TaskDao_Impl$2 -> v0.f$b:
    java.lang.String createQuery() -> c
    1:1:long com.cleanup.todoc.model.Task.getId():0:0 -> e
    1:1:void com.cleanup.todoc.database.dao.TaskDao_Impl$2.bind(android.arch.persistence.db.SupportSQLiteStatement,com.cleanup.todoc.model.Task):0 -> e
    1:1:void bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object):0 -> e
    2:2:void com.cleanup.todoc.database.dao.TaskDao_Impl$2.bind(android.arch.persistence.db.SupportSQLiteStatement,com.cleanup.todoc.model.Task):0:0 -> e
    2:2:void bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object):0 -> e
com.cleanup.todoc.database.dao.TaskDao_Impl$3 -> v0.h:
    android.arch.persistence.room.InvalidationTracker$Observer _observer -> g
    android.arch.persistence.room.RoomSQLiteQuery val$_statement -> h
    com.cleanup.todoc.database.dao.TaskDao_Impl this$0 -> i
    1:1:java.util.List com.cleanup.todoc.database.dao.TaskDao_Impl$3.compute():0:0 -> a
    1:1:java.lang.Object compute():0 -> a
    2:2:android.arch.persistence.room.RoomDatabase com.cleanup.todoc.database.dao.TaskDao_Impl.access$000(com.cleanup.todoc.database.dao.TaskDao_Impl):0:0 -> a
    2:2:java.util.List com.cleanup.todoc.database.dao.TaskDao_Impl$3.compute():0 -> a
    2:2:java.lang.Object compute():0 -> a
    3:3:android.arch.persistence.room.InvalidationTracker android.arch.persistence.room.RoomDatabase.getInvalidationTracker():0:0 -> a
    3:3:java.util.List com.cleanup.todoc.database.dao.TaskDao_Impl$3.compute():0 -> a
    3:3:java.lang.Object compute():0 -> a
    4:4:java.util.List com.cleanup.todoc.database.dao.TaskDao_Impl$3.compute():0:0 -> a
    4:4:java.lang.Object compute():0 -> a
    5:5:android.arch.persistence.room.RoomDatabase com.cleanup.todoc.database.dao.TaskDao_Impl.access$000(com.cleanup.todoc.database.dao.TaskDao_Impl):0:0 -> a
    5:5:java.util.List com.cleanup.todoc.database.dao.TaskDao_Impl$3.compute():0 -> a
    5:5:java.lang.Object compute():0 -> a
    6:6:java.util.List com.cleanup.todoc.database.dao.TaskDao_Impl$3.compute():0:0 -> a
    6:6:java.lang.Object compute():0 -> a
    7:7:android.database.Cursor android.arch.persistence.room.RoomDatabase.query(android.arch.persistence.db.SupportSQLiteQuery):0:0 -> a
    7:7:java.util.List com.cleanup.todoc.database.dao.TaskDao_Impl$3.compute():0 -> a
    7:7:java.lang.Object compute():0 -> a
    8:8:java.util.List com.cleanup.todoc.database.dao.TaskDao_Impl$3.compute():0:0 -> a
    8:8:java.lang.Object compute():0 -> a
    9:9:void com.cleanup.todoc.model.Task.setId(long):0:0 -> a
    9:9:java.util.List com.cleanup.todoc.database.dao.TaskDao_Impl$3.compute():0 -> a
    9:9:java.lang.Object compute():0 -> a
    10:10:java.util.List com.cleanup.todoc.database.dao.TaskDao_Impl$3.compute():0:0 -> a
    10:10:java.lang.Object compute():0 -> a
com.cleanup.todoc.database.dao.TaskDao_Impl$3$1 -> v0.g:
    com.cleanup.todoc.database.dao.TaskDao_Impl$3 this$1 -> b
    1:1:void android.arch.lifecycle.ComputableLiveData.invalidate():0:0 -> a
    1:1:void onInvalidated(java.util.Set):0 -> a
    2:2:void android.arch.core.executor.TaskExecutor.executeOnMainThread(java.lang.Runnable):0:0 -> a
    2:2:void android.arch.lifecycle.ComputableLiveData.invalidate():0 -> a
    2:2:void onInvalidated(java.util.Set):0 -> a
    3:3:void android.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable):0:0 -> a
    3:3:void android.arch.core.executor.TaskExecutor.executeOnMainThread(java.lang.Runnable):0 -> a
    3:3:void android.arch.lifecycle.ComputableLiveData.invalidate():0 -> a
    3:3:void onInvalidated(java.util.Set):0 -> a
com.cleanup.todoc.model.Project -> w0.a:
    long id -> a
    java.lang.String name -> b
    int color -> c
    1:1:java.lang.String com.cleanup.todoc.model.Project.getName():0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
com.cleanup.todoc.model.Task -> w0.b:
    long projectId -> b
    long id -> a
    long creationTimestamp -> d
    java.lang.String name -> c
    1:1:void com.cleanup.todoc.model.Task.setProjectId(long):0:0 -> <init>
    1:1:void <init>(long,java.lang.String,long):0 -> <init>
    2:2:void com.cleanup.todoc.model.Task.setName(java.lang.String):0:0 -> <init>
    2:2:void <init>(long,java.lang.String,long):0 -> <init>
    3:3:void com.cleanup.todoc.model.Task.setCreationTimestamp(long):0:0 -> <init>
    3:3:void <init>(long,java.lang.String,long):0 -> <init>
com.cleanup.todoc.model.Task$TaskAZComparator -> w0.b$a:
    1:1:java.lang.String com.cleanup.todoc.model.Task.access$000(com.cleanup.todoc.model.Task):0:0 -> compare
    1:1:int com.cleanup.todoc.model.Task$TaskAZComparator.compare(com.cleanup.todoc.model.Task,com.cleanup.todoc.model.Task):0 -> compare
    1:1:int compare(java.lang.Object,java.lang.Object):0 -> compare
    2:2:int com.cleanup.todoc.model.Task$TaskAZComparator.compare(com.cleanup.todoc.model.Task,com.cleanup.todoc.model.Task):0:0 -> compare
    2:2:int compare(java.lang.Object,java.lang.Object):0 -> compare
com.cleanup.todoc.model.Task$TaskOldComparator -> w0.b$b:
    1:1:int com.cleanup.todoc.model.Task$TaskOldComparator.compare(com.cleanup.todoc.model.Task,com.cleanup.todoc.model.Task):0:0 -> compare
    1:1:int compare(java.lang.Object,java.lang.Object):0 -> compare
com.cleanup.todoc.model.Task$TaskRecentComparator -> w0.b$c:
    1:1:int com.cleanup.todoc.model.Task$TaskRecentComparator.compare(com.cleanup.todoc.model.Task,com.cleanup.todoc.model.Task):0:0 -> compare
    1:1:int compare(java.lang.Object,java.lang.Object):0 -> compare
com.cleanup.todoc.model.Task$TaskZAComparator -> w0.b$d:
    1:1:java.lang.String com.cleanup.todoc.model.Task.access$000(com.cleanup.todoc.model.Task):0:0 -> compare
    1:1:int com.cleanup.todoc.model.Task$TaskZAComparator.compare(com.cleanup.todoc.model.Task,com.cleanup.todoc.model.Task):0 -> compare
    1:1:int compare(java.lang.Object,java.lang.Object):0 -> compare
    2:2:int com.cleanup.todoc.model.Task$TaskZAComparator.compare(com.cleanup.todoc.model.Task,com.cleanup.todoc.model.Task):0:0 -> compare
    2:2:int compare(java.lang.Object,java.lang.Object):0 -> compare
com.cleanup.todoc.ui.MainActivity -> com.cleanup.todoc.ui.MainActivity:
    java.util.ArrayList tasks -> o
    com.cleanup.todoc.ui.TaskViewModel taskViewModel -> n
    android.widget.EditText dialogEditText -> s
    android.support.v7.widget.RecyclerView listTasks -> u
    com.cleanup.todoc.ui.MainActivity$SortMethod sortMethod -> q
    com.cleanup.todoc.ui.TasksAdapter adapter -> p
    android.widget.TextView lblNoTasks -> v
    int $r8$clinit -> w
    android.widget.Spinner dialogSpinner -> t
    java.util.List allProjects -> m
    android.support.v7.app.AlertDialog dialog -> r
    1:1:android.arch.lifecycle.LiveData com.cleanup.todoc.ui.TaskViewModel.getAllTasks():0:0 -> n
    1:1:void getTasks():0 -> n
    2:2:android.arch.lifecycle.LiveData com.cleanup.todoc.repositories.TaskDataRepository.getAllTasks():0:0 -> n
    2:2:android.arch.lifecycle.LiveData com.cleanup.todoc.ui.TaskViewModel.getAllTasks():0 -> n
    2:2:void getTasks():0 -> n
    3:3:android.arch.lifecycle.LiveData com.cleanup.todoc.database.dao.TaskDao_Impl.getAllTasks():0:0 -> n
    3:3:android.arch.lifecycle.LiveData com.cleanup.todoc.repositories.TaskDataRepository.getAllTasks():0 -> n
    3:3:android.arch.lifecycle.LiveData com.cleanup.todoc.ui.TaskViewModel.getAllTasks():0 -> n
    3:3:void getTasks():0 -> n
    4:4:android.arch.lifecycle.LiveData android.arch.lifecycle.ComputableLiveData.getLiveData():0:0 -> n
    4:4:android.arch.lifecycle.LiveData com.cleanup.todoc.database.dao.TaskDao_Impl.getAllTasks():0 -> n
    4:4:android.arch.lifecycle.LiveData com.cleanup.todoc.repositories.TaskDataRepository.getAllTasks():0 -> n
    4:4:android.arch.lifecycle.LiveData com.cleanup.todoc.ui.TaskViewModel.getAllTasks():0 -> n
    4:4:void getTasks():0 -> n
    5:5:void getTasks():0:0 -> n
    1:1:void configureRecyclerView():0:0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
    2:2:com.cleanup.todoc.repositories.ProjectDataRepository com.cleanup.todoc.injections.Injection.provideProjectDataSource(android.content.Context):0:0 -> onCreate
    2:2:com.cleanup.todoc.injections.ViewModelFactory com.cleanup.todoc.injections.Injection.provideViewModelFactory(android.content.Context):0 -> onCreate
    2:2:void configureViewModel():0 -> onCreate
    2:2:void onCreate(android.os.Bundle):0 -> onCreate
    3:3:com.cleanup.todoc.repositories.TaskDataRepository com.cleanup.todoc.injections.Injection.provideTaskDataSource(android.content.Context):0:0 -> onCreate
    3:3:com.cleanup.todoc.injections.ViewModelFactory com.cleanup.todoc.injections.Injection.provideViewModelFactory(android.content.Context):0 -> onCreate
    3:3:void configureViewModel():0 -> onCreate
    3:3:void onCreate(android.os.Bundle):0 -> onCreate
    4:4:java.util.concurrent.Executor com.cleanup.todoc.injections.Injection.provideExecutor():0:0 -> onCreate
    4:4:com.cleanup.todoc.injections.ViewModelFactory com.cleanup.todoc.injections.Injection.provideViewModelFactory(android.content.Context):0 -> onCreate
    4:4:void configureViewModel():0 -> onCreate
    4:4:void onCreate(android.os.Bundle):0 -> onCreate
    5:5:android.app.Application android.arch.lifecycle.ViewModelProviders.checkApplication(android.app.Activity):0:0 -> onCreate
    5:5:android.arch.lifecycle.ViewModelProvider android.arch.lifecycle.ViewModelProviders.of(android.support.v4.app.FragmentActivity,android.arch.lifecycle.ViewModelProvider$Factory):0 -> onCreate
    5:5:void configureViewModel():0 -> onCreate
    5:5:void onCreate(android.os.Bundle):0 -> onCreate
    6:6:android.arch.lifecycle.ViewModelStore android.arch.lifecycle.ViewModelStores.of(android.support.v4.app.FragmentActivity):0:0 -> onCreate
    6:6:android.arch.lifecycle.ViewModelProvider android.arch.lifecycle.ViewModelProviders.of(android.support.v4.app.FragmentActivity,android.arch.lifecycle.ViewModelProvider$Factory):0 -> onCreate
    6:6:void configureViewModel():0 -> onCreate
    6:6:void onCreate(android.os.Bundle):0 -> onCreate
    7:7:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.Class):0:0 -> onCreate
    7:7:void configureViewModel():0 -> onCreate
    7:7:void onCreate(android.os.Bundle):0 -> onCreate
    8:8:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelStore.get(java.lang.String):0:0 -> onCreate
    8:8:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0 -> onCreate
    8:8:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> onCreate
    8:8:void configureViewModel():0 -> onCreate
    8:8:void onCreate(android.os.Bundle):0 -> onCreate
    9:9:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0:0 -> onCreate
    9:9:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> onCreate
    9:9:void configureViewModel():0 -> onCreate
    9:9:void onCreate(android.os.Bundle):0 -> onCreate
    10:10:android.arch.lifecycle.ViewModel com.cleanup.todoc.injections.ViewModelFactory.create(java.lang.Class):0:0 -> onCreate
    10:10:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0 -> onCreate
    10:10:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> onCreate
    10:10:void configureViewModel():0 -> onCreate
    10:10:void onCreate(android.os.Bundle):0 -> onCreate
    11:11:void android.arch.lifecycle.ViewModelStore.put(java.lang.String,android.arch.lifecycle.ViewModel):0:0 -> onCreate
    11:11:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0 -> onCreate
    11:11:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> onCreate
    11:11:void configureViewModel():0 -> onCreate
    11:11:void onCreate(android.os.Bundle):0 -> onCreate
    12:12:void configureViewModel():0:0 -> onCreate
    12:12:void onCreate(android.os.Bundle):0 -> onCreate
    13:13:android.arch.lifecycle.LiveData com.cleanup.todoc.ui.TaskViewModel.getAllProjects():0:0 -> onCreate
    13:13:void com.cleanup.todoc.ui.TaskViewModel.init():0 -> onCreate
    13:13:void configureViewModel():0 -> onCreate
    13:13:void onCreate(android.os.Bundle):0 -> onCreate
    14:14:void com.cleanup.todoc.ui.TaskViewModel.init():0:0 -> onCreate
    14:14:void configureViewModel():0 -> onCreate
    14:14:void onCreate(android.os.Bundle):0 -> onCreate
    15:15:void getProjects():0:0 -> onCreate
    15:15:void onCreate(android.os.Bundle):0 -> onCreate
    16:16:android.arch.lifecycle.LiveData com.cleanup.todoc.ui.TaskViewModel.getAllProjects():0:0 -> onCreate
    16:16:void getProjects():0 -> onCreate
    16:16:void onCreate(android.os.Bundle):0 -> onCreate
    17:17:void getProjects():0:0 -> onCreate
    17:17:void onCreate(android.os.Bundle):0 -> onCreate
    18:18:void onCreate(android.os.Bundle):0:0 -> onCreate
    19:19:android.arch.lifecycle.ViewModel com.cleanup.todoc.injections.ViewModelFactory.create(java.lang.Class):0:0 -> onCreate
    19:19:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0 -> onCreate
    19:19:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> onCreate
    19:19:void configureViewModel():0 -> onCreate
    19:19:void onCreate(android.os.Bundle):0 -> onCreate
    20:20:android.arch.lifecycle.ViewModel android.arch.lifecycle.ViewModelProvider.get(java.lang.Class):0:0 -> onCreate
    20:20:void configureViewModel():0 -> onCreate
    20:20:void onCreate(android.os.Bundle):0 -> onCreate
    21:21:android.app.Application android.arch.lifecycle.ViewModelProviders.checkApplication(android.app.Activity):0:0 -> onCreate
    21:21:android.arch.lifecycle.ViewModelProvider android.arch.lifecycle.ViewModelProviders.of(android.support.v4.app.FragmentActivity,android.arch.lifecycle.ViewModelProvider$Factory):0 -> onCreate
    21:21:void configureViewModel():0 -> onCreate
    21:21:void onCreate(android.os.Bundle):0 -> onCreate
com.cleanup.todoc.ui.MainActivity$1 -> x0.b:
    com.cleanup.todoc.ui.MainActivity this$0 -> b
    1:1:void com.cleanup.todoc.ui.MainActivity.access$000(com.cleanup.todoc.ui.MainActivity):0:0 -> onClick
    1:1:void onClick(android.view.View):0 -> onClick
    2:2:android.support.v7.app.AlertDialog com.cleanup.todoc.ui.MainActivity.getAddTaskDialog():0:0 -> onClick
    2:2:void com.cleanup.todoc.ui.MainActivity.showAddTaskDialog():0 -> onClick
    2:2:void com.cleanup.todoc.ui.MainActivity.access$000(com.cleanup.todoc.ui.MainActivity):0 -> onClick
    2:2:void onClick(android.view.View):0 -> onClick
    3:3:android.support.v7.app.AlertDialog$Builder android.support.v7.app.AlertDialog$Builder.setTitle(int):0:0 -> onClick
    3:3:android.support.v7.app.AlertDialog com.cleanup.todoc.ui.MainActivity.getAddTaskDialog():0 -> onClick
    3:3:void com.cleanup.todoc.ui.MainActivity.showAddTaskDialog():0 -> onClick
    3:3:void com.cleanup.todoc.ui.MainActivity.access$000(com.cleanup.todoc.ui.MainActivity):0 -> onClick
    3:3:void onClick(android.view.View):0 -> onClick
    4:4:android.support.v7.app.AlertDialog$Builder android.support.v7.app.AlertDialog$Builder.setView(int):0:0 -> onClick
    4:4:android.support.v7.app.AlertDialog com.cleanup.todoc.ui.MainActivity.getAddTaskDialog():0 -> onClick
    4:4:void com.cleanup.todoc.ui.MainActivity.showAddTaskDialog():0 -> onClick
    4:4:void com.cleanup.todoc.ui.MainActivity.access$000(com.cleanup.todoc.ui.MainActivity):0 -> onClick
    4:4:void onClick(android.view.View):0 -> onClick
    5:5:android.support.v7.app.AlertDialog$Builder android.support.v7.app.AlertDialog$Builder.setPositiveButton(int,android.content.DialogInterface$OnClickListener):0:0 -> onClick
    5:5:android.support.v7.app.AlertDialog com.cleanup.todoc.ui.MainActivity.getAddTaskDialog():0 -> onClick
    5:5:void com.cleanup.todoc.ui.MainActivity.showAddTaskDialog():0 -> onClick
    5:5:void com.cleanup.todoc.ui.MainActivity.access$000(com.cleanup.todoc.ui.MainActivity):0 -> onClick
    5:5:void onClick(android.view.View):0 -> onClick
    6:6:android.support.v7.app.AlertDialog com.cleanup.todoc.ui.MainActivity.getAddTaskDialog():0:0 -> onClick
    6:6:void com.cleanup.todoc.ui.MainActivity.showAddTaskDialog():0 -> onClick
    6:6:void com.cleanup.todoc.ui.MainActivity.access$000(com.cleanup.todoc.ui.MainActivity):0 -> onClick
    6:6:void onClick(android.view.View):0 -> onClick
    7:7:android.support.v7.app.AlertDialog$Builder android.support.v7.app.AlertDialog$Builder.setOnDismissListener(android.content.DialogInterface$OnDismissListener):0:0 -> onClick
    7:7:android.support.v7.app.AlertDialog com.cleanup.todoc.ui.MainActivity.getAddTaskDialog():0 -> onClick
    7:7:void com.cleanup.todoc.ui.MainActivity.showAddTaskDialog():0 -> onClick
    7:7:void com.cleanup.todoc.ui.MainActivity.access$000(com.cleanup.todoc.ui.MainActivity):0 -> onClick
    7:7:void onClick(android.view.View):0 -> onClick
    8:8:android.support.v7.app.AlertDialog com.cleanup.todoc.ui.MainActivity.getAddTaskDialog():0:0 -> onClick
    8:8:void com.cleanup.todoc.ui.MainActivity.showAddTaskDialog():0 -> onClick
    8:8:void com.cleanup.todoc.ui.MainActivity.access$000(com.cleanup.todoc.ui.MainActivity):0 -> onClick
    8:8:void onClick(android.view.View):0 -> onClick
    9:9:void com.cleanup.todoc.ui.MainActivity.showAddTaskDialog():0:0 -> onClick
    9:9:void com.cleanup.todoc.ui.MainActivity.access$000(com.cleanup.todoc.ui.MainActivity):0 -> onClick
    9:9:void onClick(android.view.View):0 -> onClick
    10:10:void com.cleanup.todoc.ui.MainActivity.populateDialogSpinner():0:0 -> onClick
    10:10:void com.cleanup.todoc.ui.MainActivity.showAddTaskDialog():0 -> onClick
    10:10:void com.cleanup.todoc.ui.MainActivity.access$000(com.cleanup.todoc.ui.MainActivity):0 -> onClick
    10:10:void onClick(android.view.View):0 -> onClick
com.cleanup.todoc.ui.MainActivity$2 -> x0.c:
    com.cleanup.todoc.ui.MainActivity this$0 -> b
    1:1:android.widget.EditText com.cleanup.todoc.ui.MainActivity.access$102(com.cleanup.todoc.ui.MainActivity,android.widget.EditText):0:0 -> onDismiss
    1:1:void onDismiss(android.content.DialogInterface):0 -> onDismiss
    2:2:android.widget.Spinner com.cleanup.todoc.ui.MainActivity.access$202(com.cleanup.todoc.ui.MainActivity,android.widget.Spinner):0:0 -> onDismiss
    2:2:void onDismiss(android.content.DialogInterface):0 -> onDismiss
    3:3:void onDismiss(android.content.DialogInterface):0:0 -> onDismiss
com.cleanup.todoc.ui.MainActivity$3 -> x0.d:
    com.cleanup.todoc.ui.MainActivity this$0 -> a
    1:1:android.widget.Button android.support.v7.app.AlertDialog.getButton(int):0:0 -> onShow
    1:1:void onShow(android.content.DialogInterface):0 -> onShow
    2:2:android.widget.Button android.support.v7.app.AlertController.getButton(int):0:0 -> onShow
    2:2:android.widget.Button android.support.v7.app.AlertDialog.getButton(int):0 -> onShow
    2:2:void onShow(android.content.DialogInterface):0 -> onShow
    3:3:void onShow(android.content.DialogInterface):0:0 -> onShow
com.cleanup.todoc.ui.MainActivity$3$1 -> x0.d$a:
    com.cleanup.todoc.ui.MainActivity$3 this$1 -> b
    1:1:void com.cleanup.todoc.ui.MainActivity.onPositiveButtonClick(android.content.DialogInterface):0:0 -> onClick
    1:1:void com.cleanup.todoc.ui.MainActivity.access$300(com.cleanup.todoc.ui.MainActivity,android.content.DialogInterface):0 -> onClick
    1:1:void onClick(android.view.View):0 -> onClick
    2:2:long com.cleanup.todoc.model.Project.getId():0:0 -> onClick
    2:2:void com.cleanup.todoc.ui.MainActivity.onPositiveButtonClick(android.content.DialogInterface):0 -> onClick
    2:2:void com.cleanup.todoc.ui.MainActivity.access$300(com.cleanup.todoc.ui.MainActivity,android.content.DialogInterface):0 -> onClick
    2:2:void onClick(android.view.View):0 -> onClick
    3:3:void com.cleanup.todoc.ui.MainActivity.onPositiveButtonClick(android.content.DialogInterface):0:0 -> onClick
    3:3:void com.cleanup.todoc.ui.MainActivity.access$300(com.cleanup.todoc.ui.MainActivity,android.content.DialogInterface):0 -> onClick
    3:3:void onClick(android.view.View):0 -> onClick
    4:4:void com.cleanup.todoc.ui.MainActivity.addTask(com.cleanup.todoc.model.Task):0:0 -> onClick
    4:4:void com.cleanup.todoc.ui.MainActivity.onPositiveButtonClick(android.content.DialogInterface):0 -> onClick
    4:4:void com.cleanup.todoc.ui.MainActivity.access$300(com.cleanup.todoc.ui.MainActivity,android.content.DialogInterface):0 -> onClick
    4:4:void onClick(android.view.View):0 -> onClick
    5:5:void com.cleanup.todoc.ui.TaskViewModel.insertTask(com.cleanup.todoc.model.Task):0:0 -> onClick
    5:5:void com.cleanup.todoc.ui.MainActivity.addTask(com.cleanup.todoc.model.Task):0 -> onClick
    5:5:void com.cleanup.todoc.ui.MainActivity.onPositiveButtonClick(android.content.DialogInterface):0 -> onClick
    5:5:void com.cleanup.todoc.ui.MainActivity.access$300(com.cleanup.todoc.ui.MainActivity,android.content.DialogInterface):0 -> onClick
    5:5:void onClick(android.view.View):0 -> onClick
    6:6:void com.cleanup.todoc.ui.MainActivity.onPositiveButtonClick(android.content.DialogInterface):0:0 -> onClick
    6:6:void com.cleanup.todoc.ui.MainActivity.access$300(com.cleanup.todoc.ui.MainActivity,android.content.DialogInterface):0 -> onClick
    6:6:void onClick(android.view.View):0 -> onClick
com.cleanup.todoc.ui.MainActivity$SortMethod$r8$EnumUnboxingUtility -> x0.e:
    int $enumboxing$ordinal(int) -> a
com.cleanup.todoc.ui.TaskViewModel -> com.cleanup.todoc.ui.TaskViewModel:
    com.cleanup.todoc.repositories.ProjectDataRepository projectDataRepository -> a
    com.cleanup.todoc.repositories.TaskDataRepository taskDataRepository -> b
    java.util.concurrent.Executor executor -> c
com.cleanup.todoc.ui.TasksAdapter -> com.cleanup.todoc.ui.a:
    java.util.List tasks -> b
    com.cleanup.todoc.ui.TasksAdapter$DeleteTaskListener deleteTaskListener -> c
    int getItemCount() -> a
com.cleanup.todoc.ui.TasksAdapter$DeleteTaskListener -> com.cleanup.todoc.ui.a$a:
com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder -> com.cleanup.todoc.ui.a$b:
    android.widget.TextView lblTaskName -> u
    android.support.v7.widget.AppCompatImageView imgDelete -> w
    android.widget.TextView lblProjectName -> v
    android.support.v7.widget.AppCompatImageView imgProject -> t
    com.cleanup.todoc.ui.TasksAdapter$DeleteTaskListener deleteTaskListener -> x
com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder$1 -> com.cleanup.todoc.ui.a$b$a:
    com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder this$1 -> b
    1:1:com.cleanup.todoc.ui.TasksAdapter$DeleteTaskListener com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder.access$000(com.cleanup.todoc.ui.TasksAdapter$TaskViewHolder):0:0 -> onClick
    1:1:void onClick(android.view.View):0 -> onClick
    2:2:void onClick(android.view.View):0:0 -> onClick
    3:3:void com.cleanup.todoc.ui.MainActivity.onDeleteTask(com.cleanup.todoc.model.Task):0:0 -> onClick
    3:3:void onClick(android.view.View):0 -> onClick
    4:4:void com.cleanup.todoc.ui.TaskViewModel.deleteTask(com.cleanup.todoc.model.Task):0:0 -> onClick
    4:4:void com.cleanup.todoc.ui.MainActivity.onDeleteTask(com.cleanup.todoc.model.Task):0 -> onClick
    4:4:void onClick(android.view.View):0 -> onClick
o0.AnimatedStateListDrawableCompat$$ExternalSyntheticOutline0 -> o0.a:
    java.lang.String android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$$InternalSyntheticOutline$95$b55fea20cb1443deba0db194a6b736ec48558e4f87c9f23bfc3fa28df412f972$0.m(org.xmlpull.v1.XmlPullParser,java.lang.StringBuilder,java.lang.String) -> a
s0.ChildHelper$$ExternalSyntheticOutline0 -> s0.c0:
    java.lang.String android.support.v7.widget.ChildHelper$$InternalSyntheticOutline$95$68080bc24b2d6993d1ae1a3df5d53a2eb808110d4aaedd499c805f29ec44e26d$0.m(android.support.v7.widget.RecyclerView,java.lang.StringBuilder) -> a
x0.MainActivity$$ExternalSyntheticLambda0 -> x0.a:
    int com.cleanup.todoc.ui.MainActivity$$InternalSyntheticLambda$0$4b1de1a21ca06e5f8d2e8de00501b9b024190b7cb5dcd00b0096121832bb7051$0.$r8$classId -> a
    com.cleanup.todoc.ui.MainActivity com.cleanup.todoc.ui.MainActivity$$InternalSyntheticLambda$0$4b1de1a21ca06e5f8d2e8de00501b9b024190b7cb5dcd00b0096121832bb7051$0.f$0 -> b
    void com.cleanup.todoc.ui.MainActivity$$InternalSyntheticLambda$0$4b1de1a21ca06e5f8d2e8de00501b9b024190b7cb5dcd00b0096121832bb7051$0.$r8$init$bridge(com.cleanup.todoc.ui.MainActivity) -> <init>
x0.TaskViewModel$$ExternalSyntheticLambda0 -> x0.f:
    com.cleanup.todoc.ui.TaskViewModel com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.f$0 -> c
    int com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.$r8$classId -> b
    com.cleanup.todoc.model.Task com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.f$1 -> d
    void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.$r8$init$bridge(com.cleanup.todoc.ui.TaskViewModel,com.cleanup.todoc.model.Task) -> <init>
    1:1:void com.cleanup.todoc.ui.TaskViewModel.lambda$insertTask$1(com.cleanup.todoc.model.Task):0:0 -> run
    1:1:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    2:2:void com.cleanup.todoc.repositories.TaskDataRepository.insertTask(com.cleanup.todoc.model.Task):0:0 -> run
    2:2:void com.cleanup.todoc.ui.TaskViewModel.lambda$insertTask$1(com.cleanup.todoc.model.Task):0 -> run
    2:2:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    3:3:void com.cleanup.todoc.database.dao.TaskDao_Impl.insertTask(com.cleanup.todoc.model.Task):0:0 -> run
    3:3:void com.cleanup.todoc.repositories.TaskDataRepository.insertTask(com.cleanup.todoc.model.Task):0 -> run
    3:3:void com.cleanup.todoc.ui.TaskViewModel.lambda$insertTask$1(com.cleanup.todoc.model.Task):0 -> run
    3:3:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    4:4:void android.arch.persistence.room.EntityInsertionAdapter.insert(java.lang.Object):0:0 -> run
    4:4:void com.cleanup.todoc.database.dao.TaskDao_Impl.insertTask(com.cleanup.todoc.model.Task):0 -> run
    4:4:void com.cleanup.todoc.repositories.TaskDataRepository.insertTask(com.cleanup.todoc.model.Task):0 -> run
    4:4:void com.cleanup.todoc.ui.TaskViewModel.lambda$insertTask$1(com.cleanup.todoc.model.Task):0 -> run
    4:4:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    5:5:long android.arch.persistence.db.framework.FrameworkSQLiteStatement.executeInsert():0:0 -> run
    5:5:void android.arch.persistence.room.EntityInsertionAdapter.insert(java.lang.Object):0 -> run
    5:5:void com.cleanup.todoc.database.dao.TaskDao_Impl.insertTask(com.cleanup.todoc.model.Task):0 -> run
    5:5:void com.cleanup.todoc.repositories.TaskDataRepository.insertTask(com.cleanup.todoc.model.Task):0 -> run
    5:5:void com.cleanup.todoc.ui.TaskViewModel.lambda$insertTask$1(com.cleanup.todoc.model.Task):0 -> run
    5:5:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    6:6:void android.arch.persistence.room.SharedSQLiteStatement.release(android.arch.persistence.db.SupportSQLiteStatement):0:0 -> run
    6:6:void android.arch.persistence.room.EntityInsertionAdapter.insert(java.lang.Object):0 -> run
    6:6:void com.cleanup.todoc.database.dao.TaskDao_Impl.insertTask(com.cleanup.todoc.model.Task):0 -> run
    6:6:void com.cleanup.todoc.repositories.TaskDataRepository.insertTask(com.cleanup.todoc.model.Task):0 -> run
    6:6:void com.cleanup.todoc.ui.TaskViewModel.lambda$insertTask$1(com.cleanup.todoc.model.Task):0 -> run
    6:6:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    7:7:void com.cleanup.todoc.database.dao.TaskDao_Impl.insertTask(com.cleanup.todoc.model.Task):0:0 -> run
    7:7:void com.cleanup.todoc.repositories.TaskDataRepository.insertTask(com.cleanup.todoc.model.Task):0 -> run
    7:7:void com.cleanup.todoc.ui.TaskViewModel.lambda$insertTask$1(com.cleanup.todoc.model.Task):0 -> run
    7:7:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    8:8:void android.arch.persistence.room.RoomDatabase.setTransactionSuccessful():0:0 -> run
    8:8:void com.cleanup.todoc.database.dao.TaskDao_Impl.insertTask(com.cleanup.todoc.model.Task):0 -> run
    8:8:void com.cleanup.todoc.repositories.TaskDataRepository.insertTask(com.cleanup.todoc.model.Task):0 -> run
    8:8:void com.cleanup.todoc.ui.TaskViewModel.lambda$insertTask$1(com.cleanup.todoc.model.Task):0 -> run
    8:8:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    9:9:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.setTransactionSuccessful():0:0 -> run
    9:9:void android.arch.persistence.room.RoomDatabase.setTransactionSuccessful():0 -> run
    9:9:void com.cleanup.todoc.database.dao.TaskDao_Impl.insertTask(com.cleanup.todoc.model.Task):0 -> run
    9:9:void com.cleanup.todoc.repositories.TaskDataRepository.insertTask(com.cleanup.todoc.model.Task):0 -> run
    9:9:void com.cleanup.todoc.ui.TaskViewModel.lambda$insertTask$1(com.cleanup.todoc.model.Task):0 -> run
    9:9:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    10:10:void com.cleanup.todoc.database.dao.TaskDao_Impl.insertTask(com.cleanup.todoc.model.Task):0:0 -> run
    10:10:void com.cleanup.todoc.repositories.TaskDataRepository.insertTask(com.cleanup.todoc.model.Task):0 -> run
    10:10:void com.cleanup.todoc.ui.TaskViewModel.lambda$insertTask$1(com.cleanup.todoc.model.Task):0 -> run
    10:10:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    11:11:void android.arch.persistence.room.EntityInsertionAdapter.insert(java.lang.Object):0:0 -> run
    11:11:void com.cleanup.todoc.database.dao.TaskDao_Impl.insertTask(com.cleanup.todoc.model.Task):0 -> run
    11:11:void com.cleanup.todoc.repositories.TaskDataRepository.insertTask(com.cleanup.todoc.model.Task):0 -> run
    11:11:void com.cleanup.todoc.ui.TaskViewModel.lambda$insertTask$1(com.cleanup.todoc.model.Task):0 -> run
    11:11:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    12:12:void com.cleanup.todoc.database.dao.TaskDao_Impl.insertTask(com.cleanup.todoc.model.Task):0:0 -> run
    12:12:void com.cleanup.todoc.repositories.TaskDataRepository.insertTask(com.cleanup.todoc.model.Task):0 -> run
    12:12:void com.cleanup.todoc.ui.TaskViewModel.lambda$insertTask$1(com.cleanup.todoc.model.Task):0 -> run
    12:12:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    13:13:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0:0 -> run
    14:14:void com.cleanup.todoc.ui.TaskViewModel.lambda$deleteTask$2(com.cleanup.todoc.model.Task):0:0 -> run
    14:14:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    15:15:void com.cleanup.todoc.repositories.TaskDataRepository.deleteTask(com.cleanup.todoc.model.Task):0:0 -> run
    15:15:void com.cleanup.todoc.ui.TaskViewModel.lambda$deleteTask$2(com.cleanup.todoc.model.Task):0 -> run
    15:15:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    16:16:void com.cleanup.todoc.database.dao.TaskDao_Impl.deleteTask(com.cleanup.todoc.model.Task):0:0 -> run
    16:16:void com.cleanup.todoc.repositories.TaskDataRepository.deleteTask(com.cleanup.todoc.model.Task):0 -> run
    16:16:void com.cleanup.todoc.ui.TaskViewModel.lambda$deleteTask$2(com.cleanup.todoc.model.Task):0 -> run
    16:16:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    17:17:int android.arch.persistence.room.EntityDeletionOrUpdateAdapter.handle(java.lang.Object):0:0 -> run
    17:17:void com.cleanup.todoc.database.dao.TaskDao_Impl.deleteTask(com.cleanup.todoc.model.Task):0 -> run
    17:17:void com.cleanup.todoc.repositories.TaskDataRepository.deleteTask(com.cleanup.todoc.model.Task):0 -> run
    17:17:void com.cleanup.todoc.ui.TaskViewModel.lambda$deleteTask$2(com.cleanup.todoc.model.Task):0 -> run
    17:17:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    18:18:int android.arch.persistence.db.framework.FrameworkSQLiteStatement.executeUpdateDelete():0:0 -> run
    18:18:int android.arch.persistence.room.EntityDeletionOrUpdateAdapter.handle(java.lang.Object):0 -> run
    18:18:void com.cleanup.todoc.database.dao.TaskDao_Impl.deleteTask(com.cleanup.todoc.model.Task):0 -> run
    18:18:void com.cleanup.todoc.repositories.TaskDataRepository.deleteTask(com.cleanup.todoc.model.Task):0 -> run
    18:18:void com.cleanup.todoc.ui.TaskViewModel.lambda$deleteTask$2(com.cleanup.todoc.model.Task):0 -> run
    18:18:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    19:19:void android.arch.persistence.room.SharedSQLiteStatement.release(android.arch.persistence.db.SupportSQLiteStatement):0:0 -> run
    19:19:int android.arch.persistence.room.EntityDeletionOrUpdateAdapter.handle(java.lang.Object):0 -> run
    19:19:void com.cleanup.todoc.database.dao.TaskDao_Impl.deleteTask(com.cleanup.todoc.model.Task):0 -> run
    19:19:void com.cleanup.todoc.repositories.TaskDataRepository.deleteTask(com.cleanup.todoc.model.Task):0 -> run
    19:19:void com.cleanup.todoc.ui.TaskViewModel.lambda$deleteTask$2(com.cleanup.todoc.model.Task):0 -> run
    19:19:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    20:20:void com.cleanup.todoc.database.dao.TaskDao_Impl.deleteTask(com.cleanup.todoc.model.Task):0:0 -> run
    20:20:void com.cleanup.todoc.repositories.TaskDataRepository.deleteTask(com.cleanup.todoc.model.Task):0 -> run
    20:20:void com.cleanup.todoc.ui.TaskViewModel.lambda$deleteTask$2(com.cleanup.todoc.model.Task):0 -> run
    20:20:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    21:21:void android.arch.persistence.room.RoomDatabase.setTransactionSuccessful():0:0 -> run
    21:21:void com.cleanup.todoc.database.dao.TaskDao_Impl.deleteTask(com.cleanup.todoc.model.Task):0 -> run
    21:21:void com.cleanup.todoc.repositories.TaskDataRepository.deleteTask(com.cleanup.todoc.model.Task):0 -> run
    21:21:void com.cleanup.todoc.ui.TaskViewModel.lambda$deleteTask$2(com.cleanup.todoc.model.Task):0 -> run
    21:21:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    22:22:void android.arch.persistence.db.framework.FrameworkSQLiteDatabase.setTransactionSuccessful():0:0 -> run
    22:22:void android.arch.persistence.room.RoomDatabase.setTransactionSuccessful():0 -> run
    22:22:void com.cleanup.todoc.database.dao.TaskDao_Impl.deleteTask(com.cleanup.todoc.model.Task):0 -> run
    22:22:void com.cleanup.todoc.repositories.TaskDataRepository.deleteTask(com.cleanup.todoc.model.Task):0 -> run
    22:22:void com.cleanup.todoc.ui.TaskViewModel.lambda$deleteTask$2(com.cleanup.todoc.model.Task):0 -> run
    22:22:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    23:23:void com.cleanup.todoc.database.dao.TaskDao_Impl.deleteTask(com.cleanup.todoc.model.Task):0:0 -> run
    23:23:void com.cleanup.todoc.repositories.TaskDataRepository.deleteTask(com.cleanup.todoc.model.Task):0 -> run
    23:23:void com.cleanup.todoc.ui.TaskViewModel.lambda$deleteTask$2(com.cleanup.todoc.model.Task):0 -> run
    23:23:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    24:24:int android.arch.persistence.room.EntityDeletionOrUpdateAdapter.handle(java.lang.Object):0:0 -> run
    24:24:void com.cleanup.todoc.database.dao.TaskDao_Impl.deleteTask(com.cleanup.todoc.model.Task):0 -> run
    24:24:void com.cleanup.todoc.repositories.TaskDataRepository.deleteTask(com.cleanup.todoc.model.Task):0 -> run
    24:24:void com.cleanup.todoc.ui.TaskViewModel.lambda$deleteTask$2(com.cleanup.todoc.model.Task):0 -> run
    24:24:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
    25:25:void com.cleanup.todoc.database.dao.TaskDao_Impl.deleteTask(com.cleanup.todoc.model.Task):0:0 -> run
    25:25:void com.cleanup.todoc.repositories.TaskDataRepository.deleteTask(com.cleanup.todoc.model.Task):0 -> run
    25:25:void com.cleanup.todoc.ui.TaskViewModel.lambda$deleteTask$2(com.cleanup.todoc.model.Task):0 -> run
    25:25:void com.cleanup.todoc.ui.TaskViewModel$$InternalSyntheticLambda$0$dd4c5c9751b0374fdaaa8db590912b5becc4c5a84a98f0b060f4859fddcdfbba$0.run$bridge():0 -> run
